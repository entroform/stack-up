{"version":3,"sources":["rocket.ts","../node_modules/@babel/runtime/helpers/classCallCheck.js","../node_modules/@babel/runtime/helpers/createClass.js","core/num.ts","core/util.ts","core/string-util.ts","../node_modules/@babel/runtime/helpers/typeof.js","dom/dom-util.ts","dom/dom-image.ts","dom/dom-traverse.ts","dom/dom-style.ts","dom/dom-text.ts","dom/dom-align.ts","../node_modules/@babel/runtime/helpers/arrayWithoutHoles.js","../node_modules/@babel/runtime/helpers/iterableToArray.js","../node_modules/@babel/runtime/helpers/nonIterableSpread.js","../node_modules/@babel/runtime/helpers/toConsumableArray.js","dom/dom-view.ts","dom/dom-offset.ts","dom/dom-point.ts","dom/dom-rect.ts","dom/dom-scroll.ts","viewport.ts","two/angle.ts","two/geo-2-util.ts","two/point.ts","two/vector-2.ts","two/vector-2-group.ts","two/rect-helper.ts","animation/animation-config.ts","../node_modules/regenerator-runtime/runtime.js","../node_modules/@babel/runtime/regenerator/index.js","animation/animation-core.ts","animation/animation.ts","animation-timeline.ts","easings.ts","canvas/canvas-draw.ts","canvas/canvas-layer.ts","canvas/canvas-layer-manager.ts","color/convert-color.ts","color/color.ts","drag-event-manager/mouse-sensor.ts","drag-event-manager/touch-sensor.ts","drag-event-manager/drag-event.ts","drag-event-manager/sensor-hub.ts","drag-event-manager/drag-event-manager-config.ts","drag-event-manager/drag-event-manager.ts","pointer-event-manager/pointer-drag-event-manager.ts","pointer-event-manager/pointer-move-event-manager.ts","scroll/scroll-trigger-manager.ts","text/text-box-model.ts","../node_modules/@babel/runtime/helpers/arrayWithHoles.js","../node_modules/@babel/runtime/helpers/iterableToArrayLimit.js","../node_modules/@babel/runtime/helpers/nonIterableRest.js","../node_modules/@babel/runtime/helpers/slicedToArray.js","text/text-scale-model.ts","controls/sortable-list/config.ts","controls/sortable-list/element-manager.ts","controls/sortable-list/event-manager.ts","controls/sortable-list/sortable-transition.ts","controls/sortable-list/dummy.ts","controls/sortable-list/active-item.ts","controls/sortable-list/sortable-list.ts","controls/text-area-field.ts","controls/input-active-manager.ts","controls/mono-knob-slider.ts","controls/duo-knob-slider.ts","html-controller/mono-controller/config.ts","html-controller/mono-controller/item-manager.ts","html-controller/mono-controller/event-manager.ts","html-controller/mono-controller/action-manager.ts","html-controller/mono-controller/mono-controller.ts","html-controller/poly-controller/config.ts","html-controller/poly-controller/item-manager.ts","html-controller/poly-controller/event-manager.ts","html-controller/poly-controller/action-manager.ts","html-controller/poly-controller/poly-controller.ts","html-controller/sequence-controller/config.ts","html-controller/sequence-controller/item-manager.ts","html-controller/sequence-controller/event-manager.ts","html-controller/sequence-controller/action-manager.ts","html-controller/sequence-controller/sequence-controller.ts","repeater.ts","stack-up/stack-up-config.ts","stack-up/stack-up-layout.ts","stack-up/stack-up.ts","../stack-up/stack-up-config.ts","../stack-up/stack-up-layout.ts","../stack-up/stack-up.ts","assets/javascripts/main.ts"],"names":[],"mappings":"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","file":"main.3fcd897c.js","sourceRoot":"../source","sourcesContent":["// @core\nexport * from './core/num';\nexport * from './core/util';\nexport * from './core/string-util';\n\n// @dom\nexport * from './dom/dom-util';\n\nexport * from './dom/dom-image';\n\nexport * from './dom/dom-traverse';\nexport * from './dom/dom-style';\nexport * from './dom/dom-text';\n\nexport * from './dom/dom-align';\nexport * from './dom/dom-view';\n\nexport * from './dom/dom-offset';\nexport * from './dom/dom-point';\nexport * from './dom/dom-rect';\n\nexport * from './dom/dom-scroll';\n\n// @viewport\nexport * from './viewport';\n\n// @two\nexport * from './two/angle';\nexport * from './two/geo-2-util';\nexport * from './two/point';\nexport * from './two/vector-2';\nexport * from './two/vector-2-group';\nexport * from './two/rect-helper';\n\n// @animation\nexport * from './animation/animation';\nexport * from './animation-timeline';\nexport * from './easings';\n\n// @canvas\nexport * from './canvas/canvas-draw';\nexport * from './canvas/canvas-layer';\nexport * from './canvas/canvas-layer-manager';\n\n// @color\nexport * from './color/convert-color';\nexport * from './color/color';\n\n// @dragEventManager\nexport * from './drag-event-manager/drag-event-manager';\n\n// @pointerEventManager\nexport * from './pointer-event-manager/pointer-drag-event-manager';\nexport * from './pointer-event-manager/pointer-move-event-manager';\n\n// @scroll\nexport * from './scroll/scroll-trigger-manager';\n\n// @text\nexport * from './text/text-box-model';\nexport * from './text/text-scale-model';\n\n// @controls\nexport * from './controls/sortable-list/sortable-list';\nexport * from './controls/text-area-field';\nexport * from './controls/input-active-manager';\nexport * from './controls/mono-knob-slider';\nexport * from './controls/duo-knob-slider';\n\n// @controller\nexport * from './html-controller/mono-controller/mono-controller';\nexport * from './html-controller/poly-controller/poly-controller';\nexport * from './html-controller/sequence-controller/sequence-controller';\n\n// @repeater\nexport * from './repeater';\n\n// @stackup\nexport * from './stack-up/stack-up';","function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nmodule.exports = _classCallCheck;","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nmodule.exports = _createClass;","export class Num {\n\n  // @pure\n  static average(numbers: number[]): number {\n    if (numbers.length < 2)\n      throw new Error('Num.average expects at least 2 numbers');\n    return this.sum(numbers) / numbers.length;\n  }\n\n  // @pure\n  static constrain(value: number, range: number | [number, number]): number {\n    if (typeof range === 'number') range = [0, range];\n\n    const max = Math.max(range[0], range[1]);\n    const min = Math.min(range[0], range[1]);\n\n    if (value >= max) {\n      return max;\n    } else if (value <= min) {\n      return min;\n    }\n    return value;\n  }\n\n  // @pure\n  static cycle(value: number, range: number | [number, number]): number {\n    if (typeof range === 'number') range = [0, range];\n\n    const max = Math.max(range[0], range[1]);\n    const min = Math.min(range[0], range[1]);\n\n    if (max === 0 && min === 0) return 0;\n\n    const da = this.getEuclideanDistance(min, max);\n    let db: number, c: number;\n\n    if (value > max) {\n      db = this.getEuclideanDistance(value, max);\n      c = db % da + min;\n      return c === min ? max : c;\n    } else if (value < min) {\n      db = this.getEuclideanDistance(value, min);\n      c = max - db % da;\n      return c === max ? min : c;\n    }\n    return value;\n  }\n\n  // Get number-line distance between two integers.\n  // For example (-4, -2) = 6, (-4, 5) = 9\n  // https://en.wikipedia.org/wiki/Euclidean_distance\n  // @pure\n  static getEuclideanDistance(a: number, b: number): number {\n    if (a === b) return 0;\n    return Math.sqrt(Math.abs((a - b) * (b - a)));\n  }\n\n  // A more efficient way to calculate hypotenuse.\n  // @pure\n  static hypotenuse(x: number, y: number): number {\n    // http://www.johndcook.com/blog/2010/06/02/whats-so-hard-about-finding-a-hypotenuse/\n    let max = Math.max(Math.abs(x), Math.abs(y));\n    if (max === 0) max = 1;\n\n    const min = Math.min(Math.abs(x), Math.abs(y));    \n    const n = min / max;\n    return max * Math.sqrt(1 + n * n);\n  }\n\n  // Get reciprocal of a number.\n  // @pure\n  static reciprocal(number: number): number | undefined {\n    return number != 0 ? 1 / number : undefined;\n  }\n\n  // @pure\n  static round(number: number, to?: number): number {\n    to = typeof to === 'undefined' ? 0 : to;\n    return parseFloat(number.toFixed(to));\n  }\n\n  // Simple linear interpolation.\n  // @pure\n  static lerp(t: number, from: number, to: number): number {\n    return (1 - t) * from + t * to;\n  }\n\n  // Cubic Bezier interpolation.\n  // @pure\n  static cubicBezier(t: number, p1: number, cp1: number, cp2: number, p2: number): number {\n    return Math.pow(1 - t, 3) * p1 + 3 * t * Math.pow(1 - t, 2) * cp1 + 3 * t * t * (1 - t) * cp2 + t * t * t * p2;\n  }\n\n  // @pure\n  static modulate(number: number, from: number | [number, number], to: number | [number, number], constrain: boolean): number {\n    if (typeof from === 'number') from = [0, from];\n    if (typeof to === 'number') to = [0, to];\n    const percent = (number - from[0]) / (from[1] - from[0]);\n    let result: number;\n    if (to[1] > to[0]) {\n      result = percent * (to[1] - to[0]) + to[0];\n    } else {\n      result = to[0] - (percent * (to[0] - to[1]));\n    }\n    return constrain === true ? Num.constrain(result, to) : result;\n  }\n\n  // @pure\n  static random(range: number | [number, number], whole: boolean = false, fixed: number = 2): number {\n    if (typeof range === 'number') range = [0, range];\n    if (range[0] === 0 && range[1] === 1) {\n      if (whole === true) {\n        return Math.floor(Math.random() * 2);\n      } else {\n        return parseFloat(Math.random().toFixed(fixed));\n      }\n    } else {\n      let number = this.modulate(Math.random(), 1, range, false);\n      return parseInt((number).toFixed(0), 10);\n    }\n  }\n\n  // @pure\n  static sum(numbers: number[]): number {\n    return numbers.reduce((previous, current) => previous + current);\n  }\n\n  // Check to see if given number is within given range.\n  // @pure\n  static within(number: number, range: number | [number, number]): boolean {\n    if (typeof range === 'number') range = [0, range];\n    return (number >= range[0] && number <= range[1]);\n  }\n}\n","import {\n  Num,\n} from '../rocket';\n\ninterface UtilPromiseEachFn<A> {\n  (value: A): Promise<void>;\n}\n\nexport class Util {\n\n  static promiseEach<A>(array: A[], fn: UtilPromiseEachFn<A>): Promise<void> {\n    if (array.length === 0) return Promise.resolve();\n    return array.reduce(\n      (previous: Promise<void>, current: A) => previous.then(() => fn(current)),\n      Promise.resolve()\n    );\n  }\n\n  static cycleArrayNext<A>(array: A[]): Function {\n    let index = -1;\n    return () => {\n      index++;\n      if (index > array.length - 1) index = 0;\n      return array[index];\n    };\n  }\n\n  static cycleArray<A>(array: A[], offset: number): A {\n    const index = offset % (array.length);\n    return array[index];\n  }\n\n  static randomChoice<A>(array: A[]): any {\n    const index = Num.random(array.length - 1, true);\n    return array[index];\n  }\n\n  // Returns a debouncer function that no matter the frequency of calls\n  // will only be invoked after the given delay timeout (in seconds).\n  static debounce(delay: number, fn: Function): Function {\n    let timeout: number;\n    return function() {\n      clearTimeout(timeout);\n      timeout = setTimeout(\n        () => fn.apply(this, arguments),\n        delay * 1000\n      );\n    };\n  }\n\n  // Delay given function call given number of second(s).\n  static delay(time: number, fn: Function) {\n    return setTimeout(fn, time * 1000);\n  }\n\n  static cancelDelay(id: number) {\n    clearTimeout(id);\n  }\n\n  static repeat(interval: number, fn: Function) {\n    return setInterval(fn, interval * 1000);\n  }\n\n  static stopRepeat(id: number) {\n    clearInterval(id);\n  }\n\n  static match(string: string, _with: RegExp): string | RegExpMatchArray | false {\n    const value = String(string).match(_with);\n    if (value === null) {\n      return false;\n    } else if (value.length === 1) {\n      return value[0];\n    }\n    return value;\n  }\n\n  static throttle(threshold: number, fn: Function): Function {\n    let timeout: number;\n    let last: number;\n    \n    threshold = 1000 * threshold;\n\n    return function() {\n      const now = Date.now();\n      if (typeof last === 'number' && now < last + threshold) {\n        clearTimeout(timeout);\n        timeout = setTimeout(() => {\n          last = now;\n          fn.apply(this, arguments);\n        }, threshold);\n      } else {\n        last = now;\n        fn.apply(this, arguments);\n      }\n    }\n  }\n\n  static toHex(n: string): string {\n    return parseInt(n).toString(16).toUpperCase();\n  }\n}\n","export class StringUtil {\n\n  public static upperCaseFirstLetter(string: string): string {\n    return string.charAt(0).toUpperCase() + string.slice(1);\n  }\n\n  public static lowerCaseFirstLetter(string: string): string {\n    return string.charAt(0).toLowerCase() + string.slice(1);\n  }\n\n  public static removeExtraWhitespaces(string: string): string {\n    return string.replace(/[\\s]+/g, ' ');\n  }\n\n  public static removeTabs(string: string): string {\n    return string.replace(/[\\t]+/g, '');\n  }\n\n  public static removeNewLines(string: string): string {\n    return string.replace(/[\\r\\n]+/g, '');\n  }\n}\n","function _typeof2(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof2 = function _typeof2(obj) { return typeof obj; }; } else { _typeof2 = function _typeof2(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof2(obj); }\n\nfunction _typeof(obj) {\n  if (typeof Symbol === \"function\" && _typeof2(Symbol.iterator) === \"symbol\") {\n    module.exports = _typeof = function _typeof(obj) {\n      return _typeof2(obj);\n    };\n  } else {\n    module.exports = _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : _typeof2(obj);\n    };\n  }\n\n  return _typeof(obj);\n}\n\nmodule.exports = _typeof;","export class DOMUtil {\n  public static isHTMLElement(element?): boolean {\n    if (\n      typeof element === 'object'\n      && typeof element.nodeType === 'number'\n      && element.nodeType === 1\n      && element instanceof HTMLElement === true\n    ) return true;\n    return false;\n  }\n\n  public static prependChild(parent: HTMLElement, child: HTMLElement) {\n    if (parent.childElementCount > 0) {\n      parent.insertBefore(child, parent.childNodes[0]);\n    } else {\n      parent.appendChild(child);\n    }\n  }\n\n  public static removeElement(element: HTMLElement): void {\n    if (element.parentNode !== null) {\n      element.parentNode.removeChild(element);\n      element.remove();\n    } else {\n      element.remove();\n    }\n  }\n}\n","export interface ImageSize {\n  width: number;\n  height: number;\n}\n\nexport interface DomImagePromiseResolveValue {\n  image: HTMLImageElement;\n  source: string;\n}\n\nexport class DOMImage {\n\n  public static loadImage(source: string): Promise<DomImagePromiseResolveValue> {\n    return new Promise((resolve, reject) => {\n      const image = new Image();\n      image.addEventListener('load', () => resolve({ image, source }));\n      image.addEventListener('error', () => reject(new Error('DOMImage.onImageLoad: There is an error loading image.')));\n      image.src = source;\n    });\n  }\n\n  public static getImageSize(source: string): Promise<ImageSize> {\n    return new Promise((resolve, reject) => {\n      const image = new Image();\n      image.addEventListener('error', () => reject(new Error('DOMImage.onImageLoad: There is an error loading image.')));\n      image.src = source;\n      const intervalId = setInterval(() => {\n        if (\n          typeof image.naturalWidth === 'number'\n          && typeof image.naturalHeight === 'number'\n        ) {\n          clearInterval(intervalId);\n          resolve({\n            width: image.naturalWidth,\n            height: image.naturalHeight\n          });\n        }\n      }, 10);\n    });\n  }\n}","export interface DOMTraverseInspectFunction {\n  (element: HTMLElement): void | false;\n}\n\nexport interface DOMTraverseIdentifyElementFunction {\n  (element: HTMLElement): boolean;\n}\n\nexport interface DOMTraverseExtractFunction<T> {\n  (child: HTMLElement): T | undefined;\n}\n\nexport type DOMTraverseResult = HTMLElement | HTMLElement[] | false;\n\nexport class DOMTraverse {\n\n  public static ascendFrom(element: HTMLElement, inspect: DOMTraverseInspectFunction): void {\n    let currentEl: HTMLElement | null = element;\n    while (currentEl !== null && currentEl.nodeName !== 'HTML') {\n      currentEl = currentEl as HTMLElement;\n      if (currentEl !== null) {\n        if (inspect(currentEl) !== false) break;\n        currentEl = currentEl.parentElement;\n      }\n    }\n  }\n\n  public static descendFrom(element: HTMLElement, inspect: DOMTraverseInspectFunction): void {\n    const descent: Function = (currentElement: HTMLElement) => {\n      const children = currentElement.children;\n      if (children.length > 0) {\n        for (let i = 0; i < children.length; i++) {\n          if (inspect(children[i] as HTMLElement) === false) break;\n          if (children[i].children.length > 0) descent(children[i]);\n        }\n      }\n    };\n    descent(element);\n  }\n\n  // @ancestor\n\n  // Find ancestor element that match identifyElement.\n  //\n  // identifyElement\n  //   a user defined function that returns true or false.\n  //\n  // getAll:\n  //   true : Returns an array of matching ancestor(s).\n  //   false: Only return the first matching one.\n  //\n  // Returns false if no matching ancestor is found.\n  public static findAncestor(\n    element: HTMLElement,\n    identifyElement: DOMTraverseIdentifyElementFunction,\n    getAll: boolean = false\n  ): DOMTraverseResult {\n\n    const results: HTMLElement[] = [];\n\n    if (element === null) return false;\n\n    if (identifyElement(element) === true) results.push(element);\n\n    let currentEl: HTMLElement | null = element;\n\n    while (currentEl !== null && currentEl.nodeName !== 'HTML') {\n      currentEl = currentEl as HTMLElement;\n      if (currentEl !== null) {\n        if (identifyElement(currentEl) === true) results.push(currentEl);\n        currentEl = currentEl.parentElement;\n      }\n    }\n\n    if (results.length > 0)\n      return getAll === true ? results : results[0];\n\n    return false;\n  }\n\n  public static findAncestorWithClass(\n    parent: HTMLElement,\n    classNames: string | string[],\n    getAll: boolean = false\n  ): DOMTraverseResult {\n\n    let identifyElement: DOMTraverseIdentifyElementFunction = element => false;\n\n    if (typeof classNames === 'string') {\n      identifyElement = element => element.classList.contains(classNames);\n    } else if (Array.isArray(classNames) === true) {\n      identifyElement = element => {\n        let containsClassName: boolean = false;\n        classNames.forEach(className => {\n          if (element.classList.contains(className) === true) containsClassName = true;\n        });\n        return containsClassName;\n      };\n    }\n\n    return this.findAncestor(parent, identifyElement, getAll);\n  }\n\n  public static findAncestorWithID(\n    parent: HTMLElement,\n    ID: string,\n    getAll: boolean = false\n  ): DOMTraverseResult {\n    const identifyElement: DOMTraverseIdentifyElementFunction = element => element.id === ID;\n    return this.findAncestor(parent, identifyElement, getAll);\n  }\n\n  public static hasAncestor(parent: HTMLElement, options: HTMLElement | HTMLElement[] | NodeListOf<HTMLElement>): DOMTraverseResult {\n    const identifyElement = element => {\n      if (Array.isArray(options) === true) {\n        return (options as HTMLElement[]).indexOf(element) !== -1;\n      } else if (typeof options[Symbol.iterator] === 'function') {\n        return Array.from(options as NodeListOf<HTMLElement>).indexOf(element) !== -1;\n      } else {\n        return element === options;\n      }\n    }\n\n    return this.findAncestor(parent, identifyElement, false);\n  }\n\n  // @descendant\n\n  public static findDescendant(\n    element: HTMLElement,\n    identifyElement: DOMTraverseIdentifyElementFunction,\n    getAll: boolean = false\n  ): DOMTraverseResult {\n\n    const results: HTMLElement[] = [];\n\n    if (identifyElement(element) === true) results.push(element);\n\n    const descent: Function = (currentElement: HTMLElement) => {\n      const children = currentElement.children;\n      if (children.length > 0) {\n        for (let i = 0; i < children.length; i++) {\n          if (identifyElement(children[i] as HTMLElement) === true) {\n            results.push(children[i] as HTMLElement);\n            if (getAll === false) break;\n          }\n          if (children[i].children.length > 0) descent(children[i]);\n        }\n      }\n    };\n    descent(element);\n\n    if (results.length > 0)\n      return getAll === true ? results : results[0];\n\n    return false;\n  }\n\n  public static findDescendantWithID(\n    parent: HTMLElement,\n    ID: string,\n    getAll: boolean = false\n  ): DOMTraverseResult {\n    const identifyElement = element => element.id === ID;\n    return this.findDescendant(parent, identifyElement, getAll);\n  }\n\n  public static findDescendantWithClass(\n    parent: HTMLElement,\n    classNames: string | string[],\n    getAll: boolean = false\n  ): DOMTraverseResult {\n    let identifyElement = element => false;\n\n    if (typeof classNames === 'string') {\n      identifyElement = element => element.classList.contains(classNames);\n    } else if (Array.isArray(classNames) === true) {\n      identifyElement = element => {\n        let containsClassName: boolean = false;\n        classNames.forEach(className => {\n          if (element.classList.contains(className) === true)\n            containsClassName = true;\n        });\n        return containsClassName;\n      };\n    }\n\n    return this.findDescendant(parent, identifyElement, getAll);\n  }\n\n  public static hasDescendant(\n    parent: HTMLElement,\n    options: HTMLElement | HTMLElement[] | NodeListOf<HTMLElement>\n  ): DOMTraverseResult {\n    const identifyElement: DOMTraverseIdentifyElementFunction = element => {\n      if (Array.isArray(options) === true) {\n        return (options as HTMLElement[]).indexOf(element) !== -1;\n      } else if (typeof options[Symbol.iterator] === 'function') {\n        return Array.from(options as NodeListOf<HTMLElement>).indexOf(element) !== -1;\n      } else {\n        return element === options;\n      }\n    }\n    return this.findDescendant(parent, identifyElement, false);\n  }\n\n  // @siblings\n\n  public static getSiblings(\n    element: HTMLElement,\n    isExclusive: boolean = false\n  ): HTMLElement[] | false {\n    if (element.parentElement !== null) {\n      const siblings = Array.from(element.parentElement.children) as HTMLElement[];\n      if (isExclusive === true)\n        siblings.splice(siblings.indexOf(element), 1);\n      return siblings.length > 0 ? siblings : false;\n    }\n    return false;\n  }\n\n  public static findSibling(\n    element: HTMLElement,\n    identifyElement: DOMTraverseIdentifyElementFunction,\n    getAll = true\n  ): DOMTraverseResult {\n    const siblings: HTMLElement[] | false = this.getSiblings(element);\n\n    if (siblings === false) return false;\n\n    if (siblings.length > 0) {\n      const results: HTMLElement[] = [];\n      for (let i = 0; i < siblings.length; i++)\n        if (identifyElement(siblings[i]) === true)\n          results.push(siblings[i]);\n      if (results.length > 0)\n        return getAll === true ? results : results[0];\n    }\n    return false;\n  }\n\n  public static findSiblingWithClass(\n    element: HTMLElement,\n    classNames: string | string[],\n    getAll: boolean = false\n  ): DOMTraverseResult {\n    let identifyElement: DOMTraverseIdentifyElementFunction = sibling => false;\n    if (typeof classNames === 'string') {\n      identifyElement = sibling => sibling.classList.contains(classNames);\n    } else if (Array.isArray(classNames) === true) {\n      identifyElement = sibling => {\n        let containsClassName: boolean = false;\n        classNames.forEach(className => {\n          if (sibling.classList.contains(className) === true)\n            containsClassName = true;\n        });\n        return containsClassName;\n      };\n    }\n    return this.findSibling(element, identifyElement, getAll);\n  }\n\n  public static removeChildren(parent: HTMLElement): number {\n    let deleteCount: number = 0;\n\n    while (parent.firstChild !== null) {\n      parent.removeChild(parent.firstChild);\n      deleteCount++;\n    }\n\n    return deleteCount;\n  }\n\n  public static findNextSibling(\n    element: HTMLElement,\n    identifyElement: DOMTraverseIdentifyElementFunction\n  ): HTMLElement | false {\n    let nextSibling: HTMLElement | null = element;\n    while (nextSibling !== null) {\n      if (element !== null && identifyElement(element) === true) {\n        return element;\n      } else {\n        nextSibling = element.nextElementSibling as HTMLElement | null;\n      }\n    }\n    return false;\n  }\n\n  public static removeChild(\n    element: HTMLElement,\n    identifyElement: DOMTraverseIdentifyElementFunction\n  ): number {\n    let deleteCount: number = 0;\n    const inspect: Function = (parent: HTMLElement) => {\n      const children: HTMLCollection = parent.children;\n      if (children.length > 0) {\n        for (let i = 0; i < children.length; i++) {\n          if (identifyElement(children[i] as HTMLElement) === true) {\n            parent.removeChild(children[i]);\n            deleteCount++;\n          } else if (children[i].children.length > 0) {\n            inspect(children[i]);\n          }\n        }\n      }\n    };\n    inspect(element);\n    return deleteCount;\n  }\n\n  public static getChildren(\n    parent: HTMLElement,\n    identifyElement?: DOMTraverseIdentifyElementFunction\n  ): HTMLElement[] {\n    const children = Array.from(parent.children) as HTMLElement[];\n    if (typeof identifyElement === 'undefined') return children;\n    return children.filter(element => identifyElement(element as HTMLElement));\n  }\n\n  public static getNthChild(\n    n: number | 'last',\n    parent: HTMLElement,\n    identifyElement?: DOMTraverseIdentifyElementFunction\n  ): HTMLElement | false {\n    if (typeof identifyElement === 'undefined') identifyElement = element => true;\n\n    const children = Array.from(parent.children) as HTMLElement[];\n    const selectedChildren: HTMLElement[] = children.filter(identifyElement);\n\n    let result: HTMLElement;\n    if (n === 'last') {\n      result = selectedChildren[selectedChildren.length - 1];\n    } else {\n      result = selectedChildren[n];\n    }\n\n    return (typeof result === 'object') ? result : false;\n  }\n\n  public static mapDataFromChildren<T>(\n    parent: HTMLElement,\n    extract: DOMTraverseExtractFunction<T>,\n    identifyElement?: DOMTraverseIdentifyElementFunction\n  ): T[] {\n    if (typeof identifyElement === 'undefined') identifyElement = element => true;\n\n    const children = Array.from(parent.children) as HTMLElement[];\n    const selectedChildren: HTMLElement[] = children.filter(identifyElement);\n\n    if (selectedChildren.length === 0) return [];\n\n    if (selectedChildren.length === 1) {\n      const datum: T = <T>extract(selectedChildren[0]);\n      return (typeof datum !== 'undefined') ? [datum] : [];\n    }\n\n    const results: T[] = [];\n    selectedChildren.forEach(child => {\n      const datum: T = <T>extract(child);\n      if (typeof datum !== 'undefined') results.push(datum);\n    });\n\n    return results;\n  }\n}\n","import {\n  DOMTraverse,\n} from '../rocket';\n\nexport interface StyleList {\n  [key: string]: string | number;\n}\n\nexport interface StyleValue {\n  [key: string]: string;\n}\n\n// NOTE:\n// You can remove style by setting it to null\n// For example element.style.backgroundColor = null;\n\nexport class DOMStyle {\n\n  public static getLineHeight(element: HTMLElement): number {\n    const temp = document.createElement('div');\n    temp.style.padding    = '0';\n    temp.style.visibility = 'none';\n    temp.textContent      = 'abcd';\n    this.copyStylesFrom(\n      element, ['fontSize', 'fontFamily', 'lineHeight'], temp\n    );\n    let result: number;\n    if (element.parentNode !== null) {\n      element.parentNode.appendChild(temp);\n      result = temp.clientHeight;\n      element.parentNode.removeChild(temp);\n    } else {\n      document.appendChild(temp);\n      result = temp.clientHeight;\n      document.removeChild(temp);\n    }\n    temp.remove();\n    return result;\n  }\n\n  // @styles\n  public static applyStyle(element: HTMLElement, styles: StyleList) {\n    Object.keys(styles).forEach(property => {\n      const value = (typeof styles[property] === 'number') ? styles[property].toString() : styles[property] as string;\n      element.style[property] = value;\n    });\n  }\n\n  public static copyStylesFrom(from: HTMLElement, styleProperties: string | string[], ...to: HTMLElement[]): void {\n    if (typeof styleProperties === 'string') styleProperties = [styleProperties];\n    const style = window.getComputedStyle(from);\n    styleProperties.forEach(property => {\n      to.forEach(element => element.style[property] = style[property])\n    });\n  }\n\n  public static clearStyles(element: HTMLElement) {\n    element.removeAttribute('style');\n  }\n\n  public static removeStyles(element: HTMLElement, styleProperties: string | string[]) {\n    if (typeof styleProperties === 'string') styleProperties = [styleProperties];\n    styleProperties.forEach(property => element.style.removeProperty(property));\n  }\n\n  public static getStyleValue(element: HTMLElement, styleProperty: string, isNumber: boolean = false): string | number {\n    const style = window.getComputedStyle(element);\n    const value = style[styleProperty];\n    return isNumber === true ? parseFloat(value) : value;\n  }\n\n  public static getStyleValues(element: HTMLElement, styleProperties: string | string[]): StyleValue {\n    if (typeof styleProperties === 'string') styleProperties = [styleProperties]\n    const style = window.getComputedStyle(element);\n    const result = {};\n    styleProperties.forEach(property => result[property] = style[property]);\n    return result;\n  }\n\n  // @font-size\n  public static getFontSize(element: HTMLElement): number {\n    return this.getStyleValue(element, 'fontSize', true) as number;\n  }\n\n  public static setFontSize(element: HTMLElement, fontSize: number) {\n    element.style.fontSize = `${fontSize}px`;\n  }\n\n  public static getBaseFontSize(): number {\n    const fontSize = window.getComputedStyle(document.documentElement).fontSize;\n    if (typeof fontSize === 'string') return parseFloat(fontSize);\n    return 16;\n  }\n\n  public static RemToPx(rem: number): number {\n    return rem * this.getBaseFontSize();\n  }\n\n  // @border_widths\n  public static getHorizontalBorderWidths(element: HTMLElement) {\n    const style = window.getComputedStyle(element);\n    let { borderLeftWidth, borderRightWidth } = style;\n    const left  = (borderLeftWidth  === null || borderLeftWidth  === '') ? 0 : parseFloat(borderLeftWidth);\n    const right = (borderRightWidth === null || borderRightWidth === '') ? 0 : parseFloat(borderRightWidth);\n    return left + right;\n  }\n\n  public static getVerticalBorderWidths(element: HTMLElement): number {\n    const style = window.getComputedStyle(element);\n    const { borderTopWidth, borderBottomWidth } = style;\n    const top    = (borderTopWidth    === null || borderTopWidth    === '') ? 0 : parseFloat(borderTopWidth);\n    const bottom = (borderBottomWidth === null || borderBottomWidth === '') ? 0 : parseFloat(borderBottomWidth);\n    return top + bottom;\n  }\n\n  // @paddings\n  public static getHorizontalPaddings(element: HTMLElement): number {\n    const style = window.getComputedStyle(element);\n    let { paddingLeft, paddingRight } = style;\n    const left  = (paddingLeft  === null || paddingLeft  === '') ? 0 : parseFloat(paddingLeft);\n    const right = (paddingRight === null || paddingRight === '') ? 0 : parseFloat(paddingRight);\n    return left + right;\n  }\n\n  public static getVerticalPaddings(element: HTMLElement): number {\n    const style = window.getComputedStyle(element);\n    const { paddingTop, paddingBottom } = style;\n    const top    = (paddingTop    === null || paddingTop    === '') ? 0 : parseFloat(paddingTop);\n    const bottom = (paddingBottom === null || paddingBottom === '') ? 0 : parseFloat(paddingBottom);\n    return top + bottom;\n  }\n\n  // @margins\n  public static getHorizontalMargins(element: HTMLElement): number {\n    const style = window.getComputedStyle(element);\n    const { marginLeft, marginRight } = style;\n    const left  = (marginLeft  === null || marginLeft  === '') ? 0 : parseFloat(marginLeft);\n    const right = (marginRight === null || marginRight === '') ? 0 : parseFloat(marginRight);\n    return left + right;\n  }\n\n  public static getVerticalMargins(element: HTMLElement): number {\n    const style = window.getComputedStyle(element);\n    const { marginTop, marginBottom } = style;\n    const top    = (marginTop    === null || marginTop    === '') ? 0 : parseFloat(marginTop);\n    const bottom = (marginBottom === null || marginBottom === '') ? 0 : parseFloat(marginBottom);\n    return top + bottom;\n  }\n\n  // @inner_area\n  public static getTotalHorizontalInnerSpace(element: HTMLElement): number {\n    if (this.getStyleValue(element, 'box-sizing') === 'border-box')\n      return this.getHorizontalPaddings(element) + this.getHorizontalBorderWidths(element);\n    return this.getHorizontalPaddings(element);\n  }\n\n  public static getTotalVerticalInnerSpace(element: HTMLElement): number {\n    if (this.getStyleValue(element, 'box-sizing') === 'border-box')\n      return this.getVerticalPaddings(element) + this.getVerticalBorderWidths(element);\n    return this.getVerticalPaddings(element);\n  }\n\n  // @outer_area\n  public static getTotalHorizontalOuterSpace(element: HTMLElement): number {\n    if (this.getStyleValue(element, 'box-sizing') !== 'border-box')\n      return this.getHorizontalMargins(element) + this.getHorizontalBorderWidths(element);\n    return this.getHorizontalMargins(element);\n  }\n\n  public static getTotalVerticalOuterSpace(element: HTMLElement): number {\n    if (this.getStyleValue(element, 'box-sizing') !== 'border-box')\n      return this.getVerticalMargins(element) + this.getVerticalBorderWidths(element);\n    return this.getVerticalMargins(element);\n  }\n\n  // @dimension\n  public static getTotalHorizontalDimension(element: HTMLElement): number {\n    return element.offsetWidth + this.getTotalHorizontalOuterSpace(element);\n  }\n\n  public static getTotalVerticalDimension(element: HTMLElement): number {\n    return element.offsetHeight + this.getTotalVerticalOuterSpace(element);\n  }\n\n  // @animation\n  public static getAnimationDelay(element: HTMLElement): number {\n    const computedStyle = getComputedStyle(element);\n    const delay = computedStyle.animationDelay;\n    return (delay === null || delay === '') ? 0 : parseFloat(delay) * 1000;\n  }\n\n  public static getAnimationDuration(element: HTMLElement): number {\n    const computedStyle = getComputedStyle(element);\n    const duration = computedStyle.animationDuration;\n    return (duration === null || duration === '') ? 0 : parseFloat(duration) * 1000;\n  }\n\n  public static getParentsMaxAnimationDuration(from: HTMLElement, withDelay: boolean = false): number {\n    let durations: number[] = [];\n    DOMTraverse.ascendFrom(from, element => {\n      let duration = this.getAnimationDuration(element);\n      if (withDelay === true) duration += this.getAnimationDelay(element);\n      durations.push(duration);\n    });\n    return Math.max(...durations);\n  }\n\n  public static getChildrenMaxAnimationDuration(from: HTMLElement, withDelay: boolean = false): number {\n    let durations: number[] = [];\n    DOMTraverse.descendFrom(from, element => {\n      let duration = this.getAnimationDuration(element);\n      if (withDelay === true) duration += this.getAnimationDelay(element);\n      durations.push(duration);\n    });\n    return Math.max(...durations);\n  }\n\n  public static getTransitionDuration(element: HTMLElement): number {\n    const computedStyle = getComputedStyle(element);\n    const duration = computedStyle.transitionDuration;\n    return (duration === null || duration === '') ? 0 : parseFloat(duration) * 1000;\n  }\n}\n","import {\n  DOMStyle,\n} from '../rocket';\n\nexport class DOMText {\n\n  public static getTextFromElement(element: HTMLElement): string {\n    if (\n         element instanceof HTMLTextAreaElement\n      || element instanceof HTMLInputElement\n      || element.nodeName === 'INPUT'\n      || element.nodeName === 'TEXTAREA'\n    ) return (element as HTMLTextAreaElement | HTMLInputElement).value;\n\n    if (element.textContent !== null) return element.textContent;\n\n    return '';\n  }\n\n  public static getElementTextBoxWidth(element: HTMLElement): number {\n    return element.offsetWidth - DOMStyle.getTotalHorizontalInnerSpace(element);\n  }\n\n  public static getElementTextBoxHeight(element: HTMLElement): number {\n    return element.offsetHeight - DOMStyle.getTotalVerticalInnerSpace(element);\n  }\n\n  public static getLastLine(element: HTMLElement): string {\n    const text = element.textContent;\n\n    if (text !== null) {\n      const words = text.split(' ');\n\n      const lastLine: string[] = [];\n    \n      let index = words.length - 1;\n\n      const temp = document.createElement('div');\n      temp.style.padding = '0';\n      temp.style.visibility = 'none';\n      DOMStyle.copyStylesFrom(\n        element, ['fontSize', 'fontFamily', 'lineHeight'], temp,\n      );\n      temp.style.maxWidth = `${element.clientWidth - DOMStyle.getTotalHorizontalInnerSpace(element)}px`;\n      temp.textContent = text;\n\n      if (element.parentNode !== null) {\n        element.parentNode.appendChild(temp);\n      } else {\n        document.appendChild(temp);\n      }\n\n      const startingHeight = temp.clientHeight;\n    \n      let textCopy = text;\n\n      while (true) {\n        if (typeof words[index] === 'undefined') break;\n        const wordLength = words[index].length + 1;\n        textCopy = textCopy.substring(0, textCopy.length - wordLength);\n        temp.textContent = textCopy;\n        lastLine.unshift(words[index]);\n        if (temp.clientHeight < startingHeight) break;\n        index--;\n      }\n\n      if (element.parentNode !== null) {\n        element.parentNode.removeChild(temp);\n      } else {\n        document.removeChild(temp);\n      }\n\n      return lastLine.join(' ');\n    }\n    return '';\n  }\n}\n","import {\n  DOMScroll,\n  DOMUtil,\n  Num,\n  Point,\n  Util,\n  Viewport,\n} from '../rocket';\n\nexport type DOMAlignReferenceCornerNames = 'top-left' | 'top-right' | 'bottom-left' | 'bottom-right';\nexport type DOMAlignReferenceEdgeNames = 'top' | 'left' | 'right' | 'bottom';\nexport type DOMAlignReferencePointNames = 'center' | DOMAlignReferenceCornerNames | DOMAlignReferenceEdgeNames;\n\nconst DOMAlignReferenceCornerNames: DOMAlignReferenceCornerNames[] = ['top-left', 'top-right', 'bottom-left', 'bottom-right'];\nconst DOMAlignReferenceEdgeNames: DOMAlignReferenceEdgeNames[] = ['top', 'bottom', 'left', 'right'];\nconst DOMAlignReferencePointNames: DOMAlignReferencePointNames[] = ['center', ...DOMAlignReferenceCornerNames, ...DOMAlignReferenceEdgeNames];\n\nconst DOMAlignReferencePointRotation: DOMAlignReferencePointNames[] = ['top-left', 'top', 'top-right', 'right', 'bottom-right', 'bottom', 'bottom-left'];\n\nexport interface DOMAlignOffset {\n  left: number;\n  top: number;\n}\n\nexport type DOMAlignOffsetRelation = 'viewport' | 'document' | HTMLElement;\n\nexport class DOMAlign {\n\n  public static getTargetAlignment(\n    target: HTMLElement,\n    targetReferencePoint: DOMAlignReferencePointNames,\n    anchor: HTMLElement,\n    anchorReferencePoint: DOMAlignReferencePointNames,\n    relativeTo: DOMAlignOffsetRelation = 'viewport',\n  ): DOMAlignOffset {\n    const targetRect = target.getBoundingClientRect();\n    const targetOffset = this.getElementOffset(target, targetReferencePoint);\n    const anchorOffset = this.getElementOffset(anchor, anchorReferencePoint);\n    const left = targetRect.left + anchorOffset.left - targetOffset.left;\n    const top = targetRect.top + anchorOffset.top - targetOffset.top;\n    return this.transformOffsetRelativeTo({ left, top }, relativeTo);\n  }\n\n  public static getTargetAlignmentToPoint(\n    target: HTMLElement,\n    targetReferencePoint: DOMAlignReferencePointNames,\n    point: Point,\n    relativeTo: DOMAlignOffsetRelation = 'viewport',\n  ): DOMAlignOffset {\n    const targetRect = target.getBoundingClientRect();\n    const targetOffset = this.getElementOffset(target, targetReferencePoint);\n    const left = targetRect.left + point.x - targetOffset.left;\n    const top = targetRect.top + point.y - targetOffset.top;\n    return this.transformOffsetRelativeTo({ left, top }, relativeTo);\n  }\n\n  public static getTargetAlignmentToView(\n    target: HTMLElement,\n    targetReferencePoint: DOMAlignReferencePointNames,\n    viewReferencePoint: DOMAlignReferencePointNames,\n    relativeTo: DOMAlignOffsetRelation = 'viewport',\n  ) {\n    const targetRect = target.getBoundingClientRect();\n    const targetOffset = this.getElementOffset(target, targetReferencePoint);\n    const viewOffset = this.getViewOffset(viewReferencePoint);\n    const left = targetRect.left + viewOffset.left - targetOffset.left;\n    const top = targetRect.top + viewOffset.top - targetOffset.top;\n    return this.transformOffsetRelativeTo({ left, top }, relativeTo);\n  }\n\n  public static getComplementaryReferencePoint(\n    referencePoint: DOMAlignReferencePointNames\n  ): DOMAlignReferencePointNames {\n    if (referencePoint === 'center') return 'center';\n    switch(referencePoint) {\n      case 'top-left':\n        return 'bottom-right';\n      case 'top':\n        return 'bottom';\n      case 'top-right':\n        return 'bottom-left';\n      case 'left':\n        return 'right';\n      case 'right':\n        return 'left';\n      case 'bottom-left':\n        return 'top-right';\n      case 'bottom':\n        return 'top';\n      case 'bottom-right':\n        return 'top-left';\n    }\n  }\n\n  public static getReferencePointFromRotation(from: DOMAlignReferencePointNames, offset: number): DOMAlignReferencePointNames {\n    if (from === 'center') return 'center';\n    const fromIndex = DOMAlignReferencePointRotation.indexOf(from);\n    return Util.cycleArray<DOMAlignReferencePointNames>(DOMAlignReferencePointRotation, fromIndex + offset);\n  }\n\n  // This returns an offset based on element reference point and relative to viewport.\n  public static getElementOffset(\n    element: HTMLElement,\n    referencePoint: DOMAlignReferencePointNames\n  ): DOMAlignOffset {\n    const rect = element.getBoundingClientRect();\n    let left = 0, top  = 0;\n    const leftCenter = rect.left + Num.getEuclideanDistance(rect.left, rect.right) / 2;\n    const topCenter  = rect.top  + Num.getEuclideanDistance(rect.top, rect.bottom) / 2;\n    switch(referencePoint) {\n      case 'center':\n        left = leftCenter;\n        top  = topCenter;\n        break;\n      case 'top-left':\n        left = rect.left;\n        top  = rect.top;\n        break;\n      case 'top':\n        left = leftCenter;\n        top  = rect.top;\n        break;\n      case 'top-right':\n        left = rect.right;\n        top  = rect.top;\n        break;\n      case 'left':\n        left = rect.left;\n        top  = topCenter;\n        break;\n      case 'right':\n        left = rect.right;\n        top  = topCenter;\n        break;\n      case 'bottom-left':\n        left = rect.left;\n        top  = rect.bottom;\n        break;\n      case 'bottom':\n        left = leftCenter;\n        top  = rect.bottom;\n        break;\n      case 'bottom-right':\n        left = rect.right;\n        top  = rect.bottom;\n        break;\n    }\n    return { left, top };\n  }\n\n  public static getViewOffset(\n    referencePoint: DOMAlignReferencePointNames\n  ): DOMAlignOffset {\n    let left = 0, top = 0;\n    const leftCenter = Viewport.width  / 2;\n    const topCenter  = Viewport.height / 2;\n    switch(referencePoint) {\n      case 'center':\n        left = leftCenter;\n        top  = topCenter;\n        break;\n      case 'top-left':\n        break;\n      case 'top':\n        left = leftCenter;\n        break;\n      case 'top-right':\n        left = Viewport.width;\n        break;\n      case 'left':\n        top  = topCenter;\n        break;\n      case 'right':\n        left = Viewport.width;\n        top  = topCenter;\n        break;\n      case 'bottom-left':\n        top  = Viewport.height;\n        break;\n      case 'bottom':\n        left = leftCenter;\n        top  = Viewport.height;\n        break;\n      case 'bottom-right':\n        left = Viewport.width;\n        top  = Viewport.height;\n        break;\n    }\n    return { left, top };\n  }\n\n  // This returns an offset from element reference point to origin (top-left).\n  public static getOffsetFromTargeReferencePointToOrigin(\n    target: HTMLElement,\n    referencePoint: DOMAlignReferencePointNames\n  ): DOMAlignOffset {\n    const rect = target.getBoundingClientRect();\n    const offset = this.getElementOffset(target, referencePoint);\n    return {\n      left: rect.left - offset.left,\n      top: rect.top - offset.top,\n    };\n  }\n\n  // Transform offset relation to either document, viewport, or an element.\n  public static transformOffsetRelativeTo(\n    offset: DOMAlignOffset,\n    to: DOMAlignOffsetRelation\n  ): DOMAlignOffset {\n    let left = offset.left, top = offset.top;\n    if (to === 'document') {\n      left = left + DOMScroll.scrollLeft;\n      top = top  + DOMScroll.scrollTop;\n    } else if (to === 'viewport') {\n      left = left;\n      top = top;\n    } else if (DOMUtil.isHTMLElement(to) === true) {\n      const target = to as HTMLElement;\n      const rect = target.getBoundingClientRect();\n      left = left - rect.left;\n      top = top - rect.top;\n    }\n    return { left, top };\n  }\n\n  // Apply spacing to offset..\n  public static applySpacingToOffset(\n    offset: DOMAlignOffset,\n    referencePoint: DOMAlignReferencePointNames,\n    spacing: number,\n  ): DOMAlignOffset {\n    let left = offset.left, top = offset.top;\n    if (referencePoint === 'center') {\n      return { left, top };\n    } else if (\n      DOMAlignReferenceCornerNames.indexOf(\n        referencePoint as DOMAlignReferenceCornerNames\n      ) !== -1\n    ) {\n      let cornerSpacing = this.calculateCornerSpacing(spacing);\n      switch(referencePoint) {\n        case 'top-left':\n          left = left - cornerSpacing;\n          top = top - cornerSpacing;\n          break;\n        case 'top-right':\n          left = left + cornerSpacing;\n          top = top - cornerSpacing;\n          break;\n        case 'bottom-left':\n          left = left - cornerSpacing;\n          top = top + cornerSpacing;\n          break;\n        case 'bottom-right':\n          left = left + cornerSpacing;\n          top = top + cornerSpacing;\n          break;\n      }\n      return { left, top };\n    } else {\n      switch(referencePoint) {\n        case 'top':\n          top = top - spacing;\n          break;\n        case 'bottom':\n          top = top + spacing;\n          break;\n        case 'left':\n          left = left - spacing;\n          break;\n        case 'right':\n          left = left + spacing;\n          break;\n      }\n      return { left, top };\n    }\n  }\n\n  public static calculateCornerSpacing(spacing: number): number {\n    return Math.cos(Math.PI/4) * spacing;\n  }\n}\n","function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n\n    return arr2;\n  }\n}\n\nmodule.exports = _arrayWithoutHoles;","function _iterableToArray(iter) {\n  if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter);\n}\n\nmodule.exports = _iterableToArray;","function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance\");\n}\n\nmodule.exports = _nonIterableSpread;","var arrayWithoutHoles = require(\"./arrayWithoutHoles\");\n\nvar iterableToArray = require(\"./iterableToArray\");\n\nvar nonIterableSpread = require(\"./nonIterableSpread\");\n\nfunction _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || nonIterableSpread();\n}\n\nmodule.exports = _toConsumableArray;","import {\n  Viewport,\n} from '../rocket';\n\nexport type DOMViewCornerNames = 'top-left' | 'top-right' | 'bottom-left' | 'bottom-right';\nexport type DOMViewEdgeNames = 'top' | 'bottom' | 'left' | 'right';\nexport type DOMViewEdgeAndCornerNames = DOMViewCornerNames | DOMViewEdgeNames;\n\nexport const DOMViewCornerNames: DOMViewCornerNames[] = ['top-left', 'top-right', 'bottom-left', 'bottom-right'];\nexport const DOMViewEdgeNames: DOMViewEdgeNames[] = ['top', 'bottom', 'left', 'right'];\nexport const DOMViewEdgeAndCornerNames: DOMViewEdgeAndCornerNames[] = [...DOMViewCornerNames, ...DOMViewEdgeNames];\n\nexport class DOMView {\n\n  public static elementIsInView(element: HTMLElement): boolean {\n    const rect = element.getBoundingClientRect();\n    if (rect.left < 0) return false;\n    if (rect.top < 0) return false;\n    if (rect.bottom > Viewport.height) return false;\n    if (rect.right > Viewport.width) return false;\n    return true;\n  }\n\n  public static elementIsClipping(\n    element: HTMLElement,\n    cornersOrEdges?: DOMViewEdgeAndCornerNames | DOMViewEdgeAndCornerNames[]\n  ): DOMViewEdgeAndCornerNames | false {\n    if (typeof cornersOrEdges === 'undefined') cornersOrEdges = [...DOMViewEdgeAndCornerNames];\n    if (Array.isArray(cornersOrEdges) === false) cornersOrEdges = [cornersOrEdges as DOMViewEdgeAndCornerNames];\n    cornersOrEdges = cornersOrEdges as DOMViewEdgeAndCornerNames[];\n    const result = this.elementIsClippingCornerOrEdge(element);\n    if (result === false) return false;\n    if (cornersOrEdges.indexOf(result) === -1) return false;\n    return result;\n  }\n\n  public static elementIsClippingEdge(element: HTMLElement): DOMViewEdgeNames | false {\n    const rect = element.getBoundingClientRect();\n    if (rect.top < 0) {\n      return 'top';\n    } else if (rect.bottom > Viewport.height) {\n      return 'bottom';\n    } else if (rect.left < 0) {\n      return 'left';\n    } else if (rect.right > Viewport.width) {\n      return 'right';\n    }\n    return false;\n  }\n\n  public static elementIsClippingCorner(element: HTMLElement): DOMViewCornerNames | false {\n    const rect = element.getBoundingClientRect();\n    if (rect.top < 0) {\n      if (rect.left < 0) return 'top-left';\n      if (rect.right > Viewport.width) return 'top-right';\n    } else if (rect.bottom > Viewport.height) {\n      if (rect.left < 0) return 'bottom-left';\n      if (rect.right > Viewport.width) return 'bottom-right';\n    }\n    return false;\n  }\n\n  public static elementIsClippingCornerOrEdge(element: HTMLElement): DOMViewEdgeAndCornerNames | false {\n    const rect = element.getBoundingClientRect();\n    if (rect.top < 0) {\n      if (rect.left < 0) return 'top-left';\n      if (rect.right > Viewport.width) return 'top-right';\n      return 'top';\n    } else if (rect.bottom > Viewport.height) {\n      if (rect.left < 0) return 'bottom-left';\n      if (rect.right > Viewport.width) return 'bottom-right';\n      return 'bottom';\n    } else if (rect.left < 0) {\n      return 'left';\n    } else if (rect.right > Viewport.width) {\n      return 'right';\n    }\n    return false;\n  }\n}\n","import {\n  Num,\n} from '../rocket';\n\nexport interface Offset {\n  top: number;\n  bottom: number;\n  left: number;\n  right: number;\n  x: number;\n  y: number;\n}\n\nexport class DOMOffset {\n\n  public static getElementOffsetFrom(target: HTMLElement, from: HTMLElement): Offset {\n    const targetRect = target.getBoundingClientRect();\n    const fromRect = from.getBoundingClientRect();\n\n    const top = Num.getEuclideanDistance(targetRect.top, fromRect.top);\n    const bottom = Num.getEuclideanDistance(targetRect.bottom, fromRect.bottom);\n    const left = Num.getEuclideanDistance(targetRect.left, fromRect.left);\n    const right = Num.getEuclideanDistance(targetRect.right, fromRect.right);\n\n    return {\n      top, bottom,\n      left, right,\n      x: left, y: top,\n    };\n  }\n\n  // Get element offset relative to document.\n  public static getElementOffsetFromDocument(element: HTMLElement): Offset {\n    const rect = element.getBoundingClientRect();\n\n    const scrollLeft = window.pageXOffset || document.documentElement.scrollLeft;\n    const scrollTop = window.pageYOffset || document.documentElement.scrollTop;\n\n    const top = rect.top + scrollTop;\n    const bottom = rect.bottom + scrollTop;\n    const left = rect.left + scrollLeft;\n    const right = rect.right + scrollLeft;\n\n    return {\n      top, bottom,\n      left, right,\n      x: left, y: top,\n    };\n  }\n}","import {\n  Num,\n  Point,\n} from '../rocket';\n\ninterface IdentifyElementFn {\n  (element: HTMLElement): boolean;\n}\n\nexport class DOMPoint {\n  // Point is relative to viewport. (clientX, clientY)\n  // Offset is relative to Point.\n  public static getElementOffsetFromPoint(element: HTMLElement, { x, y }: Point): Point {\n    const { left, top } = element.getBoundingClientRect();\n    return new Point(\n      Num.getEuclideanDistance(left, x),\n      Num.getEuclideanDistance(top, y),\n    );\n  }\n\n  public static getElementCornerPoints(element: HTMLElement): Point[] {\n    const { top, bottom, left, right } = element.getBoundingClientRect();\n    return [\n      new Point(left, top),\n      new Point(left, bottom),\n      new Point(right, top),\n      new Point(right, bottom),\n    ];\n  }\n\n  public static getElementCenterPoint(element: HTMLElement): Point {\n    const { left, top, width, height } = element.getBoundingClientRect();\n    return new Point(\n      left + (width  / 2),\n      top  + (height / 2),\n    );\n  }\n\n  public static getElementDiagonalPoints(element: HTMLElement): [Point, Point] {\n    const { top, bottom, left, right } = element.getBoundingClientRect();\n    return [\n      new Point(left, top),\n      new Point(right, bottom),\n    ];\n  }\n\n  public static getElementTopPoints(element: HTMLElement): Point[] {\n    const { left, right, top } = element.getBoundingClientRect();\n    return [\n      new Point(left, top),\n      new Point(right, top),\n    ];\n  }\n\n  public static getElementBottomPoints(element: HTMLElement): Point[] {\n    const { left, right, bottom } = element.getBoundingClientRect();\n    return [\n      new Point(left, bottom),\n      new Point(right, bottom),\n    ];\n  }\n\n  public static getElementLeftPoints(element: HTMLElement): Point[] {\n    const { left, top, bottom } = element.getBoundingClientRect();\n    return [\n      new Point(left, top),\n      new Point(left, bottom),\n    ];\n  }\n\n  public static getElementRightPoints(element: HTMLElement): Point[] {\n    const { right, top, bottom } = element.getBoundingClientRect();\n    return [\n      new Point(right, top),\n      new Point(right, bottom),\n    ];\n  }\n\n  public static elementIsAbovePoints(element: HTMLElement, points: Point | Point[], offset: number = 0) {\n    const { bottom } = element.getBoundingClientRect();\n    if (Array.isArray(points) === true) {\n      let isAbovePoints: boolean = true;\n      (points as Point[]).forEach(({ y }) => {\n        if (bottom + offset < y === false) isAbovePoints = false;\n      })\n      return isAbovePoints;\n    }\n    return bottom + offset < (points as Point).y;\n  }\n\n  public static elementIsBelowPoints(element: HTMLElement, points: Point | Point[], offset: number = 0) {\n    const { top } = element.getBoundingClientRect();\n    if (Array.isArray(points) === true) {\n      let isBelowPoints: boolean = true;\n\n      (points as Point[]).forEach(({ y }) => {\n        if (top + offset > y === false) isBelowPoints = false;\n      });\n      return isBelowPoints;\n    }\n    return top + offset > (points as Point).y;\n  }\n\n  public static elementCenterIsAbovePoints(element: HTMLElement, points: Point | Point[], offset: number = 0) {\n    const centerPoint = this.getElementCenterPoint(element);\n    if (Array.isArray(points) === true) {\n      let isAbovePoint: boolean = true;\n\n      (points as Point[]).forEach(({ y }) => {\n        if (centerPoint.y + offset > y === false) isAbovePoint = false;\n      });\n\n      return isAbovePoint;\n    }\n\n    return centerPoint.y + offset > (points as Point).y;\n  }\n\n  public static elementCenterIsBelowPoints(element: HTMLElement, points: Point | Point[], offset: number = 0) {\n    const centerPoint = this.getElementCenterPoint(element);\n    if (Array.isArray(points) === true) {\n      let isBelowPoint: boolean = true;\n\n      (points as Point[]).forEach(({ y }) => {\n        if (centerPoint.y + offset < y === false) isBelowPoint = false;\n      });\n\n      return isBelowPoint;\n    }\n\n    return centerPoint.y + offset < (points as Point).y;\n  }\n\n  public static getClosestDistanceFromElementCornersToPoint(element: HTMLElement, point: Point): number {\n    const corners = this.getElementCornerPoints(element);\n\n    const distances = corners.map(corner => Point.getDistanceTo(corner, point));\n\n    return Math.min(...distances);\n  }\n\n  public static getDistanceFromElementCenterToPoint(element: HTMLElement, point: Point): number {\n    return Point.getDistanceTo(\n      this.getElementCenterPoint(element),\n      point\n    );\n  }\n\n  // Point is relative to viewport. (clientX, clientY)\n\n  public static pointIsInElement({ x, y }: Point, element: HTMLElement): boolean {\n    return document.elementsFromPoint(x, y).indexOf(element) !== -1;\n  }\n\n  public static findElementFromPoint({ x, y }: Point, identifyElementFn?: IdentifyElementFn, getAll: boolean = true): HTMLElement | HTMLElement[] | false {\n    const elements = document.elementsFromPoint(x, y);\n\n    if (elements.length === 0) return false;\n\n    const identifyElement = typeof identifyElementFn === 'undefined' ? () => true : identifyElementFn;\n\n    let results: HTMLElement[] = [];\n    elements.forEach(element => {\n      if (identifyElement(element as HTMLElement) === true)\n        results.push(element as HTMLElement);\n    });\n\n    if (results.length === 0) {\n      return false;\n    } else if (results.length === 1) {\n      return results[0];\n    }\n\n    if (getAll === true) return results;\n    return results[0];\n  }\n\n  public static getClosestChildFromPoints(parent: HTMLElement, points: Point | Point[], identifyElementFn?: IdentifyElementFn): HTMLElement | false {\n    if (typeof identifyElementFn === 'undefined')\n      identifyElementFn = element => true;\n\n    const children: HTMLElement[] = Array.from(parent.children) as HTMLElement[];\n    const selectedChildren: HTMLElement[] = children.filter(identifyElementFn);\n\n    if (selectedChildren.length === 0) return false;\n\n    const distances: number[] = selectedChildren.map(item => {\n      if (Array.isArray(points) === true) {\n        const distances = (points as Point[]).map(\n          point => this.getClosestDistanceFromElementCornersToPoint(item, point)\n        );\n        return Math.min(...distances);\n      } else {\n        return this.getClosestDistanceFromElementCornersToPoint(item, points as Point);\n      }\n    })\n\n    const closesDistanceIndex: number = distances.indexOf(Math.min(...distances));\n\n    return selectedChildren[closesDistanceIndex];\n  }\n}\n","import {\n  Num,\n  Point,\n} from '../rocket';\n\nexport interface DOMRectangle {\n  top: number;\n  bottom: number;\n  left: number;\n  right: number;\n  center: Point;\n  width: number;\n  height: number;\n}\n\nexport class DOMRect {\n\n  public static getRectFromElements(elements: HTMLElement | HTMLElement[]): DOMRectangle | false {\n    let targets: HTMLElement[];\n\n    if (Array.isArray(elements) === false) {\n      targets = [elements] as HTMLElement[];\n    } else {\n      targets = elements as HTMLElement[];\n    }\n\n    if (targets.length === 0) return false;\n\n    const result = {\n      top:   0, bottom: 0,\n      left:  0, right:  0,\n      width: 0, height: 0,\n      center: Point.zero(),\n    };\n\n    for (let i = 0; i < targets.length; i++) {\n      const { top, bottom, left, right } = targets[i].getBoundingClientRect();\n      if (i === 0) {\n        result.top    = top;\n        result.bottom = bottom;\n        result.left   = left;\n        result.right  = right;\n      } else {\n        if (top    < result.top   ) result.top    = top;\n        if (bottom > result.bottom) result.bottom = bottom;\n        if (left   < result.left  ) result.left   = left;\n        if (right  > result.right ) result.right  = right;\n      }\n    }\n\n    result.width  = Num.getEuclideanDistance(result.left, result.right);\n    result.height = Num.getEuclideanDistance(result.top, result.bottom);\n\n    result.center = new Point(\n      result.left + result.width  / 2,\n      result.top  + result.height / 2,\n    );\n    return result;\n  }\n\n  public static elementsAreOverlapping(element1: HTMLElement, element2: HTMLElement): boolean {\n    const rect1 = element1.getBoundingClientRect();\n    const rect2 = element2.getBoundingClientRect();\n    if (\n         rect1.left > rect2.right\n      || rect2.left > rect1.right\n      || rect1.top  > rect2.bottom\n      || rect2.top  > rect1.bottom\n    ) return false;\n    return true;\n  }\n\n  public static getOverlappingAreaFromElements(element1: HTMLElement, element2: HTMLElement): number {\n    const rect1 = element1.getBoundingClientRect();\n    const rect2 = element2.getBoundingClientRect();\n    if (this.elementsAreOverlapping(element1, element2) === true) {\n      const top    = Math.max(rect1.top,    rect2.top);\n      const bottom = Math.min(rect1.bottom, rect2.bottom);\n      const left   = Math.max(rect1.left,   rect2.left);\n      const right  = Math.min(rect1.right,  rect2.right);\n      const width  = Num.getEuclideanDistance(left, right);\n      const height = Num.getEuclideanDistance(top, bottom);\n      return width * height;\n    }\n    return 0;\n  }\n}","import {\n  DOMRect,\n  Viewport,\n} from '../rocket';\n\nexport interface DOMScrollTo {\n  left: number;\n  top: number;\n}\n\nexport class DOMScroll {\n\n  public static get scrollLeft(): number {\n    return window.pageXOffset || document.documentElement.scrollLeft || document.body.scrollLeft || window.scrollX || 0;\n  }\n\n  public static get scrollTop(): number {\n    return window.pageYOffset || document.documentElement.scrollTop || document.body.scrollTop || window.scrollY || 0;\n  }\n\n  public static getScrollLeftToElements(elements: HTMLElement | HTMLElement[]): number {\n    let rect, left = 0;\n\n    if (Array.isArray(elements) === true) {\n      rect = DOMRect.getRectFromElements(elements);\n    } else {\n      rect = (elements as HTMLElement).getBoundingClientRect();\n    }\n\n    if (rect !== false) left = rect.left;\n\n    return left + this.scrollLeft;\n  }\n\n  public static getScrollTopToElements(elements: HTMLElement | HTMLElement[]): number {\n    let rect, top = 0;\n\n    if (Array.isArray(elements) === true) {\n      rect = DOMRect.getRectFromElements(elements);\n    } else {\n      rect = (elements as HTMLElement).getBoundingClientRect();\n    }\n\n    if (rect !== false) top = rect.top;\n\n    return top + this.scrollTop;\n  }\n\n  public static getScrollLeftToElementsCenterFrame(elements: HTMLElement | HTMLElement[]): number {\n    let rect, left = 0, width = 0;\n\n    if (Array.isArray(elements) === true) {\n      rect = DOMRect.getRectFromElements(elements);\n    } else {\n      rect = (elements as HTMLElement).getBoundingClientRect();\n    }\n\n    if (rect !== false) {\n      left = rect.left;\n      width = rect.width;\n    }\n\n    return left - ((Viewport.width - width) / 2) + this.scrollLeft;\n  }\n\n  public static getScrollTopToElementsCenterFrame(elements: HTMLElement | HTMLElement[]): number {\n    let rect, top = 0, height = 0;\n\n    if (Array.isArray(elements) === true) {\n      rect = DOMRect.getRectFromElements(elements);\n    } else {\n      rect = (elements as HTMLElement).getBoundingClientRect();\n    }\n\n    if (rect !== false) {\n      top = rect.top;\n      height = rect.height;\n    }\n\n    return top - ((Viewport.height - height) / 2) + this.scrollTop;\n  }\n\n  public static getScrollToElementsCenterFrame(elements: HTMLElement): DOMScrollTo {\n    return {\n      left: this.getScrollLeftToElementsCenterFrame(elements),\n      top: this.getScrollTopToElementsCenterFrame(elements),\n    };\n  }\n}\n","import {\n  DOMUtil,\n  DOMScroll,\n  Num,\n  Point,\n} from './rocket';\n\nconst MODEL_ATTRIBUTES = {\n  border: 'none',\n  boxSizing: 'border-box',\n  display: 'block',\n  height: '100vh',\n  left: '0',\n  padding: '0',\n  position: 'fixed',\n  top: '0',\n  visibility: 'hidden',\n  width: '100vw',\n  zIndex: '-9999',\n};\n\nlet modelElement: HTMLElement;\nlet modelIsReady: boolean = false;\n\nlet scrollToggleElement: HTMLElement = document.body;\nlet scrollingIsDisabled: boolean = false;\nlet scrollingIsLocked: boolean = false;\n\nlet scrollX: number;\nlet scrollY: number;\n\nexport class Viewport {\n\n  public static setScrollToggleElement(element: HTMLElement) {\n    if (\n      DOMUtil.isHTMLElement(element) === true\n      && scrollingIsDisabled === false\n    ) {\n      scrollToggleElement = element;\n    } else {\n      scrollToggleElement = document.body;\n    }\n  }\n\n  public static get scrollingIsEnabled() {\n    return !scrollingIsDisabled;\n  }\n\n  public static get scrollingIsLocked() {\n    return scrollingIsLocked;\n  }\n\n  public static disableScrolling(isLocked: boolean = false, forceHideScrollbar: boolean = false) {\n    if (scrollingIsDisabled === false) {\n      let hasHorizontalScrollBar = this.hasHorizontalScrollBar;\n      let hasVerticalScrollBar = this.hasVerticalScrollbar;\n\n      scrollX = DOMScroll.scrollLeft;\n      scrollY = DOMScroll.scrollTop;\n\n      scrollToggleElement.style.overflow = 'hidden';\n      scrollToggleElement.style.position = 'fixed';\n      scrollToggleElement.style.left = `-${scrollX}px`;\n      scrollToggleElement.style.top = `-${scrollY}px`;\n\n      if (\n        hasHorizontalScrollBar === true\n        && forceHideScrollbar === false\n      ) document.documentElement.style.overflowX = 'scroll';\n     \n      if (\n        hasVerticalScrollBar === true\n        && forceHideScrollbar === false\n      ) document.documentElement.style.overflowY = 'scroll';\n\n      scrollingIsLocked = isLocked;\n      scrollingIsDisabled = true;\n    }\n  }\n\n  public static enableScrolling(unlock: boolean = false) {\n    if (scrollingIsDisabled === true) {\n      if (\n        scrollingIsLocked === false\n        || (scrollingIsLocked === true && unlock === true)\n      ) {\n        document.documentElement.style.removeProperty('overflow-x');\n        document.documentElement.style.removeProperty('overflow-y');\n        scrollToggleElement.style.removeProperty('overflow');\n        scrollToggleElement.style.removeProperty('position');\n        scrollToggleElement.style.removeProperty('left');\n        scrollToggleElement.style.removeProperty('top');\n        window.scrollTo(scrollX, scrollY);\n        scrollingIsLocked   = false;\n        scrollingIsDisabled = false;\n      }\n    }\n  }\n\n  public static scrollTo(left: number, top: number) {\n    if (scrollingIsDisabled === true) {\n      scrollX = left;\n      scrollY = top;\n      scrollToggleElement.style.left = `-${left}px`;\n      scrollToggleElement.style.top = `-${top}px`;\n    } else {\n      window.scrollTo(left, top);\n    }\n  }\n\n  // @model_properties\n  public static get hasHorizontalScrollBar(): boolean {\n    return window.innerHeight > document.documentElement.scrollHeight;\n  }\n\n  public static get hasVerticalScrollbar(): boolean {\n    return window.innerWidth > document.documentElement.scrollWidth;\n  }\n\n  public static get centerPoint(): Point {\n    this.createModel();\n    return new Point(this.centerX, this.centerY);\n  }\n\n  public static get centerX(): number {\n    this.createModel();\n    return modelElement.offsetWidth / 2;\n  }\n\n  public static get centerY(): number {\n    this.createModel();\n    return modelElement.offsetHeight / 2;\n  }\n\n  public static get width(): number {\n    this.createModel();\n    return modelElement.offsetWidth;\n  }\n\n  public static get height(): number {\n    this.createModel();\n    return modelElement.offsetHeight;\n  }\n\n  public static get diagonal(): number {\n    this.createModel();\n    const w = modelElement.offsetWidth;\n    const h = modelElement.offsetHeight;\n    return Num.hypotenuse(w, h);\n  }\n\n  // @model\n\n  public static get modelElement(): HTMLElement {\n    this.createModel();\n    return modelElement;\n  }\n\n  public static get modelIsReady(): boolean {\n    return modelIsReady;\n  }\n\n  public static get modelIsCreated(): boolean {\n    return (\n      typeof modelElement !== 'undefined'\n      && modelElement.nodeType === 1\n    );\n  }\n\n  public static createModel(): Viewport {\n    if (modelIsReady === false) {\n      modelElement = document.createElement('DIV');\n      document.body.appendChild(modelElement);\n      Object.assign(modelElement.style, MODEL_ATTRIBUTES);\n      modelIsReady = true;\n    }\n    return this;\n  }\n\n  public static destroyModel(): Viewport {\n    if (modelIsReady === true) {\n      document.body.removeChild(modelElement);\n      modelElement.remove();\n      modelIsReady = false;\n    }\n    return this;\n  }\n}\n","import {\n  Num,\n} from '../rocket';\n\nexport class Angle {\n\n  public static toDegrees(radians: number): number {\n    return radians * (180 / Math.PI);\n  }\n\n  public static toRadians(degrees: number): number {\n    return degrees * (Math.PI / 180);\n  }\n\n  public static deltaClockwise(from: number, to: number, direction: boolean = false): number {\n    let sign = 1;\n    const range = from - Math.PI;\n\n    if (range < 0) {\n      const offset = Num.cycle(range, Math.PI * 2);\n      if (to < from || to >= offset) sign = -1;\n    } else if (to < from && to >= range ) {\n      sign = -1;\n    }\n\n    if (direction === false) sign = 1;\n\n    let result = 0;\n    if (from > to) {\n      result = from - to;\n    } else if (to > from) {\n      result = to - from;\n    }\n    return result * sign;\n  }\n\n  public static deltaCounterclockwise(from: number, to: number, direction: boolean = false): number {\n    let sign = 1;\n    const range = from + Math.PI;\n\n    if (range > Math.PI * 2) {\n      const offset = Num.cycle(range, Math.PI * 2);\n      if (to > from || to <= offset) sign = -1;\n    } else if (to > from && to <= range) {\n      sign = -1;\n    }\n\n    if (direction === false) sign = 1;\n\n    let result = 0;\n    if (from > to) {\n      result = from - to;\n    } else if (to > from) {\n      result = to - from;\n    }\n    return result * sign;\n  }\n\n  public static differenceClockwise(from: number, to: number) {\n    let result = 0;\n    if (from > to) {\n      result = (Math.PI * 2) - from + to;\n    } else if (to > from) {\n      result = to - from;\n    }\n    return result;\n  }\n\n  public static differenceCounterclockwise(from: number, to: number) {\n    let result = 0;\n    if (from > to) {\n      result = from - to;\n    } else if (to > from) {\n      result = from + (Math.PI * 2) - to;\n    }\n    return result;\n  }\n}\n","import {\n  Point,\n} from '../rocket';\n\nexport class Geo2Util {\n  // linear\n  // negative  = \\\n  // positive  = /\n  // 0         = horizontal\n  // undefined = vertical\n  public static getSlopeOfLine(ls: Point, le: Point): number | false {\n    if (le.x === ls.x) {\n      return false;\n    } else {\n      let rise = le.y - ls.y;\n      let run = le.x - ls.x;\n      return rise / run;\n    }\n  }\n\n  public static checkIfTwoLineSegmentsAreParallel(ls1: Point, le1: Point, ls2: Point, le2: Point): boolean {\n    let s1 = Geo2Util.getSlopeOfLine(ls1, le1)\n    let s2 = Geo2Util.getSlopeOfLine(ls2, le2)\n    return s1 === s2\n  }\n\n  // Two lines will always intersect unless they are parallel.\n  // Check if two line segments intersect each other.\n  public static checkIfTwoLineSegmentsIntersect(ls1: Point, le1: Point, ls2: Point, le2: Point): boolean {\n    const pi = Geo2Util.getPointOfIntersectionBetweenTwoLineSegments(ls1, le1, ls2, le2);\n\n    if (pi === false) return false;\n\n    if (\n         pi.x > Math.max(ls1.x, le1.x)\n      || pi.x < Math.min(ls1.x, le1.x)\n      || pi.x > Math.max(ls2.x, le2.x)\n      || pi.x < Math.min(ls2.x, le2.x)\n      || pi.y > Math.max(ls1.y, le1.y)\n      || pi.y < Math.min(ls1.y, le1.y)\n      || pi.y > Math.max(ls2.y, le2.y)\n      || pi.y < Math.min(ls2.y, le2.y)\n    )\n      return false;\n    return true;\n  }\n\n  public static getPointOfIntersectionBetweenTwoLineSegments(ls1: Point, le1: Point, ls2: Point, le2: Point): Point | false {\n    if (Geo2Util.checkIfTwoLineSegmentsAreParallel(ls1, le1, ls2, le2) === true)\n      return false;\n\n    let ix = 0, iy = 0;\n\n    // Get slope.\n    let m1 = Geo2Util.getSlopeOfLine(ls1, le1);\n    let m2 = Geo2Util.getSlopeOfLine(ls2, le2);\n\n    let yi1, yi2;\n\n    if (\n      m1 === false\n      && typeof m2 === 'number'\n    ) {\n      ix = ls1.x;\n      yi2 = -1 * m2 * ls2.x + ls2.y;\n      iy = m2 * ix + yi2;\n    } else if (\n      m2 === false\n      && typeof m1 === 'number'\n    ) {\n      ix = ls2.x;\n      yi1 = -1 * m1 * ls1.x + ls1.y;\n      iy = m1 * ix + yi1;\n    } else if (\n         typeof m1 === 'number'\n      && typeof m2 === 'number'\n    ) {\n      // Get y-intercept\n      // b = -m * x + y\n      yi1 = -1 * m1 * ls1.x + ls1.y;\n      yi2 = -1 * m2 * ls2.x + ls2.y;\n      // Complete line equations\n      ix = (yi1 - yi2) / (m2 - m1);\n      iy = m1 * ix + yi1;\n    }\n\n    return new Point(ix, iy);\n  }\n}\n","import {\n  Num,\n  Vector2,\n} from '../rocket';\n\nexport interface PointLike {\n  x: number;\n  y: number;\n  [key: string]: any;\n}\n\nexport class Point {\n\n  public x: number = 0;\n  public y: number = 0;\n\n  constructor(x: number, y: number);\n  constructor(x: number);\n  constructor(p: Point);\n  constructor(v: Vector2);\n  constructor(p: PointLike);\n  constructor();\n  constructor(a?: number | PointLike, b?: number) {\n    if (typeof a === 'number' && typeof b === 'number') {\n      this.x = a;\n      this.y = b;\n    } else if (typeof a === 'number' && typeof b !== 'number') {\n      this.x = a;\n      this.y = a;\n    } else if (Point.isPointLike(a) === true) {\n      a = a as PointLike;\n      this.x = a.x;\n      this.y = a.y;\n    }\n    return this;\n  }\n\n  public equals(x: number, y: number): this;\n  public equals(n: number): this;\n  public equals(p: Point): this;\n  public equals(v: Vector2): this;\n  public equals(p: PointLike): this;\n  public equals(a: number | PointLike, b?: number): this {\n    if (typeof a === 'number' && typeof b === 'number') {\n      this.x = a;\n      this.y = b;\n    } else if (typeof a === 'number' && typeof b !== 'number') {\n      this.x = a;\n      this.y = a;\n    } else if (Point.isPointLike(a) === true) {\n      a = a as PointLike;\n      this.x = a.x;\n      this.y = a.y;\n    }\n    return this;\n  }\n\n  public clone() {\n    return new Point(this.x, this.y);\n  }\n  \n  public isEqual(...points: PointLike[]): boolean {\n    let isEqual = true;\n    points.forEach(point => {\n      if (this.x !== point.x || this.y !== point.y) isEqual = false;\n    });\n    return isEqual;\n  }\n\n  public toVector2(): Vector2 {\n    return new Vector2(this.x, this.y);\n  }\n\n  // @modify\n\n  public round(to: number = 0): this {\n    this.x = parseFloat(this.x.toFixed(to));\n    this.y = parseFloat(this.y.toFixed(to));\n    return this;\n  }\n\n  public negative(): this {\n    this.x = -this.x;\n    this.y = -this.y;\n    return this;\n  }\n\n  public absolute(): this {\n    this.x = Math.abs(this.x);\n    this.y = Math.abs(this.y);\n    return this;\n  }\n\n  public zero(): this {\n    this.x = this.y = 0;\n    return this;\n  }\n\n  // @calculate\n\n  public getLengthFromOrigin(): number {\n    return Num.hypotenuse(this.x, this.y);\n  }\n\n  public getLengthFrom(x: number, y: number): number;\n  public getLengthFrom(p: number): number;\n  public getLengthFrom(a: number | PointLike, b?: number): number {\n    let x, y;\n    x = y = 0;\n    if (typeof a === 'number' && typeof b === 'number') {\n      x = a; y = b;\n    } else if (Point.isPointLike(a) === true) {\n      a = a as PointLike;\n      x = a.x;\n      y = a.y;\n    }\n    x = this.x - x;\n    y = this.y - y;\n    return Num.hypotenuse(x, y);\n  }\n\n  // @operations\n\n  public add(x: number, y: number): this;\n  public add(n: number): this;\n  public add(p: Point): this;\n  public add(v: Vector2): this;\n  public add(p: PointLike): this;\n  public add(a: PointLike | number, b?: number): this {\n    if (typeof a === 'number' && typeof b === 'number') {\n      this.x += a;\n      this.y += b;\n    } else if (typeof a === 'number' && typeof b !== 'number') {\n      this.x += a;\n      this.y += a;\n    } else if (Point.isPointLike(a) === true) {\n      a = a as PointLike;\n      this.x += a.x;\n      this.y += a.y;\n    }\n    return this;\n  }\n\n  public addX(n: number): this;\n  public addX(p: Point): this;\n  public addX(v: Vector2): this;\n  public addX(p: PointLike): this;\n  public addX(a: PointLike | number): this {\n    if (typeof a === 'number') {\n      this.x += a;\n    } else if (Point.isPointLike(a) === true) {\n      this.x += a.x;\n    }\n    return this;\n  }\n\n  public addY(n: number): this;\n  public addY(p: Point): this;\n  public addY(v: Vector2): this;\n  public addY(p: PointLike): this;\n  public addY(a: PointLike | number): this {\n    if (typeof a === 'number') {\n      this.y += a;\n    } else if (Point.isPointLike(a) === true) {\n      this.y += a.y;\n    }\n    return this;\n  }\n\n  public subtract(x: number, y: number): this;\n  public subtract(n: number): this;\n  public subtract(p: Point): this;\n  public subtract(v: Vector2): this;\n  public subtract(p: PointLike): this;\n  public subtract(a: PointLike | number, b?: number): this {\n    if (typeof a === 'number' && typeof b === 'number') {\n      this.x -= a;\n      this.y -= b;\n    } else if (typeof a === 'number' && typeof b !== 'number') {\n      this.x -= a;\n      this.y -= a;\n    } else if (Point.isPointLike(a) === true) {\n      a = a as PointLike;\n      this.x -= a.x;\n      this.y -= a.y;\n    }\n    return this;\n  }\n\n  public subtractX(n: number): this;\n  public subtractX(p: Point): this;\n  public subtractX(v: Vector2): this;\n  public subtractX(p: PointLike): this;\n  public subtractX(a: PointLike | number): this {\n    if (typeof a === 'number') {\n      this.x -= a;\n    } else if (Point.isPointLike(a) === true) {\n      this.x -= a.x;\n    }\n    return this;\n  }\n\n  public subtractY(n: number): this;\n  public subtractY(p: Point): this;\n  public subtractY(v: Vector2): this;\n  public subtractY(p: PointLike): this;\n  public subtractY(a: PointLike | number): this {\n    if (typeof a === 'number') {\n      this.y -= a;\n    } else if (Point.isPointLike(a) === true) {\n      this.y -= a.y;\n    }\n    return this;\n  }\n\n  public multiply(x: number, y: number): this;\n  public multiply(n: number): this;\n  public multiply(p: Point): this;\n  public multiply(v: Vector2): this;\n  public multiply(p: PointLike): this;\n  public multiply(a: PointLike | number, b?: number): this {\n    if (typeof a === 'number' && typeof b === 'number') {\n      this.x *= a;\n      this.y *= b;\n    } else if (typeof a === 'number' && typeof b !== 'number') {\n      this.x *= a;\n      this.y *= a;\n    } else if (Point.isPointLike(a) === true) {\n      a = a as PointLike;\n      this.x *= a.x;\n      this.y *= a.y;\n    }\n    return this;\n  }\n\n  public multiplyX(n: number): this;\n  public multiplyX(p: Point): this;\n  public multiplyX(v: Vector2): this;\n  public multiplyX(p: PointLike): this;\n  public multiplyX(a: PointLike | number): this {\n    if (typeof a === 'number') {\n      this.x *= a;\n    } else if (Point.isPointLike(a) === true) {\n      this.x *= a.x;\n    }\n    return this;\n  }\n\n  public multiplyY(n: number): this;\n  public multiplyY(p: Point): this;\n  public multiplyY(v: Vector2): this;\n  public multiplyY(p: PointLike): this;\n  public multiplyY(a: PointLike | number): this {\n    if (typeof a === 'number') {\n      this.y *= a;\n    } else if (Point.isPointLike(a) === true) {\n      this.y *= a.y;\n    }\n    return this;\n  }\n\n  public divide(x: number, y: number): this;\n  public divide(n: number): this;\n  public divide(p: Point): this;\n  public divide(v: Vector2): this;\n  public divide(p: PointLike): this;\n  public divide(a: PointLike | number, b?: number): this {\n    if (typeof a === 'number' && typeof b === 'number') {\n      if (a === 0 || b === 0) {\n        throw new Error('Point: Division by zero.');\n      } else {\n        this.x /= a;\n        this.y /= b;\n      }\n    } else if (typeof a === 'number' && typeof b !== 'number') {\n      if (a === 0) {\n        throw new Error('Point: Division by zero.');\n      } else {\n        this.x /= a;\n        this.y /= a;\n      }\n    } else if (Point.isPointLike(a) === true) {\n      a = a as PointLike;\n      if (a.x === 0 || a.y === 0) {\n        throw new Error('Point: Division by zero.');\n      } else {\n        this.x /= a.x;\n        this.y /= a.y;\n      }\n    }\n    return this;\n  }\n\n  public divideX(n: number): this;\n  public divideX(p: Point): this;\n  public divideX(v: Vector2): this;\n  public divideX(p: PointLike): this;\n  public divideX(a: PointLike | number): this {\n    if (typeof a === 'number') {\n      if (a === 0) {\n        throw new Error('Point: Division by zero.');\n      } else {\n        this.x /= a;\n      }\n    } else if (Point.isPointLike(a) === true) {\n      if (a.x === 0) {\n        throw new Error('Point: Division by zero.');\n      } else {\n        this.x /= a.x;\n      }\n    }\n    return this;\n  }\n\n  public divideY(n: number): this;\n  public divideY(p: Point): this;\n  public divideY(v: Vector2): this;\n  public divideY(p: PointLike): this;\n  public divideY(a: PointLike | number): this {\n    if (typeof a === 'number') {\n      if (a === 0) {\n        throw new Error('Point: Division by zero.');\n      } else {\n        this.y /= a;\n      }\n    } else if (Point.isPointLike(a) === true) {\n      if (a.y === 0) {\n        throw new Error('Point: Division by zero.');\n      } else {\n        this.y /= a.y;\n      }\n    }\n    return this;\n  }\n\n  public static add(point1: PointLike, point2: PointLike, mutate: boolean = false): Point {\n    const x = point1.x + point2.x;\n    const y = point1.y + point2.y;\n    if (mutate === true) {  \n      point1.x = x;\n      point1.y = y;\n      return new Point().equals(point1);\n    }\n    return new Point(x, y);\n  }\n\n  public static subtract(point: PointLike, by: PointLike, mutate: boolean = false): Point {\n    const x = point.x - by.x;\n    const y = point.y - by.y;\n    if (mutate === true) {  \n      point.x = x;\n      point.y = y;\n      return new Point().equals(point);\n    }\n    return new Point(x, y);\n  }\n\n  public static multiply(point: PointLike, by: PointLike, mutate: boolean = false): Point {\n    const x = point.x * by.x;\n    const y = point.y * by.y;\n    if (mutate === true) {\n      point.x = x;\n      point.y = y;\n      return new Point().equals(point);\n    }\n    return new Point(x, y);\n  }\n\n  public static divide(point: PointLike, by: PointLike, mutate: boolean = false): Point | undefined {\n    if (by.x === 0 || by.y === 0) throw new Error('Point: Division by zero.');\n    const x = point.x / by.x;\n    const y = point.y / by.y;\n    if (mutate === true) {\n      point.x = x;\n      point.y = y;\n      return new Point().equals(point);\n    }\n    return new Point(x, y);\n  }\n\n  public static getDistanceTo(from: PointLike, to: PointLike): number {\n    const difference = Point.subtract(from, to, true);\n    return difference.getLengthFromOrigin();\n  }\n\n  public static getMidPointBetween(a: PointLike, b: PointLike): Point {\n    let x = a.x - b.x;\n    let y = a.y - b.y;\n    x /= 2;\n    y /= 2;\n    x += b.x;\n    y += b.y;\n    return new Point(x, y);\n  }\n\n  public static lerp(time: number, from: PointLike, to: PointLike, mutate: boolean = false): Point {\n    const x = Num.modulate(time, 1, [from.x, to.x], false);\n    const y = Num.modulate(time, 1, [from.y, to.y], false);\n    if (mutate === true) {\n      from.x = x;\n      from.y = y;\n      return new Point().equals(from);\n    }\n    return new Point(x, y);\n  }\n\n  // @zero\n\n  public static zero(point?: Point, mutate: boolean = false): Point {\n    if (\n      typeof point !== 'undefined' &&\n      mutate === true\n    ) {\n      point.x = 0;\n      point.y = 0;\n      return point;\n    }\n    return new Point(0, 0);\n  }\n\n  public static isPointLike(point): boolean {\n    if (\n      typeof point === 'object' &&\n      typeof point.x === 'number' &&\n      typeof point.y === 'number'\n    ) return true;\n    return false;\n  }\n}\n","import {\n  Angle,\n  Num,\n  Point,\n  PointLike,\n} from '../rocket';\n\n// Glossary\n// point: An object containing x and y numbers, representing position in the cartesian plane.\n// length: Magnitude between two vectors OR magnitude of a vector.\n// displacement: A vector, representing the distance and direction of one point to another.\n// direction: A unit vector representing the direction from one point to another.\n\nexport class Vector2 {\n\n  public x: number = 0;\n  public y: number = 0;\n\n  constructor(x: number, y: number);\n  constructor(n: number);\n  constructor(v: Vector2);\n  constructor(p: Point);\n  constructor(p: PointLike);\n  constructor();\n  constructor(a?: number | PointLike, b?: number) {\n    if (typeof a === 'number' && typeof b === 'number') {\n      this.x = a;\n      this.y = b;\n    } else if (typeof a === 'number' && typeof b === 'undefined') {\n      this.x = a;\n      this.y = a;\n    } else if (Point.isPointLike(a) === true) {\n      a = a as PointLike;\n      this.x = a.x;\n      this.y = a.y;\n    }\n    return this;\n  }\n\n  public equals(x: number, y: number): this;\n  public equals(n: number): this;\n  public equals(v: Vector2): this;\n  public equals(p: Point): this;\n  public equals(p: PointLike): this;\n  public equals(a?: number | PointLike, b?: number): this {\n    if (typeof a === 'number' && typeof b === 'number') {\n      this.x = a;\n      this.y = b;\n    } else if (typeof a === 'number' && typeof b === 'undefined') {\n      this.x = a;\n      this.y = a;\n    } else if (Point.isPointLike(a) === true) {\n      a = a as PointLike;\n      this.x = a.x;\n      this.y = a.y;\n    }\n    return this;\n  }\n\n  public isEqual(...v: PointLike[]): boolean {\n    let isEqual = true;\n    v.forEach(p => {\n      if (this.x !== p.x || this.y !== p.y) isEqual = false;\n    });\n    return isEqual;\n  }\n\n  public toPoint(): Point {\n    return new Point(this.x, this.y);\n  }\n\n  public negative(): this {\n    this.x = -this.x;\n    this.y = -this.y;\n    return this;\n  }\n\n  public absolute(): this {\n    this.x = Math.abs(this.x);\n    this.y = Math.abs(this.y);\n    return this;\n  }\n\n  public constrain(constrain: number): this {\n    this.x = Num.constrain(this.x, constrain);\n    this.y = Num.constrain(this.y, constrain);\n    return this;\n  }\n\n  public limit(by: number): this {\n    if (this.magnitude > by) this.normalize().multiply(by);\n    return this;\n  }\n\n  // @magnitude\n  get magnitude(): number {\n    return Num.hypotenuse(this.x, this.y);\n  }\n\n  set magnitude(magnitude: number) {\n    this.normalize().multiply(magnitude);\n  }\n\n  public normalize(): this {\n    let magnitude = Math.abs(this.magnitude);\n    if (magnitude === 0) magnitude = 1;\n    this.x /= magnitude;\n    this.y /= magnitude;\n    return this;\n  }\n\n  public dot(point: PointLike): number {\n    return this.x * point.x + this.y * point.y;\n  }\n\n  public round(to: number = 0): this {\n    this.x = parseFloat(this.x.toFixed(to));\n    this.y = parseFloat(this.y.toFixed(to));\n    return this;\n  }\n\n  // @zero\n\n  public zero(): this {\n    this.x = this.y = 0;\n    return this;\n  }\n\n  get isZero(): boolean {\n    return this.x === 0 && this.y === 0;\n  }  \n\n  // @getters\n\n  get clone(): Vector2 {\n    return Vector2.clone(this);\n  }\n\n  get array(): [number, number] {\n    return [this.x, this.y];\n  }\n\n  get string(): string {\n    return `x: ${this.x}, y: ${this.y}`;\n  }\n\n  get average(): number {\n    return (Math.abs(this.x) + Math.abs(this.y)) / 2;\n  }\n\n  // @add\n\n  public add(x: number, y: number): this;\n  public add(n: number): this;\n  public add(v: Vector2): this;\n  public add(p: Point): this;\n  public add(p: PointLike): this;\n  public add(a: number | PointLike, b?: number): this {\n    if (Point.isPointLike(a) === true) {\n      a = a as PointLike;\n      this.x += a.x;\n      this.y += a.y;\n    } else if (typeof a === 'number' && typeof b === 'number') {\n      this.x += a;\n      this.y += b;\n    } else if (typeof a === 'number' && typeof b !== 'number') {\n      this.x += a;\n      this.y += a;\n    } \n    return this;\n  }\n\n  public addX(n: number): this;\n  public addX(v: Vector2): this;\n  public addX(p: Point): this;\n  public addX(p: PointLike): this;\n  public addX(a: number | PointLike): this {\n    if (typeof a === 'number') {\n      this.x += a;\n    } else if (typeof a === 'object' && typeof a.x === 'number') {\n      this.x += a.x;\n    }\n    return this;\n  }\n\n  public addY(n: number): this;\n  public addY(v: Vector2): this;\n  public addY(p: Point): this;\n  public addY(p: PointLike): this;\n  public addY(a: number | PointLike): this {\n    if (typeof a === 'number') {\n      this.y += a;\n    } else if (typeof a === 'object' && typeof a.y === 'number') {\n      this.y += a.y;\n    }\n    return this;\n  }\n\n  // @subtract\n\n  public subtract(x: number, y: number): this;\n  public subtract(n: number): this;\n  public subtract(v: Vector2): this;\n  public subtract(p: Point): this;\n  public subtract(p: PointLike): this;\n  public subtract(a: number | PointLike, b ? : number): this {\n    if (Point.isPointLike(a) === true) {\n      a = a as PointLike;\n      this.x -= a.x;\n      this.y -= a.y;\n    } else if (typeof a === 'number' && typeof b !== 'number') {\n      this.x -= a;\n      this.y -= a;\n    } else if (typeof a === 'number' && typeof b === 'number') {\n      this.x -= a;\n      this.y -= b;\n    }\n    return this;\n  }\n\n  public subtractX(n: number): this;\n  public subtractX(v: Vector2): this;\n  public subtractX(p: Point): this;\n  public subtractX(p: PointLike): this;\n  public subtractX(a: number | PointLike): this {\n    if (typeof a === 'number') {\n      this.x -= a;\n    } else if (typeof a === 'object' && typeof a.x === 'number') {\n      this.x -= a.x;\n    }\n    return this;\n  }\n\n  public subtractY(n: number): this;\n  public subtractY(v: Vector2): this;\n  public subtractY(p: Point): this;\n  public subtractY(p: PointLike): this;\n  public subtractY(a: number | PointLike): this {\n    if (typeof a === 'number') {\n      this.y -= a;\n    } else if (typeof a === 'object' && typeof a.y === 'number') {\n      this.y -= a.y;\n    }\n    return this;\n  }\n\n  // @multiply\n\n  public multiply(x: number, y: number): this;\n  public multiply(n: number): this;\n  public multiply(v: Vector2): this;\n  public multiply(p: Point): this;\n  public multiply(p: PointLike): this;\n  public multiply(a: number | PointLike, b?: number): this {\n    if (Point.isPointLike(a) === true) {\n      a = a as PointLike;\n      this.x *= a.x;\n      this.y *= a.y;\n    } else if (typeof a === 'number' && typeof b !== 'number') {\n      this.x *= a;\n      this.y *= a;\n    } else if (typeof a === 'number' && typeof b === 'number') {\n      this.x *= a;\n      this.y *= b;\n    }\n    return this;\n  }\n\n  public multiplyX(n: number): this;\n  public multiplyX(v: Vector2): this;\n  public multiplyX(p: Point): this;\n  public multiplyX(p: PointLike): this;\n  public multiplyX(a: number | PointLike): this {\n    if (typeof a === 'number') {\n      this.x *= a;\n    } else if (Point.isPointLike(a) === true) {\n      this.x *= a.x;\n    }\n    return this;\n  }\n\n  public multiplyY(n: number): this;\n  public multiplyY(v: Vector2): this;\n  public multiplyY(p: Point): this;\n  public multiplyY(p: PointLike): this;\n  public multiplyY(a: number | PointLike): this {\n    if (typeof a === 'number') {\n      this.y *= a;\n    } else if (Point.isPointLike(a) === true) {\n      this.y *= a.y;\n    }\n    return this;\n  }\n\n  // @divide\n\n  public divide(x: number, y: number): this;\n  public divide(n: number): this;\n  public divide(v: Vector2): this;\n  public divide(p: Point): this;\n  public divide(p: PointLike): this;\n  public divide(a: number | PointLike, b?: number): this {\n    if (typeof a === 'number' && typeof b !== 'number') {\n      if (a === 0) {\n        throw new Error('Vector2: Division by zero.');\n      } else {\n        this.x /= a;\n        this.y /= a;\n      }\n    } else if (typeof a === 'number' && typeof b === 'number') {\n      if (a === 0 || b === 0) {\n        throw new Error('Vector2: Division by zero.');\n      } else {\n        this.x /= a;\n        this.y /= b;\n      }\n    } else if (Point.isPointLike(a) === true) {\n      a = a as PointLike;\n      if (a.x === 0 || a.y === 0) {\n        throw new Error('Vector2: Division by zero.');\n      } else {\n        this.x /= a.x;\n        this.y /= a.y;\n      }\n    }\n    return this;\n  }\n\n  public divideX(n: number): this;\n  public divideX(v: Vector2): this;\n  public divideX(p: Point): this;\n  public divideX(p: PointLike): this;\n  public divideX(a: number | PointLike): this {\n    if (typeof a === 'number') {\n      if (a === 0) {\n        throw new Error('Vector2: Division by zero.');\n      } else {\n        this.x /= a;\n      }\n    } else if (Point.isPointLike(a) === true) {\n      a = a as PointLike;\n      if (a.x === 0) {\n        throw new Error('Vector2: Division by zero.');\n      } else {\n        this.x /= a.x;\n      }\n    }\n    return this;\n  }\n\n  public divideY(n: number): this;\n  public divideY(v: Vector2): this;\n  public divideY(p: Point): this;\n  public divideY(p: PointLike): this;\n  public divideY(a: number | PointLike): this {\n    if (typeof a === 'number') {\n      if (a === 0) {\n        throw new Error('Vector2: Division by zero.');\n      } else {\n        this.y /= a;\n      }\n    } else if (Point.isPointLike(a) === true) {\n      a = a as PointLike;\n      if (a.y === 0) {\n        throw new Error('Vector2: Division by zero.');\n      } else {\n        this.y /= a.y;\n      }\n    }\n    return this;\n  }\n\n  public getDistanceTo(to: PointLike): number {\n    return Vector2.subtract(this, to).magnitude;\n  }\n\n  // @angle\n\n  get angle() {\n    let angle = Math.acos(this.x / this.magnitude);\n    if (this.y < 0) angle = Math.PI + (Math.PI - angle);\n    return angle;\n  }\n\n  public getAngleFrom(from: PointLike): number {\n    const x = (this.x - from.x);\n    const y = (this.y - from.y);\n    const m = Num.hypotenuse(x, y);\n    let angle = Math.acos(x / m);\n    if (y < 0) angle = Math.PI + (Math.PI - angle);\n    return angle;\n  }\n\n  public getAngleTo(to: PointLike): number {\n    const x = (to.x - this.x);\n    const y = (to.y - this.y);\n    const m = Num.hypotenuse(x, y);\n    let angle = Math.acos(x / m);\n    if (y < 0) angle = Math.PI + (Math.PI - angle);\n    return angle;\n  }\n\n  // @transform\n\n  // @translate\n\n  // @move // translate\n\n  public moveBy(v: PointLike): this;\n  public moveBy(x: number): this;\n  public moveBy(x: number, y: number): this\n  public moveBy(a: number | PointLike, b ? : number): this {\n    if (typeof a === 'number' && typeof b === 'number') {\n      this.x += a;\n      this.y += b;\n    } else if (Point.isPointLike(a) === true) {\n      a = a as PointLike;\n      this.add(a);\n    }\n    return this;\n  }\n\n  public moveTo(v: PointLike): this;\n  public moveTo(x: number, y: number): this;\n  public moveTo(a: number | PointLike, b ? : number): this {\n    if (typeof a === 'number' && typeof b === 'number') {\n      this.x = a;\n      this.y = b;\n    } else if (Point.isPointLike(a) === true) {\n      a = a as PointLike;\n      this.equals(a);\n    }\n    return this;\n  }\n\n  // These namings are confusing.\n  public polarTranslate(angle: number, length: number): this {\n    angle = Num.cycle(angle, Math.PI * 2);\n    this.x = this.x + Math.cos(angle) * length;\n    this.y = this.y + Math.sin(angle) * length;\n    return this;\n  }\n\n  public polarTranslateBy(by: number, length: number): this {\n    const newAngle = Num.cycle(this.angle + by, Math.PI * 2);\n    this.x = this.x + Math.cos(newAngle) * length;\n    this.y = this.y + Math.sin(newAngle) * length;\n    return this;\n  }\n\n  // Same thing as polar translate.\n  public moveRadiallyBy(angle: number, by: number): this {\n    angle = Num.cycle(angle, Math.PI * 2);\n    this.x += Math.cos(angle) * by;\n    this.y += Math.sin(angle) * by;\n    return this;\n  }\n\n  public moveRadiallyTo(angle: number, by: number): this {\n    angle = Num.cycle(angle, Math.PI * 2);\n    this.x = Math.cos(angle) * by;\n    this.y = Math.sin(angle) * by;\n    return this;\n  }\n\n  // @rotate\n\n  public rotateBy(by: number): this {\n    const angle = this.angle + by;\n    this.x = Math.cos(angle) * this.magnitude;\n    this.y = Math.sin(angle) * this.magnitude;\n    return this;\n  }\n\n  public rotateTo(angle: number): this {\n    angle = Num.cycle(angle, Math.PI * 2);\n    this.x = Math.cos(angle) * this.magnitude;\n    this.y = Math.sin(angle) * this.magnitude;\n    return this;\n  }\n\n  public rotateByFrom(by: number, from: PointLike): this {\n    by = Num.cycle(by, Math.PI * 2);\n    const x = this.x - from.x;\n    const y = this.y - from.y;\n    const m = Num.hypotenuse(x, y);\n    let a = Math.acos(x / m);\n    if (y < 0) a = Math.PI + (Math.PI - a);\n    const finalAngle = Num.cycle(a + by, Math.PI * 2);\n    this.x = from.x + Math.cos(finalAngle) * m;\n    this.y = from.y + Math.sin(finalAngle) * m;\n    return this;\n  }\n\n  public rotateToFrom(to: number, from: PointLike): this {\n    to = Num.cycle(to, Math.PI * 2);\n    const x = this.x - from.x;\n    const y = this.y - from.y;\n    const m = Num.hypotenuse(x, y);\n    this.x = from.x + Math.cos(to) * m;\n    this.y = from.y + Math.sin(to) * m;\n    return this;\n  }\n\n  // @scale\n\n  public scaleBy(by: number): this {\n    let magnitude = this.magnitude;\n    if (magnitude === 0) magnitude = 1;\n    this.x /= magnitude;\n    this.y /= magnitude;\n    this.x *= by;\n    this.y *= by;\n    return this;\n  }\n\n  public scaleByFrom(by: number, from: PointLike): this {\n    const difference = Vector2.subtract(this, from);\n    const magnitude = difference.magnitude;\n    difference.normalize().multiply(magnitude * by).add(from);\n    this.equals(difference);\n    return this;\n  }\n\n  public applyLerp(t: number, point: PointLike): this {\n    this.x = Num.modulate(t, 1, [this.x, point.x], false);\n    this.y = Num.modulate(t, 1, [this.y, point.y], false);\n    return this;\n  }\n\n  public applyCubicBezier(t: number, p1: PointLike, cp1: PointLike, cp2: PointLike, p2: PointLike): this {\n    this.x = Num.cubicBezier(t, p1.x, cp1.x, cp2.x, p2.x);\n    this.y = Num.cubicBezier(t, p1.y, cp1.y, cp2.y, p2.y);\n    return this;\n  }\n\n  // @static\n\n  static clone(point: PointLike): Vector2 {\n    return new Vector2(point.x, point.y);\n  }\n\n  static unit(v: PointLike): Vector2 {\n    return Vector2.clone(v).normalize();\n  }\n\n  static add(a: PointLike, b: PointLike): Vector2 {\n    return Vector2.clone(a).add(b);\n  }\n\n  static subtract(a: PointLike, b: PointLike): Vector2 {\n    return Vector2.clone(a).subtract(b);\n  }\n\n  static multiply(v: PointLike, n: number): Vector2 {\n    return Vector2.clone(v).multiply(n);\n  }\n\n  static divide(v: PointLike, n: number): Vector2 {\n    return Vector2.clone(v).divide(n);\n  }\n\n  static projectFrom(from: PointLike, direction: PointLike, by: number): Vector2 {\n    const to = Vector2.clone(direction).normalize().multiply(by);\n    return Vector2.add(from, to);\n  }\n\n  static splitAtAngle(target: PointLike, angle: number, by: number): Vector2[] {\n    let results: Vector2[] = [];\n    results[0] = Vector2.clone(target).moveRadiallyBy(angle, -by);\n    results[1] = Vector2.clone(target).moveRadiallyBy(angle, by);\n    return results;\n  }\n\n  static getMidPointBetween(a: PointLike, b: PointLike): Vector2 {\n    let x = a.x - b.x;\n    let y = a.y - b.y;\n    x /= 2;\n    y /= 2;\n    x += b.x;\n    y += b.y;\n    return new Vector2(x, y);\n  }\n\n  // Distance and length are alias of each other.\n  static getDistanceBetween(a: PointLike, b: PointLike): number {\n    return Vector2.subtract(a, b).magnitude;\n  }\n\n  static getLengthBetween(a: PointLike, b: PointLike): number {\n    return Vector2.subtract(a, b).magnitude;\n  }\n\n  static scaleByFrom(vector: PointLike, to: number, from: PointLike): Vector2 {\n    let result = Vector2.clone(vector);\n    return result.scaleByFrom(to, from);\n  }\n\n  static getDisplacement(from: PointLike, to: PointLike): Vector2 {\n    return Vector2.subtract(to, from);\n  }\n\n  static getDirection(from: PointLike, to: PointLike): Vector2 {\n    return Vector2.subtract(to, from).normalize();\n  }\n\n  // @angles\n\n  static angleIsInProximity(a: number, b: number, tolerance: number): boolean {\n    const d1 = Angle.differenceClockwise(a, b);\n    const d2 = Angle.differenceCounterclockwise(a, b);\n    const d = Math.min(d1, d2);\n    return d <= tolerance;\n  }\n\n  static getAngleBetween2Points(a: PointLike, b: PointLike): number {\n    const a1 = Vector2.clone(a).angle;\n    const a2 = Vector2.clone(b).angle;\n    const b1 = Angle.differenceClockwise(a1, a2);\n    const b2 = Angle.differenceCounterclockwise(a1, a2);\n    return Math.min(b1, b2);\n  }\n\n  static getAngleBetween3Points(a: PointLike, b: PointLike, c: PointLike): number {\n    const va = Vector2.clone(a);\n    const vb = Vector2.clone(b);\n    const vc = Vector2.clone(c);\n    const a1 = vb.getAngleTo(va);\n    const a2 = vb.getAngleTo(vc);\n    const b1 = Angle.differenceClockwise(a1, a2);\n    const b2 = Angle.differenceCounterclockwise(a1, a2);\n    return Math.min(b1, b2);\n  }\n\n  // @triangle\n\n  static getBasePointOfTriangle(v1: PointLike, v2: PointLike, v3: PointLike): Vector2 {\n    const a1 = v1.getAngleTo(v3);\n    const a2 = v1.getAngleTo(v2);\n    const a = Math.abs(a1 - a2);\n    const h = v1.getDistanceTo(v2);\n    const bh = Math.sin(a) * h;\n    const ml = Math.atan(a) / bh;\n    const fv = Vector2.clone(v1);\n    return fv.moveRadiallyBy(a1, ml);\n  }\n\n  // static perpendicular(): Vector2 {}\n\n  static getCenterVector(...v: PointLike[]): Vector2 {\n    const left = this.minX(...v);\n    const right = this.maxX(...v);\n    const top = this.minY(...v);\n    const bottom = this.maxY(...v);\n    return new Vector2(\n      left + (right - left) / 2,\n      top  + (bottom - top) / 2\n    );\n  }\n\n  // @shortcuts\n\n  static one(): Vector2 {\n    return new Vector2(1, 1);\n  }\n\n  static get zero(): Vector2 {\n    return new Vector2(0, 0);\n  }\n\n  static get random(): Vector2 {\n    return new Vector2(Math.random(), Math.random());\n  }\n\n  // @directions\n\n  static up(): Vector2 {\n    return new Vector2(0, -1);\n  }\n\n  static down(): Vector2 {\n    return new Vector2(0, 1);\n  }\n\n  static left(): Vector2 {\n    return new Vector2(-1, 0);\n  }\n\n  static right(): Vector2 {\n    return new Vector2(0, 1);\n  }\n\n  // @min and max\n\n  static minX(...p: PointLike[]): number {\n    const x = p.map(point => point.x);\n    const i = x.indexOf(Math.min(...x));\n    return x[i];\n  }\n\n  static minY(...p: PointLike[]): number {\n    const y = p.map(point => point.y);\n    const i = y.indexOf(Math.min(...y));\n    return y[i];\n  }\n\n  static maxX(...p: PointLike[]): number {\n    const x = p.map(point => point.x);\n    const i = x.indexOf(Math.max(...x));\n    return x[i];\n  }\n\n  static maxY(...p: PointLike[]): number {\n    const y = p.map(point => point.y);\n    const i = y.indexOf(Math.max(...y));\n    return y[i];\n  }\n\n  static min(...v: Vector2[]): Vector2 {\n    const magnitudes = v.map(vector => vector.magnitude);\n    const index = magnitudes.indexOf(Math.min(...magnitudes));\n    return v[index];\n  }\n\n  static max(...v: Vector2[]): Vector2 {\n    const magnitudes = v.map(vector => vector.magnitude);\n    const index = magnitudes.indexOf(Math.max(...magnitudes));\n    return v[index];\n  }\n}","import {\n  PointLike,\n  Vector2,\n} from '../rocket';\n\nexport class Vector2Group {\n\n  public static addGroupBy(group: Vector2[], by: PointLike): Vector2[] {\n    return group.map(point => point.add(by));\n  }\n\n  public static subtractGroupBy(group: Vector2[], by: PointLike): Vector2[] {\n    return group.map(point => point.subtract(by));\n  }\n\n  public static multiplyGroupBy(group: Vector2[], by: number): Vector2[] {\n    return group.map(point => point.multiply(by));\n  }\n\n  public static divideGroupBy(group: Vector2[], by: number): Vector2[] {\n    return group.map(point => point.divide(by));\n  }\n\n  public static scaleGroupByFrom(group: Vector2[], by: number, from: PointLike): Vector2[] {\n    return group.map(point => point.scaleByFrom(by, from));\n  }\n\n  public static rotateGroupToFrom(group: Vector2[], to: number, from: PointLike): Vector2[] {\n    return group.map(point => point.rotateToFrom(to, from));\n  }\n\n  public static rotateGroupByFrom(group: Vector2[], by: number, from: PointLike): Vector2[] {\n    return group.map(point => point.rotateByFrom(by, from));\n  }\n}\n","export interface Rect {\n  height: number;\n  width: number;\n}\n\nexport class RectHelper {\n\n  public static newRect(width: number, height: number): Rect {\n    return { width, height };\n  }\n\n  public static newFromElement(element: HTMLElement): Rect {\n    return this.newRect(element.offsetWidth, element.offsetHeight);\n  }\n\n  public static scale(rect: Rect, scale: number, mutate: boolean = false): Rect {\n    const width = rect.width * scale;\n    const height = rect.height * scale;\n    if (mutate === true) {\n      rect.width = width;\n      rect.height = height;\n      return rect;\n    }\n    return { width, height };\n  }\n\n  public static getWidthFromNewHeight(rect: Rect, newHeight: number): number {\n    const whr = rect.height === 0 ? rect.width : rect.width / rect.height;\n    return newHeight * whr;\n  }\n\n  public static getHeightFromNewWidth(rect: Rect, newWidth: number): number {\n    const whr = rect.height === 0 ? rect.width : rect.width / rect.height;\n    return newWidth / whr;\n  }\n}\n","import {\n  Animation,\n} from './animation';\n\nexport interface AnimationTimingFunction {\n  (t: number): number;\n}\n\nexport interface AnimationTickFunction {\n  (n: number, iterationCount: number, context: Animation, data: any): void;\n}\n\nexport interface AnimationBeforeHook<T=void> {\n  (context: Animation, data: any): Promise<T>;\n}\n\nexport interface AnimationCallback {\n  (context: Animation, data: any): void;\n}\n\nexport interface AnimationConfig {\n  alternate: boolean;\n  delay: number;\n  duration: number;\n\n  iterationDelay: number;\n  numberOfIterations: number | 'infinite';\n\n  dataExport: object;\n\n  timingFunction: AnimationTimingFunction;\n\n  beforeStart: AnimationBeforeHook;\n  beforeStartWithDelay: AnimationBeforeHook;\n  beforeIterationStart: AnimationBeforeHook;\n  beforeSubsequentIteration: AnimationBeforeHook;\n\n  onStart: AnimationCallback | AnimationCallback[];\n  onComplete: AnimationCallback | AnimationCallback[];\n\n  onIterationStart: AnimationCallback | AnimationCallback[];\n  onIterationComplete: AnimationCallback | AnimationCallback[];\n\n  callback: Function;\n\n  onTick: AnimationTickFunction | AnimationTickFunction[];\n}\n\nexport const DEFAULT_ANIMATION_CONFIG: AnimationConfig = {\n  alternate: false,\n  delay: 0,\n  duration: 0.4,\n\n  iterationDelay: 0,\n  numberOfIterations: 1,\n\n  dataExport: {},\n\n  timingFunction: t => t,\n\n  beforeStart: () => Promise.resolve(),\n  beforeStartWithDelay: () => Promise.resolve(),\n  beforeIterationStart: () => Promise.resolve(),\n  beforeSubsequentIteration: () => Promise.resolve(),\n\n  onStart: () => { },\n  onComplete: () => { },\n\n  onIterationStart: () => { },\n  onIterationComplete: () => { },\n\n  callback: () => { },\n\n  onTick: (n, fn, data) => { },\n};\n","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunctionPrototype[toStringTagSymbol] =\n    GeneratorFunction.displayName = \"GeneratorFunction\";\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      prototype[method] = function(arg) {\n        return this._invoke(method, arg);\n      };\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      if (!(toStringTagSymbol in genFun)) {\n        genFun[toStringTagSymbol] = \"GeneratorFunction\";\n      }\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return Promise.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return Promise.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new Promise(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList) {\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList)\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  Gp[toStringTagSymbol] = \"Generator\";\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n}\n","module.exports = require(\"regenerator-runtime\");\n","import {\n  Num,\n} from '../rocket';\n\nimport {\n  Animation,\n} from './animation';\n\nexport class AnimationCore {\n  public animation: Animation;\n\n  public isActive: boolean = false;\n  public isAnimating: boolean = false;\n  public isPaused: boolean = false;\n  public isReversed: boolean = false;\n\n  public iterationCount: number = 0;\n\n  private direction: boolean = true;\n\n  private progress: number = 0;\n\n  private startTime: number = 0;\n  private endTime: number = 0;\n  private pauseTime: number = 0;\n\n  private animationFrameID?: number;\n  private timeoutID?: number;\n\n  public callback?: Function;\n\n  constructor(animation: Animation) {\n    this.animation = animation;\n  }\n\n  // 1)\n  public async startWithDelay(delay?: number): Promise<void> {\n    const { config } = this.animation;\n\n    // This is only called when not animating.\n    this.isActive = true;\n\n    if (typeof delay !== 'number' || typeof delay === 'undefined')\n      delay = config.delay as number;\n\n    if (delay > 0) {\n      try {\n        await config.beforeStartWithDelay(\n          this.animation, config.dataExport\n        );\n        this.runCallback('onStart');\n        this.timeoutID = setTimeout(\n          this.start,\n          delay * 1000\n        );\n        return Promise.resolve();\n      } catch {\n        this.end();\n        return Promise.reject();\n      }\n    } else {\n      try {\n        await config.beforeStart(\n          this.animation, config.dataExport\n        );\n        this.runCallback('onStart');\n        this.start();\n        return Promise.resolve();\n      } catch {\n        this.end();\n        return Promise.reject();\n      }\n    }\n  }\n\n  // 2) Start Animation.\n  public start = async () => {\n    const { config } = this.animation;\n\n    this.isActive = true;\n\n    // Set starting direction.\n    if (this.isReversed === true)\n      this.direction = false;\n\n    if (this.isPaused === true) {\n      const startTimeDelta = this.pauseTime - this.startTime;\n      const endTimeDelta = this.endTime - this.pauseTime;\n\n      const now = Date.now();\n\n      this.startTime = now - startTimeDelta;\n      this.endTime = now + endTimeDelta;\n\n      this.isPaused = false;\n    } else {\n      this.startTime = Date.now();\n      this.endTime = this.startTime + (config.duration * 1000);\n    }\n\n    this.isAnimating = true;\n    await config.beforeIterationStart(\n      this.animation, config.dataExport\n    );\n    this.runCallback('onIterationStart');\n    this.loop();\n  }\n\n  public pause(): this {\n    if (\n      this.isActive === true\n      && this.isAnimating === true\n      && this.isPaused === false\n    ) {\n      this.clearSessions();\n      this.isAnimating = false;\n      this.isPaused = true;\n      this.pauseTime = Date.now();\n    }\n    return this;\n  }\n\n  public reset(): this {\n    this.clearSessions();\n\n    this.isActive = this.isAnimating = this.isPaused = false;\n    this.direction = true;\n    this.iterationCount = this.startTime = this.endTime =\n    this.pauseTime = this.progress = 0;\n    return this;\n  }\n\n  public end(): this {\n    this.reset();\n    this.runCallback('onComplete');\n    this.animation.config.callback();\n    if (typeof this.callback === 'function') this.callback();\n    return this;\n  }\n\n  // 3)\n  private loop(): this {\n    const frame = async () => {\n      const { config } = this.animation;\n\n      // Move progress forward and call onTick.\n      this.tick();\n\n      if (\n        this.isActive === true\n        && this.isAnimating === true\n        && this.isPaused === false\n      ) {\n        // Continue loop if progress is not done.\n        if (this.progress < 1) {\n          this.loop();\n          return;\n        // Complete iteration.\n        } else {\n          this.iterationCount++;\n          this.runCallback('onIterationComplete');\n\n          // End animation if iterationCount exceeds config.numberOfIterations.\n          if (\n            typeof config.numberOfIterations === 'number'\n            && this.iterationCount >= config.numberOfIterations\n          ) {\n            this.end();\n            return;\n          }\n\n          try {\n            await config.beforeSubsequentIteration(\n              this.animation, config.dataExport\n            );\n            // Toggle direction if it's alternating.\n            if (config.alternate === true) this.toggleDirection();\n            // Start again!\n            await this.startWithDelay(config.iterationDelay);\n          } catch {\n            this.end();\n          }\n        }\n      }\n    }; // End frame.\n\n    // Go!\n    if (typeof this.animationFrameID === 'string')\n      window.cancelAnimationFrame(this.animationFrameID);\n    this.animationFrameID = window.requestAnimationFrame(frame);\n    return this;\n  }\n\n  // 4)\n  private tick(): this {\n    const { config } = this.animation;\n\n    // Update progress.\n    this.progress = this.currentNValue;\n\n    // Modify N based on TimingFunction.\n    let n = config.timingFunction(this.progress);\n\n    // Reverse N depending on current direction.\n    if (this.direction === false) n = 1 - n;\n\n    // Tick.\n    if (typeof config.onTick === 'function') {\n      config.onTick(n, this.iterationCount, this.animation, config.dataExport);\n    } else if (Array.isArray(config.onTick)) {\n      config.onTick.forEach(tick => {\n        tick(n, this.iterationCount, this.animation, config.dataExport);\n      });\n    }\n\n    return this;\n  }\n\n  // HELPER\n\n  // Get current N value\n  get currentNValue(): number {\n    return Num.modulate(\n      Date.now(),\n      [this.startTime, this.endTime],\n      1, true\n    );\n  }\n\n  private toggleDirection(): this {\n    this.direction = !this.direction;\n    return this;\n  }\n\n  private clearSessions(): this {\n    clearTimeout(this.timeoutID);\n    if (typeof this.animationFrameID === 'number')\n      window.cancelAnimationFrame(this.animationFrameID);\n    return this;\n  }\n\n  // CALLBACK\n\n  public runCallback(callbackName: string): this {\n    const { config } = this.animation;\n\n    if (typeof config[callbackName] === 'function') {\n      config[callbackName](this.animation, config.dataExport);\n    } else if (Array.isArray(config[callbackName])) {\n      config[callbackName].forEach(callback => {\n        callback(this.animation, config.dataExport);\n      });\n    }\n    return this;\n  }\n}\n","import {\n  AnimationConfig,\n  DEFAULT_ANIMATION_CONFIG,\n} from './animation-config';\n\nimport {\n  AnimationCore,\n} from './animation-core';\n\nexport class Animation {\n\n  public config: AnimationConfig;\n  public core: AnimationCore;\n\n  constructor(config?: Partial<AnimationConfig>) {\n    this.config = Object.assign({}, DEFAULT_ANIMATION_CONFIG);\n    this.config.dataExport = {};\n    this.setConfig(config);\n    this.core = new AnimationCore(this);\n    return this;\n  }\n\n  public setConfig(config?: Partial<AnimationConfig>): this {\n    if (typeof config === 'object') Object.assign(this.config, config);\n    return this;\n  }\n\n  public play(delay?: number): Promise<void> {\n    return new Promise(resolve => {\n      this.core.callback = () => resolve();\n      this.core.startWithDelay(delay);\n    });\n  }\n\n  public stop(): this {\n    this.core.end();\n    return this;\n  }\n\n  public pause(): this {\n    this.core.pause();\n    return this;\n  }\n\n  public goToBeginning(): this {\n    if (typeof this.config.onTick === 'function') {\n      this.config.onTick(0, this.core.iterationCount, this, undefined);\n    } else if (Array.isArray(this.config.onTick)) {\n      this.config.onTick.forEach(tick => {\n        tick(0, this.core.iterationCount, this, this.config.dataExport);\n      });\n    }\n    return this;\n  }\n\n  public goToEnd(): this {\n    let iterationCount = this.core.iterationCount;\n    if (typeof this.config.numberOfIterations === 'number')\n      iterationCount = this.config.numberOfIterations;\n    if (typeof this.config.onTick === 'function') {\n      this.config.onTick(1, iterationCount, this, undefined);\n    } else if (Array.isArray(this.config.onTick)) {\n      this.config.onTick.forEach(tick => {\n        tick(1, iterationCount, this, this.config.dataExport);\n      });\n    }\n    return this;\n  }\n\n  public stopAndJumptToEnd(): this {\n    this.core.end();\n    this.goToEnd();\n    return this;\n  }\n\n  public stopAndJumpToBeginning(): this {\n    this.core.end();\n    this.goToEnd();\n    return this;\n  }\n}\n","export class AnimationTimeline {\n\n  constructor() {\n\n  }\n\n  public add() {\n  }\n\n  public play() {\n  }\n  \n  public stop() {\n  }\n}","export class Easings {\n\n  static QuadEaseIn(t: number): number {\n    return t * t;\n  }\n\n  static QuadEaseOut(t: number): number {\n    return -1 * t * (t - 2);\n  }\n\n  static QuadEaseInEaseOut(t: number): number {\n    t /= 0.5;\n    if (t < 1) return 0.5 * t * t;\n    t--;\n    return -0.5 * (t * (t - 2) - 1);\n  }\n\n  static CubicEaseIn(t: number): number {\n    return t * t * t;\n  }\n\n  static CubicEaseOut(t: number): number {\n    t--;\n    return t * t * t + 1;\n  }\n\n  static CubicEaseInEaseOut(t: number): number {\n    t /= 0.5;\n    if (t < 1) return 0.5 * t * t * t;\n    t -= 2;\n    return 0.5 * (t * t * t + 2);\n  }\n\n  static QuarticEaseIn(t: number): number {\n    return t * t * t * t;\n  }\n\n  static QuarticEaseOut(t: number): number {\n    t--;\n    return -1 * (t * t * t * t - 1);\n  }\n\n  static QuarticEaseInEaseOut(t: number): number {\n    t /= 0.5;\n    if (t < 1) return 0.5 * t * t * t * t;\n    t -= 2;\n    return -0.5 * (t * t * t * t - 2);\n  }\n\n  static EaseOutElastic(t: number, p: number = 0.3): number {\n    return Math.pow(2, -10 * t) * Math.sin((t - p / 4) * (2 * Math.PI) / p) + 1;\n  }\n}\n","import {\n  Color,\n  Point,\n  Vector2,\n} from '../rocket'\n\ninterface CanvasDrawStyle {\n  fillColor?: string | Color,\n  noFill?: boolean,\n  noStroke?: boolean,\n  strokeCap?: 'square' | 'round',\n  strokeColor?: string | Color,\n  strokeJoin?: 'bevel' | 'round' | 'miter',\n  strokeWidth?: number,\n}\n\nconst DEFAULT_STYLE: CanvasDrawStyle = {\n  fillColor: 'black',\n  noFill: false,\n  noStroke: false,\n  strokeCap: 'round',\n  strokeColor: 'black',\n  strokeJoin: 'round',\n  strokeWidth: 0,\n}\n\nexport class CanvasDraw {\n\n  public element: HTMLCanvasElement;\n\n  public context;\n  public resolutionMultiplier: number;\n  public previousTranslation: Vector2;\n\n  private _defaultStyle: object;\n\n  constructor(element: HTMLCanvasElement) {\n    this.element = element;\n\n    this.context = this.element.getContext('2d');\n\n    this.resolutionMultiplier = window.devicePixelRatio;\n    this.previousTranslation = new Vector2;\n\n    this._defaultStyle = Object.assign({}, DEFAULT_STYLE);\n\n    // this.resize()\n  }\n\n  get defaultStyle(): CanvasDrawStyle {\n    return this._defaultStyle;\n  }\n\n  set defaultStyle(style: CanvasDrawStyle) {\n    Object.assign(this._defaultStyle, style);\n  }\n\n  // GRADIENTS\n  // https://www.w3schools.com/tags/canvas_createlineargradient.asp\n  // https://www.w3schools.com/tags/canvas_arcto.asp\n  public createLinearGradient(from: Vector2, to: Vector2): CanvasGradient {\n    const m: number = this.resolutionMultiplier;\n    return this.context.createLinearGradient(\n      from.x * m, from.y * m,\n      to.x   * m, to.y   * m,\n    );\n  }\n\n  public createRadialGradient(from: Vector2, fromRadius: number, to: Vector2, toRadius: number): CanvasGradient {\n    const m: number = this.resolutionMultiplier;\n    return this.context.createRadialGradient(\n      from.x * m, from.y * m, fromRadius * m,\n      to.x   * m, to.y   * m, toRadius   * m,\n    );\n  }\n\n  public applyStyle(style: CanvasDrawStyle): this {\n    let computedStyle: any = Object.assign({}, this._defaultStyle);\n\n    if (typeof style === 'object') {\n      Object.assign(computedStyle, style);\n    }\n\n    this.context.fillStyle   = computedStyle.fillColor;\n    this.context.lineCap     = computedStyle.strokeCap;\n    this.context.lineJoin    = computedStyle.strokeJoin;\n    this.context.strokeStyle = computedStyle.strokeColor;\n    this.context.lineWidth   = computedStyle.strokeWidth;\n\n    if (computedStyle.noFill === false)\n      this.context.fill();\n\n    if (computedStyle.noStroke === false)\n      this.context.stroke();\n\n    return this;\n  }\n\n  public clear(): this {\n    this.context.clearRect(\n      0, 0,\n      this.element.width, this.element.height,\n    );\n    return this;\n  }\n\n  public resize(width?: number, height?: number): this {\n    const m: number = this.resolutionMultiplier;\n    if (\n      typeof height === 'number'\n      && typeof width === 'number'\n    ) {\n      this.element.height = height * m;\n      this.element.width  = width  * m;\n    } else {\n      this.element.height = this.element.offsetHeight * m;\n      this.element.width  = this.element.offsetWidth  * m;\n    }\n    return this;\n  }\n\n  // TODO: Need to optimize this.\n  // Perhaps get a snapshot of all the pixel data.\n  public getPixelColor(point: Point): Color {\n    const m: number = this.resolutionMultiplier;\n    let imageData: ImageData = this.context.getImageData(\n      point.x * m, point.y * m,\n      this.element.width, this.element.height,\n    );\n    let data = imageData.data;\n    let color: Color = new Color();\n    color.rgba = [\n      data[0] / 255,\n      data[1] / 255,\n      data[2] / 255,\n      data[3] / 255,\n    ];\n    return color;\n  }\n\n  public putPixelColor(point: Point, color: Color) {\n    const m = this.resolutionMultiplier;\n    let pixel = this.context.getImageData(point.x * m, point.y * m, 1, 1);\n    let data  = pixel.data;\n    data[0] = color.red255;\n    data[1] = color.green255;\n    data[2] = color.blue255;\n    data[3] = color.alpha * 255;\n    return this.context.putImageData(pixel, 0, 0);\n  }\n\n  public clip(): this {\n    this.context.clip();\n    return this;\n  }\n\n  public shadow(offsetX, offsetY, blur, color): this {\n    const m = this.resolutionMultiplier;\n    if (color instanceof Color) {\n      color = color.rgbaString;\n    }\n    this.context.shadowBlur    = blur * m;\n    this.context.shadowColor   = color;\n    this.context.shadowOffsetX = offsetX * m;\n    this.context.shadowOffsetY = offsetY * m;\n    return this;\n  }\n\n  public image(img, st, sw, sh, dt, dw, dh): this {\n    const m = this.resolutionMultiplier;\n    this.context.drawImage(\n      img, st.x, st.y, sw, sh, dt.x * m, dt.y * m, dw * m, dh * m\n    );\n    return this;\n  }\n\n  // SHAPES\n\n  public circle(v: Point, r: number, style: CanvasDrawStyle, insert): this {\n    const m = this.resolutionMultiplier;\n    this.save();\n    this.begin();\n    this.context.arc(\n      v.x * m, v.y * m,\n      r * m,\n      0, 2 * Math.PI,\n      false,\n    );\n    this.end();\n    this.applyStyle(style);\n    if (typeof insert !== 'undefined') {\n      insert();\n    }\n    this.restore();\n    return this;\n  }\n\n  // PATH\n\n  public begin(): this {\n    this.context.beginPath();\n    return this;\n  }\n\n  public end(): this {\n    this.context.closePath()\n    return this\n  }\n\n  // https://www.w3schools.com/tags/canvas_ispointinpath.asp\n  public isPointInPath(point: Point): boolean {\n    const m: number = this.resolutionMultiplier\n    return this.context.isPointInPath(point.x * m, point.y * m)\n  }\n\n  public moveTo(to: Point): this {\n    const m: number = this.resolutionMultiplier\n    this.context.moveTo(to.x * m, to.y * m)\n    return this\n  }\n\n  public lineTo(to: Point): this {\n    const m: number = this.resolutionMultiplier\n    this.context.lineTo(to.x * m, to.y * m)\n    return this\n  }\n\n  public arcTo(from: Point, to: Point, r): this {\n    const m: number = this.resolutionMultiplier\n    this.context.arcTo(\n      from.x * m, from.y * m,\n      to.x   * m, to.y   * m,\n      r * m\n    )\n    return this\n  }\n\n  public bezierCurveTo(cp1: Point, cp2: Point, to: Point): this {\n    const m: number = this.resolutionMultiplier\n    this.context.bezierCurveTo(\n      cp1.x * m, cp1.y * m,\n      cp2.x * m, cp2.y * m,\n      to.x  * m, to.y  * m\n    )\n    return this\n  }\n\n  public quadraticCurveTo(cp: Point, to: Point): this {\n    const m: number = this.resolutionMultiplier\n    this.context.quadraticCurveTo(\n      cp.x * m, cp.y * m,\n      to.x * m, to.y * m\n    )\n    return this\n  }\n\n  // TRANSFORM\n\n  public translate(to: Point): this {\n    const m: number = this.resolutionMultiplier\n    this.context.translate(to.x * m, to.y * m)\n    this.previousTranslation.equals(to)\n    return this\n  }\n\n  public rotate(angle: number): this {\n    this.context.rotate(angle)\n    return this\n  }\n\n  public scale(w: number, h?: number): this {\n    if (typeof h !== 'number') {\n      h = w\n    }\n    this.context.scale(w, h)\n    return this\n  }\n\n  // STASH\n\n  public reset(): this {\n    this.context.setTransform(1, 0, 0, 1, 0, 0)\n    return this\n  }\n\n  public save(): this {\n    this.context.save()\n    return this\n  }\n\n  public restore(): this {\n    this.context.restore()\n    return this\n  }\n}\n","import {\n  CanvasDraw,\n} from '../rocket'\n\nexport class CanvasLayer {\n\n  public element: HTMLCanvasElement\n  public draw: CanvasDraw\n\n  constructor(element: HTMLCanvasElement) {\n    this.element = element\n    this.element.style.position = 'absolute'\n    this.element.style.left = '0px'\n    this.element.style.top  = '0px'\n\n    this.draw = new CanvasDraw(this.element)\n  }\n\n  set zIndex(zIndex: number) {\n    this.element.style.zIndex = zIndex.toString()\n  }\n\n  public updateElement(element: HTMLCanvasElement): this {\n    this.element = element\n    this.draw.element = element\n    return this\n  }\n\n  public show(): this {\n    this.element.style.display = `block`\n    return this\n  }\n\n  public hide(): this {\n    this.element.style.display = `none`\n    return this\n  }\n}\n","import {\n  CanvasLayer,\n  Viewport,\n} from '../rocket'\n\nexport class CanvasLayerManager {\n\n  public count: number = 0\n  public isFullScreen: boolean = false\n\n  public layerStackElement: HTMLElement\n  public layers: CanvasLayer[]\n\n  constructor(layerStackElement: HTMLElement) {\n    this.layerStackElement = layerStackElement\n    this.layers = []\n    this\n      .startListening()\n      .resize()\n    return this\n  }\n\n  public create(name: string): CanvasLayer {\n    let element: HTMLCanvasElement = <HTMLCanvasElement>document.createElement(`CANVAS`)\n    element = this.layerStackElement.appendChild(element)\n    this.layers[name] = new CanvasLayer(element)\n    this.count++\n    this.resize()\n    return this.layers[name]\n  }\n\n  public register(name: string, canvasLayer: CanvasLayer): CanvasLayer {\n    let element: HTMLCanvasElement = this.layerStackElement.appendChild(canvasLayer.element)\n    canvasLayer.updateElement(element)\n    this.layers[name] = canvasLayer\n    this.count++\n    this.resize()\n    return this.layers[name]\n  }\n\n  public remove(name: string): boolean {\n    for (let i = 0; i < this.layerStackElement.children.length; i++) {\n      let child: Element = this.layerStackElement.children[i]\n      if (child === this.layers[name].element) {\n        this.layerStackElement.removeChild(child)\n        delete this.layers[name]\n        this.count--\n        return true\n      }\n    }\n    return false\n  }\n\n  public find(name: string): HTMLCanvasElement {\n    if (typeof this.layers[name] === 'undefined') {\n      this.create(name)\n    }\n    return this.layers[name]\n  }\n\n  public resize = () => {\n    let height: number = 0\n    let width : number = 0\n\n    if (this.isFullScreen === true) {\n      this.layerStackElement.style.height = `${Viewport.height}px`\n      this.layerStackElement.style.width  = `${Viewport.width}px`\n    } else {\n      height = this.layerStackElement.offsetHeight\n      width  = this.layerStackElement.offsetWidth\n    }\n\n    this.layers.forEach(layer => {\n      layer.element.style.height = `${height}px`\n      layer.element.style.width  = `${width}px`\n      layer.draw.resize()\n    })\n  }\n\n  // LISTEN\n\n  public startListening(): this {\n    window.addEventListener('resize', this.resize)\n    return this\n  }\n\n  public stopListening(): this {\n    window.removeEventListener('resize', this.resize)\n    return this\n  }\n}\n","import {\n  Num,\n} from '../rocket'\n\n/*\n  https://gist.github.com/felipesabino/5066336\n  http://stackoverflow.com/questions/2353211/hsl-to-rgb-color-conversion\n  http://www.tannerhelland.com/3643/grayscale-image-algorithm-vb6/\n  http://alienryderflex.com/hsp.html\n  http://www.rapidtables.com/convert/color/hsl-to-rgb.htm\n  alpha      = 1\n  black      = 100\n  blue       = 255\n  cyan       = 100\n  green      = 255\n  lightness  = 100\n  magenta    = 100\n  red        = 255\n  saturation = 100\n  value      = 100\n  yellow     = 100\n*/\n\ntype ColorArray3 = [number, number, number]\ntype ColorArray4 = [number, number, number, number]\n\nexport class ConvertColor {\n\n  // RGB 1, 1, 1\n  static RGBToHEX(rgb: ColorArray3): string {\n    rgb[0] = Num.cycle(rgb[0], 1);\n    rgb[1] = Num.cycle(rgb[1], 1);\n    rgb[2] = Num.cycle(rgb[2], 1);\n    rgb = <ColorArray3>rgb.map(n => n * 255);\n    return `#${rgb[0].toString(16)}${rgb[1].toString(16)}${rgb[2].toString(16)}`;\n  }\n\n  // RGB 1, 1, 1\n  static HEXToRGB(hex: string): ColorArray3 {\n    let rgb: ColorArray3 = [0, 0, 0];\n    let r = '', g = '', b = '';\n    if (hex.length === 7) {\n      r = hex.substr(1, 2);\n      g = hex.substr(3, 2);\n      b = hex.substr(5, 2);\n    } else if (hex.length === 4) {\n      r = hex.substr(1, 1);\n      g = hex.substr(2, 1);\n      b = hex.substr(3, 1);\n      r = r.concat(r);\n      g = g.concat(g);\n      b = b.concat(b);\n    }\n    rgb[0] = parseInt(r, 16);\n    rgb[1] = parseInt(g, 16);\n    rgb[2] = parseInt(b, 16);\n\n    return <ColorArray3>rgb.map(n => n / 255);\n  }\n\n  // CMYK 1, 1, 1, 1\n  // RGB 1, 1, 1\n  static RGBToCMYK(rgb: ColorArray3): ColorArray4 {\n    rgb[0] = Num.cycle(rgb[0], 1);\n    rgb[1] = Num.cycle(rgb[1], 1);\n    rgb[2] = Num.cycle(rgb[2], 1);\n\n    const cmyk: ColorArray4 = [0, 0, 0, 0];\n\n    cmyk[3] = 1 - Math.max.apply(this, rgb);\n    cmyk[0] = (1 - rgb[0] - cmyk[3]) / (1 - cmyk[3]);\n    cmyk[1] = (1 - rgb[1] - cmyk[3]) / (1 - cmyk[3]);\n    cmyk[2] = (1 - rgb[2] - cmyk[3]) / (1 - cmyk[3]);\n\n    return cmyk;\n  }\n\n  // CMYK 1, 1, 1, 1\n  //  RGB 1, 1, 1\n  static CMYKToRGB(cmyk: ColorArray4): ColorArray3 {\n    cmyk[0] = Num.cycle(cmyk[0], 1);\n    cmyk[1] = Num.cycle(cmyk[1], 1);\n    cmyk[2] = Num.cycle(cmyk[2], 1);\n    cmyk[3] = Num.cycle(cmyk[3], 1);\n\n    const rgb: ColorArray3 = [0, 0, 0];\n\n    rgb[0] = (1 - cmyk[0]) * (1 - cmyk[3]);\n    rgb[1] = (1 - cmyk[1]) * (1 - cmyk[3]);\n    rgb[2] = (1 - cmyk[2]) * (1 - cmyk[3]);\n\n    return rgb;\n  }\n\n  // RGB   1, 1, 1\n  // HSL 359, 1, 1\n  static RGBToHSL(rgb: ColorArray3): ColorArray3 {\n    rgb[0] = Num.cycle(rgb[0], 1);\n    rgb[1] = Num.cycle(rgb[1], 1);\n    rgb[2] = Num.cycle(rgb[2], 1);\n\n    let cMax = Math.max.apply(this, rgb);\n    let cMin = Math.min.apply(this, rgb);\n    let delta = cMax - cMin;\n    let hsl: ColorArray3 = [0, 0, 0];\n\n    if (delta === 0) {\n      hsl[0] = 0;\n    } else if (cMax === rgb[0]) {\n      hsl[0] = 60 * (((rgb[1] - rgb[2]) / delta) % 6);\n    } else if (cMax === rgb[1]) {\n      hsl[0] = 60 * (((rgb[2] - rgb[0]) / delta) + 2);\n    } else if (cMax === rgb[2]) {\n      hsl[0] = 60 * (((rgb[0] - rgb[1]) / delta) + 4);\n    }\n\n    hsl[2] = (cMax + cMin) / 2;\n    hsl[1] = delta === 0 ? 0 : delta / (1 - Math.abs(2 * hsl[2] - 1));\n\n    return hsl;\n  }\n\n  // HSL 359, 1, 1\n  // RGB   1, 1, 1\n  static HSLToRGB(hsl: ColorArray3): ColorArray3 {\n    hsl[0] = Num.cycle(hsl[0], 359);\n    hsl[1] = Num.cycle(hsl[1], 1);\n    hsl[2] = Num.cycle(hsl[2], 1);\n\n    let rgb: ColorArray3 = [0, 0, 0];\n    let h: number = hsl[0] / 60;\n    let c: number = (1 - Math.abs(2 * hsl[2] - 1)) * hsl[1];\n    let x: number = c * (1 - Math.abs(h % 2 - 1));\n\n    if (h >= 0 && h <= 1) {\n      rgb = [c, x, 0];\n    } else if (h >= 1 && h <= 2) {\n      rgb = [x, c, 0];\n    } else if (h >= 2 && h <= 3) {\n      rgb = [0, c, x];\n    } else if (h >= 3 && h <= 4) {\n      rgb = [0, x, c];\n    } else if (h >= 4 && h <= 5) {\n      rgb = [x, 0, c];\n    } else if (h >= 5 && h <= 6) {\n      rgb = [c, 0, x];\n    }\n\n    let m: number = hsl[2] - (0.5 * c);\n\n    return <ColorArray3>rgb.map(v => v + m);\n  }\n\n  // RGB   1, 1, 1\n  // HSV 359, 1, 1\n  static RGBToHSV(rgb: ColorArray3): ColorArray3 {\n    rgb[0] = Num.cycle(rgb[0], 1);\n    rgb[1] = Num.cycle(rgb[1], 1);\n    rgb[2] = Num.cycle(rgb[2], 1);\n\n    let cMax = Math.max.apply(this, rgb);\n    let cMin = Math.min.apply(this, rgb);\n    let delta: number = cMax - cMin;\n    let hsv: ColorArray3 = [0, 0, 0];\n\n    if (delta === 0) {\n      hsv[0] = 0;\n    } else if (cMax === rgb[0]) {\n      hsv[0] = 60 * (((rgb[1] - rgb[2]) / delta) % 6);\n    } else if (cMax === rgb[1]) {\n      hsv[0] = 60 * (((rgb[2] - rgb[0]) / delta) + 2);\n    } else if (cMax === rgb[2]) {\n      hsv[0] = 60 * (((rgb[0] - rgb[1]) / delta) + 4);\n    }\n\n    hsv[1] = cMax === 0 ? 0 : delta / cMax;\n    hsv[2] = cMax;\n\n    return hsv;\n  }\n\n  // HSV 359, 1, 1\n  // RGB   1, 1, 1\n  static HSVToRGB(hsv: ColorArray3): ColorArray3 {\n    hsv[0] = Num.cycle(hsv[0], 359);\n    hsv[1] = Num.cycle(hsv[1], 1);\n    hsv[2] = Num.cycle(hsv[2], 1);\n\n    const c: number = hsv[2] * hsv[1];\n    const x: number = c * (1 - Math.abs((hsv[0] / 60) % 2 - 1));\n\n    let rgb: ColorArray3 = [0, 0, 0];\n    if (\n      hsv[0] >= 0\n      && hsv[0] <= 60\n    ) {\n      rgb = [c, x, 0];\n    } else if (\n      hsv[0] >= 60\n      && hsv[0] <= 120\n    ) {\n      rgb = [x, c, 0];\n    } else if (\n      hsv[0] >= 120\n      && hsv[0] <= 180\n    ) {\n      rgb = [0, c, x];\n    } else if (\n      hsv[0] >= 180\n      && hsv[0] <= 240\n    ) {\n      rgb = [0, x, c];\n    } else if (\n      hsv[0] >= 240\n      && hsv[0] <= 300\n    ) {\n      rgb = [x, 0, c];\n    } else if (\n      hsv[0] >= 300\n      && hsv[0] <= 360\n    ) {\n      rgb = [c, 0, x];\n    }\n\n    const m: number = hsv[2] - c;\n    return <ColorArray3>rgb.map(v => v + m);\n  }\n}","import {\n  ConvertColor,\n  Num,\n  Util,\n} from '../rocket';\n\ntype ColorArray4 = [number, number, number, number];\ntype ColorArray3 = [number, number, number];\n\n// Range\n// A   : 1\n// RGB : 1  , 1, 1\n// HSL : 359, 1, 1\n// HSV : 359, 1, 1\n// CYMK: 1  , 1, 1, 1\n\nconst NAMED_COLOR_SET = {\n  azure: [0, 0.5, 1, 1],\n  black: [0, 0, 0, 1],\n  blue: [0, 0, 1, 1],\n  brown: [0.6, 0.3, 0, 1],\n  clear: [0, 0, 0, 0],\n  cyan: [0, 1, 1, 1],\n  gray: [0.5, 0.5, 0.5, 1],\n  green: [0, 1, 0, 1],\n  magenta: [1, 0, 1, 1],\n  orange: [1, 0.5, 0, 1],\n  pink: [1, 0.8, 0.86, 1],\n  purple: [0.5, 0, 0.5, 1],\n  red: [1, 0, 0, 1],\n  salmon: [0.98, 0.5, 0.45, 1],\n  transparent: [0, 0, 0, 0],\n  ultramarine: [0.25, 0, 1, 1],\n  violet: [0.5, 0, 1, 1],\n  white: [1, 1, 1, 1],\n  yellow: [1, 1, 0, 1],\n};\n\nconst COLOR_INPUT_REGEX = {\n  hex: /^#([0-9a-fA-F]{6}|[0-9a-fA-F]{3})$/g,\n  hsl: /^(hsl|HSL)\\((360|3[0-5][0-9]|2[0-9][0-9]|1[0-9][0-9]|[1-9]?[0-9]),\\s?(100|[1-9]?[0-9])\\%?,\\s?(100|[1-9]?[0-9])\\%?\\)$/g,\n  hsla: /^(hsla|HSLA)\\((360|3[0-5][0-9]|2[0-9][0-9]|1[0-9][0-9]|[1-9]?[0-9]),\\s?(100|[1-9]?[0-9])\\%?,\\s?(100|[1-9]?[0-9])\\%?,\\s?(1|0|0\\.([0-9]?)+[1-9])\\)$/g,\n  rgb: /^(rgb|RGB)\\((25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9]?[0-9]),\\s?(25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9]?[0-9]),\\s?(25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9]?[0-9])\\)$/g,\n  rgba: /^(rgba|RGBA)\\((25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9]?[0-9]),\\s?(25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9]?[0-9]),\\s?(25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9]?[0-9]),\\s?(1|0|0\\.([0-9]?){1,5}[1-9])\\)$/g,\n};\n\nexport class Color {\n\n  public r: number = 0;\n  public g: number = 0;\n  public b: number = 0;\n  public a: number = 1;\n\n  constructor(input?) {\n    if (typeof input !== 'undefined') {\n      this.set(input);\n    }\n    return this;\n  }\n\n  public equals(color: Color): this {\n    this.r = color.r;\n    this.g = color.g;\n    this.b = color.b;\n    this.a = color.a;\n    return this;\n  }\n\n  get clone(): Color {\n    return Color.clone(this);\n  }\n\n  public set(input) {\n    if (Color.isColor(input)) {\n      this.equals(input);\n    } else if (typeof input === 'string') {\n      this.colorString = input;\n    } else {\n      this.r = 0;\n      this.g = 0;\n      this.b = 0;\n      this.a = 1;\n    }\n    return this;\n  }\n\n  set colorString(input: string) {\n    if (typeof NAMED_COLOR_SET[input] !== 'undefined') {\n      this.rgba = NAMED_COLOR_SET[input];\n    } else if (typeof Util.match(input, COLOR_INPUT_REGEX.hex) === 'string') {\n      this.hex = input;\n    } else if (typeof Util.match(input, COLOR_INPUT_REGEX.rgb) === 'string') {\n      this.rgbString = input;\n    } else if (typeof Util.match(input, COLOR_INPUT_REGEX.rgba) === 'string') {\n      this.rgbaString = input;\n    } else if (typeof Util.match(input, COLOR_INPUT_REGEX.hsl) === 'string') {\n      this.hslString = input;\n    } else if (typeof Util.match(input, COLOR_INPUT_REGEX.hsla) === 'string') {\n      this.hslaString = input;\n    }\n  }\n\n  // GETTERS AND SETTERS\n\n  // STRINGS\n  set rgbString(input: string) {\n    const numbers = input.match(/(\\d+)/g);\n    if (numbers !== null) {\n      const rgb: number[] = numbers.map(v => {\n        return Num.cycle(parseFloat(v) / 255, 1);\n      });\n      this.r = rgb[0];\n      this.g = rgb[1];\n      this.b = rgb[2];\n    }\n  }\n\n  set rgbaString(input: string) {\n    const numbers = input.match(/([\\d]+(\\.[\\d]+)?)/g);\n    if (numbers !== null) {\n      const rgba: number[] = numbers.map((v, index) => {\n        if (index === 3)\n          return Num.cycle(parseFloat(v), 1);\n        return Num.cycle(parseFloat(v) / 255, 1);\n      });\n      this.r = rgba[0];\n      this.g = rgba[1];\n      this.b = rgba[2];\n      this.a = rgba[3];\n    }\n  }\n\n  set hslString(input: string) {\n    const numbers = input.match(/(\\d+)/g);\n    if (numbers !== null) {\n      const hsl: number[] = numbers.map(v => parseFloat(v));\n      hsl[1] = hsl[1] / 100, 1;\n      hsl[2] = hsl[2] / 100, 1;\n      const rgb: ColorArray3 = ConvertColor.HSLToRGB(<ColorArray3>hsl);\n      this.r = rgb[0];\n      this.g = rgb[1];\n      this.b = rgb[2];\n    }\n  }\n\n  set hslaString(input: string) {\n    const numbers = input.match(/([\\d]+(\\.[\\d]+)?)/g);\n    if (numbers !== null) {\n      const hsla: number[] = numbers.map(v => parseFloat(v));\n      const hsl:  number[] = hsla.slice(0, 3);\n      hsl[1] = hsl[1] / 100;\n      hsl[2] = hsl[2] / 100;\n      const rgb: ColorArray3 = ConvertColor.HSLToRGB(<ColorArray3>hsl);\n      this.r = rgb[0];\n      this.g = rgb[1];\n      this.b = rgb[2];\n      this.a = Num.cycle(hsla[3], 1);\n    }\n  }\n\n  // These will always return HTML color format.\n  get rgbString(): string {\n    const rgb: ColorArray3 = this.rgb255;\n    return `rgb(${rgb[0]}, ${rgb[1]}, ${rgb[2]})`;\n  }\n\n  get rgbaString(): string {\n    const rgba: ColorArray3 = this.rgb255;\n    return `rgba(${rgba[0]}, ${rgba[1]}, ${rgba[2]}, ${this.a})`;\n  }\n\n  get hslString(): string {\n    const hsl: ColorArray3 = this.hsl;\n    const s = (hsl[1] * 100).toFixed(0);\n    const l = (hsl[2] * 100).toFixed(0);\n    return `hsl(${hsl[0]}, %${s}, ${l})`;\n  }\n\n  get hslaString(): string {\n    const hsl: ColorArray3 = this.hsl;\n    const s = (hsl[1] * 100).toFixed(0);\n    const l = (hsl[2] * 100).toFixed(0);\n    return `hsl(${hsl[0]}, %${s}, ${l}, ${this.a})`;\n  }\n\n  // Alias to this.hex\n  set hexString(hex: string) {\n    this.hex = hex;\n  }\n\n  get hexString(): string {\n    return this.hex;\n  }\n\n  // HEX\n\n  set hex(hex: string) {\n    let rgb: ColorArray3 = ConvertColor.HEXToRGB(hex);\n    this.r = rgb[0];\n    this.g = rgb[1];\n    this.b = rgb[2];\n  }\n\n  get hex(): string {\n    let rgb: ColorArray3 = [this.r, this.g, this.b];\n    return ConvertColor.RGBToHEX(rgb);\n  }\n\n  // RGB\n\n  set rgb255(rgb: ColorArray3) {\n    this.r = Num.cycle(rgb[0] / 255, 1);\n    this.g = Num.cycle(rgb[1] / 255, 1);\n    this.b = Num.cycle(rgb[2] / 255, 1);\n  }\n\n  get rgb255(): ColorArray3 {\n    const rgb: ColorArray3 = [this.r, this.g, this.b];\n    return <ColorArray3>rgb.map(v => Math.round(v * 255));\n  }\n\n  set rgb(rgb: ColorArray3) {\n    this.r = Num.cycle(rgb[0], 1);\n    this.g = Num.cycle(rgb[1], 1);\n    this.b = Num.cycle(rgb[2], 1);\n  }\n\n  get rgb(): ColorArray3 {\n    return [this.r, this.g, this.b];\n  }\n\n  // RGBA\n\n  set rgba255(rgba: ColorArray4) {\n    this.r = Num.cycle(rgba[0], 1);\n    this.g = Num.cycle(rgba[1], 1);\n    this.b = Num.cycle(rgba[2], 1);\n    this.a = Num.cycle(rgba[3], 1);\n  }\n\n  get rgba255(): ColorArray4 {\n    return [this.r, this.g, this.b, this.a];\n  }\n\n  set rgba(rgba: ColorArray4) {\n    this.r = Num.cycle(rgba[0], 1);\n    this.g = Num.cycle(rgba[1], 1);\n    this.b = Num.cycle(rgba[2], 1);\n    this.a = Num.cycle(rgba[3], 1);\n  }\n\n  get rgba(): ColorArray4 {\n    return [this.r, this.g, this.b, this.a];\n  }\n\n  // HSL\n\n  set hsl(hsl: ColorArray3) {\n    const rgb: ColorArray3 = ConvertColor.HSLToRGB(hsl);\n    this.r = rgb[0];\n    this.g = rgb[1];\n    this.b = rgb[2];\n  }\n\n  get hsl(): ColorArray3 {\n    return ConvertColor.RGBToHSL([this.r, this.g, this.b]);\n  }\n\n  // HSV and HSB\n\n  set hsv(hsv: ColorArray3) {\n    if (hsv.length === 3) {\n      const rgb: ColorArray3 = ConvertColor.HSVToRGB(hsv);\n      this.r = rgb[0];\n      this.g = rgb[1];\n      this.b = rgb[2];\n    }\n  }\n\n  get hsv(): ColorArray3 {\n    return ConvertColor.HSVToRGB([this.r, this.g, this.b]);\n  }\n\n  // CMYK\n\n  set cmyk(cmyk: ColorArray4) {\n    const rgb: ColorArray3 = ConvertColor.CMYKToRGB(cmyk);\n    this.r = rgb[0];\n    this.g = rgb[1];\n    this.b = rgb[2];\n  }\n\n  get cmyk(): ColorArray4 {\n    return ConvertColor.RGBToCMYK([this.r, this.g, this.b]);\n  }\n\n  // RED\n\n  set red255(red: number) {\n    this.r = Num.cycle(red / 255, 1);\n  }\n\n  get red255(): number {\n    return Math.round(this.r * 255);\n  }\n\n  set red(red: number) {\n    this.r = red;\n  }\n\n  get red(): number {\n    return this.r;\n  }\n\n  // GREEN\n\n  set green255(green: number) {\n    this.g = Num.cycle(green / 255, 1);\n  }\n\n  get green255(): number {\n    return Math.round(this.g * 255);\n  }\n\n  set green(green: number) {\n    this.g = green;\n  }\n\n  get green(): number {\n    return this.g;\n  }\n\n  // BLUE\n\n  set blue255(blue: number) {\n    this.b = Num.cycle(blue / 255, 1);\n  }\n\n  get blue255(): number {\n    return Math.round(this.b * 255);\n  }\n\n  set blue(blue: number) {\n    this.b = blue;\n  }\n\n  get blue(): number {\n    return this.b;\n  }\n\n  // CYAN\n\n  set cyan(cyan: number) {\n    const cmyk: ColorArray4 = ConvertColor.RGBToCMYK(\n      [this.r, this.g, this.b]\n    );\n    cmyk[0] = cyan;\n    const rgb: ColorArray3 = ConvertColor.CMYKToRGB(cmyk);\n    this.r = rgb[0];\n    this.g = rgb[1];\n    this.b = rgb[2];\n  }\n\n  get cyan(): number {\n    return ConvertColor.RGBToCMYK([this.r, this.g, this.b])[0];\n  }\n\n  // MAGENTA\n\n  set magenta(magenta: number) {\n    const cmyk: ColorArray4 = ConvertColor.RGBToCMYK(\n      [this.r, this.g, this.b]\n    );\n    cmyk[1] = magenta;\n    const rgb: ColorArray3 = ConvertColor.CMYKToRGB(cmyk);\n    this.r = rgb[0];\n    this.g = rgb[1];\n    this.b = rgb[2];\n  }\n\n  get magenta(): number {\n    return ConvertColor.RGBToCMYK(\n      [this.r, this.g, this.b]\n    )[1];\n  }\n\n  // YELLOW\n\n  set yellow(yellow: number) {\n    const cmyk: ColorArray4 = ConvertColor.RGBToCMYK(\n      [this.r, this.g, this.b]\n    );\n    cmyk[2] = yellow;\n    const rgb: ColorArray3 = ConvertColor.CMYKToRGB(cmyk);\n    this.r = rgb[0];\n    this.g = rgb[1];\n    this.b = rgb[2];\n  }\n\n  get yellow(): number {\n    return ConvertColor.RGBToCMYK(\n      [this.r, this.g, this.b]\n    )[2];\n  }\n\n  // ALPHA\n\n  set alpha(alpha: number) {\n    this.a = Num.cycle(alpha, 1);\n  }\n\n  get alpha(): number {\n    return this.a;\n  }\n\n  // HUE\n\n  set hue(degrees: number) {\n    const hsl: ColorArray3 = ConvertColor.RGBToHSL(\n      [this.r, this.g, this.b]\n    );\n    hsl[0] = Math.abs(Math.round(Num.cycle(degrees, 359)));\n    const rgb: ColorArray3 = ConvertColor.HSLToRGB(hsl);\n    this.r = rgb[0];\n    this.g = rgb[1];\n    this.b = rgb[2];\n  }\n\n  get hue(): number {\n    const hsl: ColorArray3 = ConvertColor.RGBToHSL(\n      [this.r, this.g, this.b]\n    );\n    return Math.round(hsl[0]);\n  }\n\n  // SATURATION\n\n  set saturation(saturation: number) {\n    const hsl: ColorArray3 = ConvertColor.RGBToHSL(\n      [this.r, this.g, this.b]\n    );\n    hsl[1] = Num.cycle(saturation, 1);\n    const rgb: ColorArray3 = ConvertColor.HSLToRGB(hsl);\n    this.r = rgb[0];\n    this.g = rgb[1];\n    this.b = rgb[2];\n  }\n\n  get saturation(): number {\n    const hsl: ColorArray3 = ConvertColor.RGBToHSL(\n      [this.r, this.g, this.b]\n    );\n    return hsl[1];\n  }\n\n  // VALUE\n\n  set value(value: number) {\n    const hsv: ColorArray3 = ConvertColor.RGBToHSV(\n      [this.r, this.g, this.b]\n    );\n    hsv[2] = Num.cycle(value, 1);\n    const rgb: ColorArray3 = ConvertColor.HSVToRGB(hsv);\n    this.r = rgb[0];\n    this.g = rgb[1];\n    this.b = rgb[2];\n  }\n\n  get value(): number {\n    const hsv: ColorArray3 = ConvertColor.RGBToHSV(\n      [this.r, this.g, this.b]\n    );\n    return hsv[2];\n  }\n\n  get brightness(): number {\n    return Math.sqrt(\n      0.299 * this.r * this.r +\n      0.587 * this.g * this.g +\n      0.114 * this.b * this.b\n    );\n  }\n\n  // MODIFIER\n\n  public hueRotate(increment: number): this {\n    this.hue = this.hue + increment;\n    return this;\n  }\n\n  public invert(): this {\n    this.r = 1 - this.r;\n    this.g = 1 - this.g;\n    this.b = 1 - this.b;\n    return this;\n  }\n\n  // INTERPOLATION\n\n  public lerp(target: Color, t: number): this {\n    this.r = Num.lerp(t, this.r, target.r);\n    this.g = Num.lerp(t, this.g, target.g);\n    this.b = Num.lerp(t, this.b, target.b);\n    this.a = Num.lerp(t, this.a, target.a);\n    return this;\n  }\n\n  // STATIC\n\n  static isColor(color: Color): boolean {\n    return color instanceof Color;\n  }\n\n  static clone(color: Color): Color {\n    return new Color(color);\n  }\n\n  static triadic(color: Color): [Color, Color, Color] {\n    const color_a = color.clone.hueRotate(-120);\n    const color_c = color.clone.hueRotate(120);\n    return [color_a, color, color_c];\n  }\n\n  static complement(color: Color): Color {\n    return color.clone.hueRotate(180);\n  }\n\n  static splitComplements(color: Color): [Color, Color, Color] {\n    const color_a = color.clone.hueRotate(-150);\n    const color_c = color.clone.hueRotate(150);\n    return [color_a, color, color_c];\n  }\n\n  static analogous(color: Color): [Color, Color, Color] {\n    const color_a: Color = color.clone.hueRotate(-30);\n    const color_c: Color = color.clone.hueRotate(30);\n    return [color_a, color, color_c];\n  }\n\n  static lerp(t: number, color_a: Color, color_b: Color): Color {\n    const color = Color.clone(color_a);\n    color.r = Num.lerp(t, color_a.r, color_b.r);\n    color.g = Num.lerp(t, color_a.g, color_b.g);\n    color.b = Num.lerp(t, color_a.b, color_b.b);\n    color.a = Num.lerp(t, color_a.a, color_b.a);\n    return color;\n  }\n}\n","import {\n  DragEventManager,\n} from './drag-event-manager';\n\nimport {\n  EventName,\n  SensorData,\n} from './sensor-hub';\n\nexport class MouseSensor {\n  public manager: DragEventManager;\n\n  public isActive: boolean = false;\n  public isDown: boolean = false;\n\n  constructor(manager: DragEventManager) {\n    this.manager = manager;\n  }\n\n  public dispatch(data: SensorData) {\n    const { config, sensorHub } = this.manager;\n    if (config.listenTo.indexOf('MOUSE') !== -1) sensorHub.receive(data);\n  }\n\n  public composeData(name: EventName, event: MouseEvent): SensorData {\n    const { target, screenX, screenY, pageX, pageY, clientX, clientY } = event;\n    return {\n      identifier: 'mouse-event',\n      type: 'MOUSE',\n      name,\n      time: Date.now(),\n      target: target as HTMLElement,\n      screenX, screenY,\n      pageX, pageY,\n      clientX, clientY,\n      event,\n      touch: undefined,\n    };\n  }\n\n  public eventHandlerMouseDown = (event: MouseEvent): void => {\n    const { leftMouseButtonOnly } = this.manager.config; \n    if (\n      leftMouseButtonOnly === false\n      || (leftMouseButtonOnly === true && event.button === 0)\n    ) {\n      this.isDown = true;\n      const data = this.composeData('down', event);\n      this.dispatch(data);\n    }\n  }\n\n  public eventHandlerMouseMove = (event: MouseEvent): void => {\n    if (this.isDown === true) {\n      const data = this.composeData('drag', event);\n      this.dispatch(data);\n    }\n  }\n\n  public eventHandlerMouseUp = (event: MouseEvent): void => {\n    this.isDown = false;\n    const data = this.composeData('up', event);\n    this.dispatch(data);\n  }\n\n  public listen() {\n    if (this.isActive === false) {\n      const { parent } = this.manager.config;\n      parent.addEventListener('mousedown', this.eventHandlerMouseDown as EventListener);\n      parent.addEventListener('mousemove', this.eventHandlerMouseMove as EventListener);\n      parent.addEventListener('mouseup', this.eventHandlerMouseUp as EventListener);\n      this.isActive = true;\n    }\n  }\n\n  public stop() {\n    if (this.isActive === true) {\n      const { parent } = this.manager.config;\n      parent.removeEventListener('mousedown', this.eventHandlerMouseDown as EventListener);\n      parent.removeEventListener('mousemove', this.eventHandlerMouseMove as EventListener);\n      parent.removeEventListener('mouseup', this.eventHandlerMouseUp as EventListener);\n      this.isActive = false;\n    }\n  }\n}\n","import {\n  DragEventManager,\n} from './drag-event-manager';\n\nimport {\n  EventName,\n  SensorData,\n} from './sensor-hub';\n\nexport class TouchSensor {\n  public manager: DragEventManager;\n\n  public isActive: boolean = false;\n\n  constructor(manager: DragEventManager) {\n    this.manager = manager;\n  }\n\n  public dispatch(data: SensorData) {\n    const { config, sensorHub } = this.manager;\n    if (config.listenTo.indexOf('TOUCH') !== -1)\n      sensorHub.receive(data);\n  }\n\n  public composeData(name: EventName, event: TouchEvent, touch: Touch): SensorData {\n    const { target, screenX, screenY, pageX, pageY, clientX, clientY } = touch;\n    return {\n      identifier: touch.identifier.toString(),\n      type: 'TOUCH',\n      name,\n      time: Date.now(),\n      target: target as HTMLElement,\n      screenX, screenY,\n      pageX, pageY,\n      clientX, clientY,\n      event, touch,\n    };\n  }\n\n  public eventHandlerTouchStart = (event: TouchEvent): void => {\n    Array.from(event.changedTouches).forEach(touch => {\n      const data = this.composeData('down', event, touch);\n      this.dispatch(data);\n    });\n  }\n\n  public eventHandlerTouchMove = (event: TouchEvent): void => {\n    Array.from(event.changedTouches).forEach(touch => {\n      const data = this.composeData('drag', event, touch);\n      this.dispatch(data);\n    });\n  }\n\n  public eventHandlerTouchEnd = (event: TouchEvent): void => {\n    Array.from(event.changedTouches).forEach(touch => {\n      const data = this.composeData('up', event, touch);\n      this.dispatch(data);\n    });\n  }\n\n  public eventHandlerTouchCancel = (event: TouchEvent): void => {\n    Array.from(event.changedTouches).forEach(touch => {\n      const data = this.composeData('cancel', event, touch);\n      this.dispatch(data);\n    });\n  }\n\n  public listen() {\n    if (this.isActive === false) {\n      const { parent } = this.manager.config;\n      parent.addEventListener('touchstart', this.eventHandlerTouchStart as EventListener);\n      parent.addEventListener('touchmove', this.eventHandlerTouchMove as EventListener);\n      parent.addEventListener('touchend', this.eventHandlerTouchEnd as EventListener);\n      parent.addEventListener('touchcancel', this.eventHandlerTouchCancel as EventListener);\n      this.isActive = true;\n    }\n  }\n\n  public stop() {\n    if (this.isActive === true) {\n      const { parent } = this.manager.config;\n      parent.removeEventListener('touchstart', this.eventHandlerTouchStart as EventListener);\n      parent.removeEventListener('touchmove', this.eventHandlerTouchMove as EventListener);\n      parent.removeEventListener('touchend', this.eventHandlerTouchEnd as EventListener);\n      parent.removeEventListener('touchcancel', this.eventHandlerTouchCancel as EventListener);\n      this.isActive = false;\n    }\n  }\n}\n","import {\n  Point,\n  Repeater,\n  Vector2,\n} from '../rocket';\n\nimport {\n  DragEventManager,\n} from './drag-event-manager';\n\nimport {\n  EventName,\n  Identifier,\n  SensorData,\n} from './sensor-hub';\n\nexport class DragEvent {\n  public manager: DragEventManager;\n  public repeater: Repeater;\n\n  public identifier: Identifier = '';\n\n  public previousEvent?: EventName;\n  public currentEvent?: EventName;\n\n  public downData?: SensorData;\n  public dragData?: SensorData;\n  public upData?: SensorData;\n  public cancelData?: SensorData;\n\n  public isActive: boolean = false;\n  public isLongPress: boolean = false;\n  public isCancelled: boolean = false;\n\n  public longPressTimeout;\n  public longPressIsCleared: boolean = false;\n\n  public position: Vector2;\n  public previousPosition: Vector2;\n\n  public velocity: Vector2;\n  public previousVelocity: Vector2;\n\n  public acceleration: Vector2;\n  public previousAcceleration: Vector2;\n\n  public firstDragPoint: Point | false = false;\n  public wasScrolling: boolean = false;\n\n  constructor(manager: DragEventManager) {\n    this.manager = manager;\n\n    const { downRepeaterFrequency } = this.manager.config;\n    this.repeater = new Repeater({\n      frequency: downRepeaterFrequency\n    });\n\n    this.position = new Vector2();\n    this.previousPosition = new Vector2();\n\n    this.velocity = new Vector2();\n    this.previousVelocity = new Vector2();\n\n    this.acceleration = new Vector2();\n    this.previousAcceleration = new Vector2();\n  }\n\n  public get downPoint(): Point | false {\n    if (typeof this.downData === 'object') {\n      const { clientX, clientY } = this.downData;\n      return new Point(clientX, clientY);\n    }\n    return false;\n  }\n\n  public get dragPoint(): Point | false {\n    if (typeof this.dragData === 'object') {\n      const { clientX, clientY } = this.dragData;\n      return new Point(clientX, clientY);\n    }\n    return false;\n  }\n\n  public get upPoint(): Point | false {\n    if (typeof this.upData === 'object') {\n      const { clientX, clientY } = this.upData;\n      return new Point(clientX, clientY);\n    }\n    return false;\n  }\n\n  public get isScrolling(): boolean {\n    return this.manager.isScrolling;\n  }\n\n  public get duration(): number | undefined {\n    if (typeof this.downData === 'object') {\n      if (this.isActive === true && typeof this.dragData === 'object')\n        return (this.dragData.time - this.downData.time) / 1000;\n\n      if (this.isCancelled === true && typeof this.cancelData === 'object')\n        return (this.cancelData.time - this.downData.time) / 1000;\n\n      if (typeof this.upData === 'object')\n        return (this.upData.time - this.downData.time) / 1000;\n    }\n    return undefined;\n  }\n\n  public get currentTargetElement(): HTMLElement | false {\n    if (typeof this.currentEvent === 'string')\n      return this.getTargetElementFromData(this[`${this.currentEvent}Data`]);\n    return false;\n  }\n\n  public getTargetElementFromData(data: SensorData): HTMLElement {\n    const { clientX, clientY } = data;\n    return document.elementFromPoint(clientX, clientY) as HTMLElement;\n  }\n\n  public get previousEventData(): SensorData | false {\n    if (typeof this.previousEvent === 'string')\n      return this[`${this.previousEvent}Data`];\n    return false;\n  }\n\n  public get currentEventData(): SensorData | false {\n    if (typeof this.currentEvent === 'string')\n      return this[`${this.currentEvent}Data`];\n    return false;\n  }\n\n  // @vectors\n\n  public initializeVectors(data: SensorData) {\n    this.position = new Vector2(data.clientX, data.clientY);\n    this.previousPosition = new Vector2(data.clientX, data.clientY);\n\n    this.velocity = new Vector2();\n    this.previousVelocity = new Vector2();\n\n    this.acceleration = new Vector2();\n    this.previousAcceleration = new Vector2();\n  }\n\n  public updateVectors(data: SensorData) {\n    const { clientX, clientY } = data;\n    this.position.equals(clientX, clientY);\n    this.velocity.equals(\n      Vector2.subtract(this.position, this.previousPosition)\n    );\n    this.acceleration.equals(\n      Vector2.subtract(this.velocity, this.previousVelocity)\n    );\n  }\n\n  public updatePreviousVectors() {\n    this.previousPosition.equals(this.position);\n    this.previousVelocity.equals(this.velocity);\n    this.previousAcceleration.equals(this.acceleration);\n  }\n\n  // @eventsHandler\n\n  public update(data: SensorData): this {\n    switch (data.name) {\n      case 'down':\n        this.onDown(data);\n        break;\n      case 'drag':\n        this.onDrag(data);\n        break;\n      case 'up':\n        this.onUp(data);\n        break;\n      case 'cancel':\n        this.onCancel(data);\n        break;\n    }\n    return this;\n  }\n\n  public onDown(data: SensorData) {\n    const { config } = this.manager;\n\n    this.isActive = true;\n    this.identifier = data.identifier;\n\n    this.downData = data;\n\n    this.initializeVectors(data);\n\n    this.currentEvent = data.name;\n\n    if (config.condition(this, this.manager) === true) {\n      this.checkWasScrolling();\n\n      config.onDown(this, this.manager);\n\n      if (config.enableDownRepeater === true) {\n        this.repeater.setConfig({\n          frequency: config.downRepeaterFrequency,\n          onStart: () => config.onDownRepeatStart(this.repeater, this, this.manager),\n          onRepeat: () => {\n            this.checkWasScrolling();\n            config.onDownRepeat(this.repeater, this, this.manager);\n          },\n          onEnd: () => config.onDownRepeatEnd(this.repeater, this, this.manager),\n        });\n        config.beforeDownRepeatStart(this.repeater, this, this.manager);\n        this.repeater.start();\n      }\n\n      if (config.enableLongPress === true) {\n        this.checkWasScrolling();\n        this.longPressTimeout = setTimeout(\n          () => {\n            if (config.longPressCondition(this, this.manager) === true)\n              this.onLongPress(data);\n          },\n          config.longPressWait * 1000\n        );\n      }\n    } else {\n      this.isActive = false;\n    }\n  }\n\n  public onDrag(data: SensorData) {\n    if (this.isActive  === true) {\n      if (this.firstDragPoint === false)\n        this.firstDragPoint = new Point(\n          data.clientX,\n          data.clientY,\n        );\n      this.checkWasScrolling();\n\n      this.dragData = data;\n\n      this.updateVectors(data);\n\n      this.previousEvent = this.currentEvent;\n      this.currentEvent = data.name;\n\n      this.manager.config.onDrag(this, this.manager);\n      this.updatePreviousVectors();\n    }\n  }\n\n  public onUp(data: SensorData) {\n    if (this.isActive === true) {\n      this.repeater.stop();\n      this.clearLongPress();\n\n      this.isActive = false;\n\n      this.upData = data;\n\n      this.updateVectors(data);\n\n      this.previousEvent = this.currentEvent;\n      this.currentEvent = data.name;\n\n      this.manager.config.onUp(this, this.manager);\n\n      this.wasScrolling = false;\n      this.updatePreviousVectors();\n    }\n  }\n\n  public onCancel(data: SensorData) {\n    if (this.isActive === true) {\n      this.repeater.stop();\n      this.clearLongPress();\n\n      this.isCancelled = true;\n      this.isActive = false;\n\n      this.cancelData = data;\n\n      this.updateVectors(data);\n\n      this.previousEvent = this.currentEvent;\n      this.currentEvent = data.name;\n\n      this.manager.config.onCancel(this, this.manager);\n      this.wasScrolling = false;\n      this.updatePreviousVectors();\n    }\n  }\n\n  public onLongPress(data: SensorData) {\n    const { config } = this.manager;\n    this.isLongPress = true;\n    config.onLongPress(this, this.manager);\n  }\n\n  public clearLongPress() {\n    clearTimeout(this.longPressTimeout);\n    this.longPressIsCleared = true;\n  }\n\n  private checkWasScrolling() {\n    if (this.isScrolling === true) this.wasScrolling = true;\n  }\n}\n","import {\n  DragEventManager,\n} from './drag-event-manager';\n\nimport {\n  DragEvent,\n} from './drag-event';\n\nexport type EventName = 'down' | 'drag' | 'up' | 'cancel';\n\nexport type Identifier = 'mouse-event' | string;\n\nexport interface SensorData {\n  identifier: Identifier;\n  name: EventName;\n  time: number;\n  screenX: number;\n  screenY: number;\n  pageX: number;\n  pageY: number;\n  clientX: number;\n  clientY: number;\n  target: HTMLElement | null;\n  type: 'MOUSE' | 'TOUCH';\n  event: MouseEvent | TouchEvent;\n  touch: Touch | undefined;\n}\n\nexport interface DragEvents {\n  [identifier: string]: DragEvent;\n}\n\nexport class SensorHub {\n\n  public manager: DragEventManager;\n\n  public events: DragEvents;\n\n  constructor(manager: DragEventManager) {\n    this.manager = manager;\n    this.events = {};\n  }\n\n  public receive(data: SensorData) {\n    this.manager.isActive = true;\n    if (\n      this.hasEvent(data.identifier) === false\n      || (data.identifier === 'mouse-event' && data.name === 'down')\n    ) {\n      this.events[data.identifier] = new DragEvent(this.manager).update(data);\n    } else {\n      this.events[data.identifier].update(data);\n    }\n  }\n\n  public get hasActiveEvents(): boolean {\n    return (Object.keys(this.events).length > 0);\n  }\n\n  private hasEvent(identifier: Identifier) {\n    return (Object.keys(this.events).indexOf(identifier) !== -1);\n  }\n\n  public get activeEvents(): DragEvent[] {\n    const identifiers = Object.keys(this.events);\n    if (identifiers.length === 0) return [];\n    const activeEvents: DragEvent[] = [];\n    identifiers.forEach(identifier => {\n      if (this.events[identifier].isActive === true)\n        activeEvents.push(this.events[identifier]);\n    });\n    return activeEvents;\n  }\n\n  private destroyEvent(identifier: Identifier): boolean {\n    if (typeof this.events[identifier] !== 'undefined') {\n      delete this.events[identifier];\n      return true;\n    }\n    return false;\n  }\n}\n","import {\n  Repeater,\n} from '../rocket';\n\nimport {\n  DragEventManager,\n} from './drag-event-manager';\n\nimport {\n  DragEvent,\n} from './drag-event';\n\nexport type EventTypes = 'TOUCH' | 'MOUSE';\n\nexport interface DragEventManagerConfig {\n  scrollEndDebounceDelay: number;\n  leftMouseButtonOnly: boolean;\n\n  parent: HTMLElement | Window;\n\n  listenTo: EventTypes[];\n\n  enableDownRepeater: boolean;\n  downRepeaterFrequency: number;\n  beforeDownRepeatStart: (repeater: Repeater, event: DragEvent, manager: DragEventManager) => void;\n  onDownRepeatStart: (repeater: Repeater, event: DragEvent, manager: DragEventManager) => void;\n  onDownRepeat: (repeater: Repeater, event: DragEvent, manager: DragEventManager) => void;\n  onDownRepeatEnd: (repeater: Repeater, event: DragEvent, manager: DragEventManager) => void;\n\n  enableLongPress: boolean;\n  longPressWait: number; // In seconds.\n  longPressCondition: (event: DragEvent, manager: DragEventManager) => boolean;\n  onLongPress: (event: DragEvent, manager: DragEventManager) => void;\n\n  condition: (event: DragEvent, manager: DragEventManager) => boolean;\n  onDown: (event: DragEvent, manager: DragEventManager) => void;\n  onDrag: (event: DragEvent, manager: DragEventManager) => void;\n  onUp: (event: DragEvent, manager: DragEventManager) => void;\n  onCancel: (event: DragEvent, manager: DragEventManager) => void;\n}\n\nexport const DRAG_EVENT_MANAGER_DEFAULT_CONFIG: DragEventManagerConfig = {\n  scrollEndDebounceDelay: 0.3,\n  leftMouseButtonOnly: true,\n\n  parent: window,\n\n  listenTo: ['TOUCH', 'MOUSE'],\n\n  enableDownRepeater: false,\n  downRepeaterFrequency: 60,\n  beforeDownRepeatStart: () => {},\n  onDownRepeatStart: () => {},\n  onDownRepeat: () => {},\n  onDownRepeatEnd: () => {},\n\n  enableLongPress: false,\n  longPressWait: 2,\n  longPressCondition: () => true,\n  onLongPress: () => {},\n\n  condition: () => true,\n  onDown: () => {},\n  onDrag: () => {},\n  onUp: () => {},\n  onCancel: () => {},\n};","import {\n  Util,\n} from '../rocket';\n\nimport {\n  MouseSensor,\n} from './mouse-sensor';\n\nimport {\n  TouchSensor,\n} from './touch-sensor';\n\nimport {\n  SensorHub,\n} from './sensor-hub';\n\nimport {\n  DragEventManagerConfig,\n  DRAG_EVENT_MANAGER_DEFAULT_CONFIG,\n} from './drag-event-manager-config';\n\nexport class DragEventManager {\n  public config: DragEventManagerConfig;\n\n  public mouseSensor: MouseSensor;\n  public touchSensor: TouchSensor;\n  public sensorHub: SensorHub;\n\n  public isActive: boolean = false;\n\n  public isListeningToScroll: boolean = false;\n  public scrollDebounce?: Function;\n  public isScrolling: boolean = false;\n\n  constructor(config?: Partial<DragEventManagerConfig>) {\n    this.config = Object.assign({}, DRAG_EVENT_MANAGER_DEFAULT_CONFIG);\n    this.setConfig(config);\n    this.mouseSensor = new MouseSensor(this);\n    this.touchSensor = new TouchSensor(this);\n    this.sensorHub   = new SensorHub(this);\n  }\n\n  public setConfig(config?: Partial<DragEventManagerConfig>): this {\n    if (typeof config === 'object') Object.assign(this.config, config);\n    return this;\n  }\n\n  public initialize(): this {\n    this.stopListenToScroll();\n    this.mouseSensor.stop();\n    this.touchSensor.stop();\n\n    this.listenToScroll();\n    this.mouseSensor.listen();\n    this.touchSensor.listen();\n    return this;\n  }\n\n  private eventHandlerScroll = () => this.isScrolling = true;\n\n  private eventHandlerScrollEnd = () => this.isScrolling = false;\n\n  public listenToScroll() {\n    if (this.isListeningToScroll === false) {\n      this.scrollDebounce = Util.debounce(\n        this.config.scrollEndDebounceDelay,\n        this.eventHandlerScrollEnd,\n      );\n      document.body.addEventListener('touchmove', this.eventHandlerScroll);\n      document.body.addEventListener('touchmove', this.scrollDebounce as EventListener);\n      window.addEventListener('scroll', this.eventHandlerScroll);\n      window.addEventListener('scroll', this.scrollDebounce as EventListener);\n      this.isListeningToScroll = true;\n    }\n  }\n\n  public stopListenToScroll() {\n    if (this.isListeningToScroll === true) {\n      document.body.addEventListener('touchmove', this.eventHandlerScroll);\n      document.body.addEventListener('touchmove', this.eventHandlerScrollEnd as EventListener);\n      window.removeEventListener('scroll', this.eventHandlerScroll);\n      window.removeEventListener('scroll', this.eventHandlerScrollEnd as EventListener);\n      this.isListeningToScroll = false;\n    }\n  }\n}\n","import {\n  DOMUtil,\n  Vector2,\n} from '../rocket';\n\nexport interface PointerDragEventManagerConfig {\n  target?: HTMLElement;\n  preventDefault: boolean;\n  keepHistory: boolean;\n\n  condition: (event: TouchEvent | MouseEvent, manager: PointerDragEventManager) => boolean;\n  onEvent: (event: TouchEvent | MouseEvent, manager: PointerDragEventManager) => void;\n  onStart: (pointerEvent: PointerDragEvent, manager: PointerDragEventManager) => void;\n  onDrag: (pointerEvent: PointerDragEvent, manager: PointerDragEventManager) => void;\n  onEnd: (pointerEvent: PointerDragEvent, manager: PointerDragEventManager) => void;\n  onCancel: (pointerEvent: PointerDragEvent, manager: PointerDragEventManager) => void;\n}\n\nexport const POINTER_DRAG_EVENT_MANAGER_DEFAULT_CONFIG: PointerDragEventManagerConfig = {\n  target: undefined,\n  preventDefault: true,\n  keepHistory: false,\n\n  condition: () => true,\n  onEvent: () => {},\n  onStart: () => {},\n  onDrag: () => {},\n  onEnd: () => {},\n  onCancel: () => {},\n};\n\nexport type PointerDragEventType = 'down' | 'drag' | 'up' | 'cancel';\n\nexport interface PointerDragEvent {\n  type: PointerDragEventType;\n  event: TouchEvent | MouseEvent;\n  target: EventTarget | null;\n\n  isTouch: boolean;\n  touch?: Touch;\n  identifier?: number;\n\n  pointerTargetOffset: Vector2;\n  position: Vector2;\n  velocity: Vector2;\n  acceleration: Vector2;\n\n  time: number;\n}\n\nexport class PointerDragEventManager {\n\n  public config: PointerDragEventManagerConfig;\n\n  public isActive: boolean = false;\n  public isTouch: boolean = false;\n  public touchIdentifier: number = 0;\n\n  public history: PointerDragEvent[];\n\n  public pointerTargetOffset: Vector2;\n  public previousPosition: Vector2;\n  public previousVelocity: Vector2;\n\n  public startingPointerDragEvent?: PointerDragEvent;\n  public startTime: number = 0;\n  public previousPointerDragEvent?: PointerDragEvent;\n\n  constructor(config?: Partial<PointerDragEventManagerConfig>) {\n    this.config = Object.assign({}, POINTER_DRAG_EVENT_MANAGER_DEFAULT_CONFIG);\n    this.setConfig(config);\n\n    this.pointerTargetOffset = new Vector2;\n    this.previousPosition = new Vector2;\n    this.previousVelocity = new Vector2;\n\n    this.history = [];\n\n    this.listen();\n  }\n\n  public setConfig(config?: Partial<PointerDragEventManagerConfig>): this {\n    if (typeof config === 'object') Object.assign(this.config, config);\n    return this;\n  }\n\n  private createMousePointerDragEvent(type: PointerDragEventType, event: MouseEvent): PointerDragEvent {\n    const { clientX, clientY, target } = event;\n\n    const position = new Vector2(clientX, clientY);\n    let velocity = new Vector2;\n    let acceleration = new Vector2;\n    if (type !== 'down') {\n      velocity = Vector2.subtract(position, this.previousPosition);\n      acceleration = Vector2.subtract(velocity, this.previousVelocity);\n    }\n\n    const pointerTargetOffset = Vector2.clone(this.pointerTargetOffset);\n    this.previousPosition.equals(position);\n    this.previousVelocity.equals(velocity);\n    return {\n      event,\n      isTouch: false,\n      target,\n      pointerTargetOffset,\n      position,\n      velocity,\n      acceleration,\n      time: Date.now(),\n      type,\n    };\n  }\n\n  private eventHandlerMouseDown = (event: MouseEvent) => {\n    if (\n      this.isActive === false\n      && this.config.condition(event, this) === true\n    ) {\n      if (this.config.preventDefault === true) event.preventDefault();\n      this.isActive = true;\n      this.isTouch = false;\n      this.startTime = Date.now();\n      this.config.onEvent(event, this);\n\n      let left = event.clientX;\n      let top = event.clientY;\n      if (DOMUtil.isHTMLElement(this.config.target) === true) {\n        const rect = (this.config.target as HTMLElement).getBoundingClientRect();\n        left = left - rect.left;\n        top = top - rect.top;\n      }\n      this.pointerTargetOffset.equals(left, top);\n\n      const pointerEvent = this.createMousePointerDragEvent('down', event);\n      if (this.config.keepHistory === true) {\n        this.history = [];\n        this.history.push(pointerEvent);\n      }\n      this.startingPointerDragEvent = pointerEvent;\n      this.config.onStart(pointerEvent, this);\n      this.previousPointerDragEvent = pointerEvent;\n    }\n  }\n\n  private eventHandlerMouseMove = (event: MouseEvent) => {\n    if (this.isActive === true) {\n      if (this.config.preventDefault === true) event.preventDefault();\n      this.config.onEvent(event, this);\n      const pointerEvent = this.createMousePointerDragEvent('drag', event);\n      if (this.config.keepHistory === true) this.history.push(pointerEvent);\n      this.config.onDrag(pointerEvent, this);\n      this.previousPointerDragEvent = pointerEvent;\n    }\n  }\n\n  private eventHandlerMouseUp = (event: MouseEvent) => {\n    if (this.isActive === true) {\n      if (this.config.preventDefault === true) event.preventDefault();\n      this.config.onEvent(event, this);\n      const pointerEvent = this.createMousePointerDragEvent('up', event);\n      if (this.config.keepHistory === true) this.history.push(pointerEvent);\n      this.config.onEnd(pointerEvent, this);\n      this.end();\n      this.previousPointerDragEvent = pointerEvent;\n    }\n  }\n\n  private eventHandlerMouseLeave = (event: MouseEvent) => {\n    if (this.isActive === false) {\n      if (this.config.preventDefault === true) event.preventDefault();\n      this.config.onEvent(event, this);\n      const pointerEvent = this.createMousePointerDragEvent('cancel', event);\n      if (this.config.keepHistory === true) this.history.push(pointerEvent);\n      this.config.onCancel(pointerEvent, this);\n      this.end();\n      this.previousPointerDragEvent = pointerEvent;\n    }\n  }\n\n  private createTouchPointerDragEvent(type: PointerDragEventType, event: TouchEvent, touch: Touch): PointerDragEvent {\n    const { identifier, clientX, clientY, target } = touch;\n\n    const position = new Vector2(clientX, clientY);\n    let velocity = new Vector2;\n    let acceleration = new Vector2;\n    if (type !== 'down') {\n      velocity = Vector2.subtract(position, this.previousPosition);\n      acceleration = Vector2.subtract(velocity, this.previousVelocity);\n    }\n\n    const pointerTargetOffset = Vector2.clone(this.pointerTargetOffset);\n    this.previousPosition.equals(position);\n    this.previousVelocity.equals(velocity);\n\n    return {\n      event,\n      identifier,\n      isTouch: true,\n      target,\n      pointerTargetOffset,\n      position,\n      velocity,\n      acceleration,\n      time: Date.now(),\n      touch,\n      type,\n    };\n  }\n\n  private eventHandlerTouchStart = (event: TouchEvent) => {\n    if (\n      this.isActive === false\n      && this.config.condition(event, this) === true\n    ) {\n      if (this.config.preventDefault === true) event.preventDefault();\n      this.isActive = true;\n      this.isTouch = true;\n      this.startTime = Date.now();\n      this.config.onEvent(event, this);\n      this.touchIdentifier = event.changedTouches[0].identifier;\n\n      let left = event.changedTouches[0].clientX;\n      let top  = event.changedTouches[0].clientY;\n      if (DOMUtil.isHTMLElement(this.config.target) === true) {\n        const rect = (this.config.target as HTMLElement).getBoundingClientRect();\n        left = left - rect.left;\n        top = top - rect.top;\n      }\n      this.pointerTargetOffset.equals(left, top);\n\n      const pointerEvent = this.createTouchPointerDragEvent('down', event, event.changedTouches[0]);\n      if (this.config.keepHistory === true) {\n        this.history = [];\n        this.history.push(pointerEvent);\n      }\n      this.startingPointerDragEvent = pointerEvent;\n      this.config.onStart(pointerEvent, this);\n      this.previousPointerDragEvent = pointerEvent;\n    }\n  }\n\n  private eventHandlerTouchMove = (event: TouchEvent) => {\n    if (this.isActive === true) {\n      if (this.config.preventDefault === true) event.preventDefault();\n      this.config.onEvent(event, this);\n      Array.from(event.changedTouches).forEach(touch => {\n        if (touch.identifier === this.touchIdentifier) {\n          const pointerEvent = this.createTouchPointerDragEvent('drag', event, touch);\n          if (this.config.keepHistory === true) this.history.push(pointerEvent);\n          this.config.onDrag(pointerEvent, this);\n          this.previousPointerDragEvent = pointerEvent;\n        }\n      });\n    }\n  }\n\n  private eventHandlerTouchEnd = (event: TouchEvent) => {\n    if (this.isActive === true) {\n      if (this.config.preventDefault === true) event.preventDefault();\n      this.config.onEvent(event, this);\n      Array.from(event.changedTouches).forEach(touch => {\n        if (touch.identifier === this.touchIdentifier) {\n          const pointerEvent = this.createTouchPointerDragEvent('up', event, touch);\n          if (this.config.keepHistory === true) this.history.push(pointerEvent);\n          this.config.onEnd(pointerEvent, this);\n          this.previousPointerDragEvent = pointerEvent;\n        }\n      });\n      this.end();\n    }\n  }\n\n  private eventHandlerTouchCancel = (event: TouchEvent) => {\n    if (this.isActive === true) {\n      if (this.config.preventDefault === true) event.preventDefault();\n      this.config.onEvent(event, this);\n      Array.from(event.changedTouches).forEach(touch => {\n        if (touch.identifier === this.touchIdentifier) {\n          const pointerEvent = this.createTouchPointerDragEvent('cancel', event, touch);\n          if (this.config.keepHistory === true) this.history.push(pointerEvent);\n          this.config.onCancel(pointerEvent, this);\n          this.previousPointerDragEvent = pointerEvent;\n        }\n      });\n      this.end();\n    }\n  }\n\n  private end() {\n    this.touchIdentifier = 0;\n    this.isActive = false;\n  }\n\n  public listen() {\n    const target = this.config.target as HTMLElement;\n    if (DOMUtil.isHTMLElement(target) === true) {\n      // Listen mouse Events\n      target.addEventListener('mousedown', this.eventHandlerMouseDown);\n      window.addEventListener('mousemove', this.eventHandlerMouseMove);\n      window.addEventListener('mouseup', this.eventHandlerMouseUp);\n      document.body.addEventListener('mouseleave', this.eventHandlerMouseLeave);\n\n      // Listen to touch events.\n      target.addEventListener('touchstart', this.eventHandlerTouchStart);\n      window.addEventListener('touchmove', this.eventHandlerTouchMove);\n      window.addEventListener('touchend', this.eventHandlerTouchEnd);\n      window.addEventListener('touchcancel', this.eventHandlerTouchCancel);\n    }\n  }\n\n  public stopListen() {\n    const target = this.config.target as HTMLElement;\n    if (DOMUtil.isHTMLElement(target) === true) {\n      // Remove mouse event listeners.\n      target.removeEventListener('mousedown', this.eventHandlerMouseDown);\n      window.removeEventListener('mousemove', this.eventHandlerMouseMove);\n      window.removeEventListener('mouseup', this.eventHandlerMouseUp);\n      document.body.removeEventListener('mouseleave', this.eventHandlerMouseLeave);\n\n      // Remove touch event listeners.\n      target.removeEventListener('touchstart', this.eventHandlerTouchStart);\n      window.removeEventListener('touchmove', this.eventHandlerTouchMove);\n      window.removeEventListener('touchend', this.eventHandlerTouchEnd);\n      window.removeEventListener('touchcancel', this.eventHandlerTouchCancel);\n    }\n  }\n}\n","import {\n  DOMUtil,\n  Util,\n  Vector2,\n  Viewport,\n} from '../rocket';\n\nexport interface PointerMoveEventManagerConfig {\n  target?: HTMLElement | Window;\n  debounceWait: number;\n  onEvent: (mouseEvent: MouseEvent, manager: PointerMoveEventManager) => void;\n  onEnter: (pointerEvent: PointerMoveEvent, manager: PointerMoveEventManager) => void;\n  onLeave: (pointerEvent: PointerMoveEvent, manager: PointerMoveEventManager) => void;\n  onMoveStart: (pointerEvent: PointerMoveEvent, manager: PointerMoveEventManager) => void;\n  onMove: (pointerEvent: PointerMoveEvent, manager: PointerMoveEventManager) => void;\n  onMoveEnd: (pointerEvent: PointerMoveEvent, manager: PointerMoveEventManager) => void;\n  onMoveInside: (pointerEvent: PointerMoveEvent, manager: PointerMoveEventManager) => void;\n}\n\nexport type PointerMoveEventType = 'move' | 'enter' | 'leave';\n\nexport interface PointerMoveEvent {\n  event: MouseEvent;\n  acceleration: Vector2;\n  velocity: Vector2;\n  position: Vector2;\n  time: number;\n  type: PointerMoveEventType;\n}\n\nexport const POINTER_MOVE_EVENT_MANAGER_DEFAULT_CONFIG: PointerMoveEventManagerConfig = {\n  target: window,\n  debounceWait: 200,\n  onEvent: () => {},\n  onMoveStart: () => {},\n  onMove: () => {},\n  onMoveInside: () => {},\n  onMoveEnd: () => {},\n  onEnter: () => {},\n  onLeave: () => {},\n};\n\nexport class PointerMoveEventManager {\n\n  public config: PointerMoveEventManagerConfig;\n\n  public isInside: boolean = false;\n  public isMoving: boolean = false;\n  private debouncer?: Function;\n\n  private position: Vector2;\n  private velocity: Vector2;\n  private acceleration: Vector2;\n  private previousPosition: Vector2;\n  private previousVelocity: Vector2;\n\n  public previousPointerMoveStartEvent?: PointerMoveEvent;\n  public previousPointerEvent?: PointerMoveEvent;\n  public previousPointerMoveEvent?: PointerMoveEvent;\n\n  constructor(config?: Partial<PointerMoveEventManagerConfig>) {\n    this.config = Object.assign({}, POINTER_MOVE_EVENT_MANAGER_DEFAULT_CONFIG);\n    this.setConfig(config);\n\n    this.position = new Vector2();\n    this.velocity = new Vector2();\n    this.acceleration = new Vector2();\n    this.previousPosition = new Vector2();\n    this.previousVelocity = new Vector2();\n\n    this.listen();\n  }\n\n  public setConfig(config?: Partial<PointerMoveEventManagerConfig>): this {\n    if (typeof config === 'object') Object.assign(this.config, config);\n    return this;\n  }\n\n  private createMousePointerMoveEvent(type: PointerMoveEventType, event: MouseEvent): PointerMoveEvent {\n    this.updateVectors(event);\n    return {\n      event,\n      type,\n      time: Date.now(),\n      position: Vector2.clone(this.position),\n      velocity: Vector2.clone(this.velocity),\n      acceleration: Vector2.clone(this.acceleration),\n    };\n  }\n\n  private updateVectors(event: MouseEvent) {\n    this.position = this.getVector2FromEvent(event);\n    this.velocity = Vector2.subtract(this.position, this.previousPosition);\n    this.acceleration = Vector2.subtract(this.velocity, this.previousVelocity);\n    this.previousPosition.equals(this.position);\n    this.previousVelocity.equals(this.velocity);\n  }\n\n  private getVector2FromEvent(event: MouseEvent): Vector2 {\n    const { clientX, clientY } = event;\n    return new Vector2(clientX, clientY);\n  }\n\n  private eventHandlerMouseEnter = (event: MouseEvent) => {\n    const pointerEvent = this.createMousePointerMoveEvent('enter', event);\n    this.previousPointerEvent = pointerEvent;\n    this.isInside = true;\n    this.config.onEvent(event, this);\n    this.config.onEnter(pointerEvent, this);\n  }\n\n  private eventHandlerMouseMove = (event: MouseEvent) => {\n    const pointerEvent = this.createMousePointerMoveEvent('move', event);\n    this.previousPointerEvent = pointerEvent;\n    this.previousPointerMoveEvent = pointerEvent;\n    this.isInside = this.checkIfPointerIsInside(event);\n    this.config.onEvent(event, this);\n    if (this.isMoving === false) {\n      this.isMoving = true;\n      this.previousPointerMoveStartEvent = pointerEvent;\n      this.config.onMoveStart(pointerEvent, this);\n    }\n    this.config.onMove(pointerEvent, this);\n  }\n\n  private eventHandlerMouseLeave = (event: MouseEvent) => {\n    const pointerEvent = this.createMousePointerMoveEvent('leave', event);\n    this.previousPointerEvent = pointerEvent;\n    this.isInside = false;\n    this.config.onEvent(event, this);\n    this.config.onLeave(pointerEvent, this);\n  }\n\n  private eventHandlerMouseMoveEnd = () => {\n    if (this.isMoving === true) {\n      this.isMoving = false;\n      this.config.onMoveEnd(this.previousPointerMoveEvent as PointerMoveEvent, this);\n    }\n  }\n\n  private checkIfPointerIsInside(event: MouseEvent) {\n    if (this.config.target === window) {\n      if (\n        event.clientX >= 0\n        && event.clientX <= Viewport.width\n        && event.clientY >= 0\n        && event.clientY <= Viewport.height\n      ) return true;\n    } else {\n      const rect = (this.config.target as HTMLElement).getBoundingClientRect();\n      if (\n        event.clientX >= rect.left\n        && event.clientX <= rect.right\n        && event.clientY >= rect.top\n        && event.clientY <= rect.bottom\n      ) return true\n    }\n    return false;\n  }\n\n  public listen() {\n    if (\n      typeof this.config.target === 'object'\n      && (this.config.target === window || DOMUtil.isHTMLElement(this.config.target) === true)\n    ) {\n      window.addEventListener('mousemove', this.eventHandlerMouseMove as EventListener);\n      this.debouncer = Util.debounce(this.config.debounceWait, this.eventHandlerMouseMoveEnd);\n      window.addEventListener('mousemove', this.debouncer as EventListener);\n      this.config.target.addEventListener('mouseenter', this.eventHandlerMouseEnter as EventListener);\n      this.config.target.addEventListener('mouseleave', this.eventHandlerMouseLeave as EventListener);\n    }\n  }\n\n  public stopListen() {\n    if (\n      typeof this.config.target === 'object'\n      && (this.config.target === window || DOMUtil.isHTMLElement(this.config.target) === true)\n    ) {\n      window.removeEventListener('mousemove', this.eventHandlerMouseMove as EventListener);\n      window.removeEventListener('mousemove', this.debouncer as EventListener);\n      this.config.target.removeEventListener('mouseenter', this.eventHandlerMouseEnter as EventListener);\n      this.config.target.removeEventListener('mouseleave', this.eventHandlerMouseLeave as EventListener);\n    }\n  }\n}\n","import {\n  Util,\n  Viewport,\n} from '../rocket';\n\nexport interface ScrollLocation {\n  left: number,\n  right: number,\n  top: number,\n  bottom: number,\n}\n\nexport interface ScrollTrigger {\n  condition: (scrollLocation: ScrollLocation, trigger: ScrollTrigger, manager: ScrollTriggerManager) => boolean;\n  action: (scrollLocation: ScrollLocation, trigger: ScrollTrigger, manager: ScrollTriggerManager) => Promise<void>;\n  prepare: (scrollLocation: ScrollLocation, trigger: ScrollTrigger, manager: ScrollTriggerManager) => void;\n  enabled: boolean;\n  removeOnceTriggered: boolean;\n  previousTriggeredTime?: number;\n  isActive: boolean;\n  isTriggered: boolean;\n  export?: any;\n}\n\nexport const DEFAULT_SCROLL_TRIGGER: ScrollTrigger = {\n  condition: () => true,\n  action: () => Promise.resolve(),\n  prepare: () => {},\n  enabled: true,\n  removeOnceTriggered: false,\n  previousTriggeredTime: undefined,\n  isActive: false,\n  isTriggered: false,\n  export: {},\n}\n\nexport class ScrollTriggerManager {\n  public triggerOnlyOnResizeEnd: boolean = false;\n  public resizeDebounceDelay: number = 0.5;\n  private resizeDebounce?: Function;\n\n  public previousScrollLocation?: ScrollLocation;\n  public currentScrollLocation?: ScrollLocation;\n\n  public triggers: ScrollTrigger[];\n\n  public isScrolling: boolean = false;\n  public isResizing: boolean = false;\n  public isDisabled: boolean = false;\n\n  public isReady: boolean = false;\n\n  constructor() {\n    this.triggers = [];\n  }\n\n  public initialize(): this {\n    this.previousScrollLocation = this.scrollLocation;\n    this.currentScrollLocation = this.scrollLocation;\n    this.prepare();\n    this.listen();\n    return this;\n  }\n\n  public prepare(): this {\n    this.updateScrollLocation();\n    if (this.isReady === false) {\n      this.triggers.forEach(trigger => {\n        if (trigger.enabled === true && typeof this.currentScrollLocation !== 'undefined')\n          trigger.prepare(this.currentScrollLocation, trigger, this);\n      });\n      this.isReady = true;\n    }\n    return this;\n  }\n\n  public set disable(disable: boolean) {\n    this.isDisabled = disable;\n  }\n\n  public get scrollLocation(): ScrollLocation {\n    return this.currentScrollLocation = {\n      left: window.scrollX,\n      top: window.scrollY,\n      right: window.scrollX + Viewport.width,\n      bottom: window.scrollY + Viewport.height,\n    };\n  }\n\n  public addTrigger(trigger: Partial<ScrollTrigger>): this {\n    const newTrigger = Object.assign({}, DEFAULT_SCROLL_TRIGGER);\n    this.triggers.push(Object.assign(newTrigger, trigger));\n    return this;\n  }\n\n  public removeTrigger(trigger: ScrollTrigger): this {\n    const index = this.triggers.indexOf(trigger);\n    if (index !== -1) this.triggers.splice(index, 1);\n    return this;\n  }\n\n  public update(): this {\n    this.updateScrollLocation();\n    if (this.isDisabled === false && this.triggers.length > 0) {\n      this.triggers.forEach(trigger => {\n        if (\n          trigger.enabled === true\n          && trigger.isActive === false\n          && typeof this.currentScrollLocation !== 'undefined'\n          && trigger.condition(this.currentScrollLocation, trigger, this) === true\n        ) {\n          trigger\n            .action(this.currentScrollLocation, trigger, this)\n            .then(() => {\n              if (trigger.removeOnceTriggered === true) this.removeTrigger(trigger);\n              trigger.isTriggered = true;\n              trigger.previousTriggeredTime = Date.now();\n              trigger.isActive = false;\n            })\n            .catch(() => trigger.isActive = false);\n        }\n      });\n    }\n    return this;\n  }\n\n  public updateScrollLocation(): this {\n    Object.assign(this.previousScrollLocation, this.currentScrollLocation);\n    this.currentScrollLocation = this.scrollLocation;\n    return this;\n  }\n\n  private eventHandlerScroll = event => {\n    this.update();\n  }\n\n  private eventHandlerResize = event => {\n    this.isResizing = true;\n    this.updateScrollLocation();\n    if (this.triggerOnlyOnResizeEnd === false) this.update();\n  }\n\n  private eventHandlerResizeEnd = event => {\n    this.isResizing = false;\n    if (this.triggerOnlyOnResizeEnd === true) this.update();\n  }\n\n  public listen() {\n    this.resizeDebounce = Util.debounce(this.resizeDebounceDelay, this.eventHandlerResizeEnd);\n    window.addEventListener('resize', this.resizeDebounce as EventListener);\n    window.addEventListener('resize', this.eventHandlerResize as EventListener);\n    window.addEventListener('scroll', this.eventHandlerScroll as EventListener);\n  }\n\n  public stop() {\n    window.removeEventListener('resize', this.resizeDebounce as EventListener);\n    window.removeEventListener('resize', this.eventHandlerResize as EventListener);\n    window.removeEventListener('scroll', this.eventHandlerScroll as EventListener);\n  }\n}\n","import {\n  DOMStyle,\n  DOMText,\n} from '../rocket';\n\nconst MODEL_ATTRIBUTES = {\n  border: 'none',\n  height: '0',\n  left: '0',\n  overflowWrap: 'normal',\n  overflowX: 'hidden',\n  overflowY: 'hidden',\n  padding: '0',\n  position: 'fixed',\n  resize: 'none',\n  top: '0',\n  visibility: 'hidden',\n  whiteSpace: 'nowrap',\n  width: '0',\n  zIndex: '-9999',\n};\n\nconst STYLE_PROPERTIES = [\n  'borderBottomStyle',\n  'borderBottomWidth',\n  'borderLeftStyle',\n  'borderLeftWidth',\n  'borderRightStyle',\n  'borderRightWidth',\n  'borderTopStyle',\n  'borderTopWidth',\n  'boxSizing',\n  'height',\n  'maxHeight',\n  'maxWidth',\n  'minHeight',\n  'minWidth',\n  'paddingBottom',\n  'paddingLeft',\n  'paddingRight',\n  'paddingTop',\n  'width',\n];\n\nconst FONT_STYLE_PROPERTIES = [\n  'direction',\n  'fontFamily',\n  'fontSize',\n  'fontSizeAdjust',\n  'fontStyle',\n  'fontVariant',\n  'fontWeight',\n  'letterSpacing',\n  'lineHeight',\n  'tabSize',\n  'textAlign',\n  'textDecoration',\n  'textIndent',\n  'textOverflow',\n  'textTransform',\n  'whiteSpace',\n  'wordBreak',\n  'wordSpacing',\n  'wordWrap',\n];\n\ninterface Style {\n  [name: string]: string;\n}\n\nexport class TextBoxModel {\n\n  private modelElement?: HTMLElement;\n\n  constructor() {}\n\n  public getTextBoxHeightFromElement(element: HTMLElement, text?: string, modelStyleOverride?: Style): number {\n    // Create and prepare model to measure height.\n    this\n      .destroy()\n      .create('TEXTAREA')\n      .applyModelAttributes()\n      .applyBoxModelPropertiesFromElement(element)\n      .applyFontPropertiesFromElement(element);\n\n    this.style = {\n      height: '0',\n      maxHeight: '0',\n      whiteSpace: 'pre-wrap',\n    };\n\n    if (typeof modelStyleOverride !== 'undefined')\n      this.style = modelStyleOverride;\n\n    // If text is undefined, get text from target element instead.\n    if (typeof text === 'undefined')\n      text = DOMText.getTextFromElement(element);\n\n    this.modelText = text;\n\n    // Set offset for when boxSizing is set to border-box.\n    let offset = 0;\n\n    if (DOMStyle.getStyleValue(element, 'boxSizing') === 'border-box') {\n      offset = DOMStyle.getVerticalBorderWidths(element);\n    } else {\n      // Minus vertical padding.\n      offset -= DOMStyle.getVerticalPaddings(element);\n    }\n\n    const result = (this.modelElement as HTMLElement).scrollHeight + offset;\n    this.destroy();\n    return result;\n  }\n\n  // This returns textbox width.\n  public getTextBoxWidthFromElement(element: HTMLElement, text?: string, modelStyleOverride?: Style): number {\n    // Create and prepare model to measure width.\n    this\n      .destroy()\n      .create('DIV')\n      .applyModelAttributes()\n      .applyBoxModelPropertiesFromElement(element)\n      .applyFontPropertiesFromElement(element);\n\n    this.style = {\n      borderLeftWidth: '0',\n      borderRightWidth: '0',\n      boxSizing: 'content-box',\n      minWidth: '0',\n      paddingLeft: '0',\n      paddingRight: '0',\n      whiteSpace: 'nowrap',\n      width: '0',\n      wordBreak: 'normal',\n      wordWrap: 'normal',\n    };\n\n    if (typeof modelStyleOverride !== 'undefined')\n      this.style = modelStyleOverride;\n\n    if (typeof text === 'undefined')\n      text = DOMText.getTextFromElement(element);\n\n    this.modelText = text;\n\n    const result = (this.modelElement as HTMLElement).scrollWidth;\n    this.destroy();\n    return result;\n  }\n\n  // @model\n\n  set modelFontSize(fontSize: number) {\n    if (typeof this.modelElement === 'object')\n      this.modelElement.style.fontSize = `${fontSize}px`;\n  }\n\n  set modelText(text: string) {\n    if (typeof this.modelElement === 'object') {\n      if (\n        this.modelElement instanceof HTMLTextAreaElement ||\n        this.modelElement instanceof HTMLInputElement ||\n        this.modelElement.nodeName === 'TEXTAREA' ||\n        this.modelElement.nodeName === 'INPUT'\n      ) {\n        (this.modelElement as HTMLTextAreaElement | HTMLInputElement).value = text;\n      } else {\n        text = text.replace(/[\\n\\r]/g, '<br>');\n        text = text.replace(/[\\t]/g, '&#9');\n        text = text.replace(/[\\s]/g, '&nbsp');\n        this.modelElement.innerHTML = text;\n      }\n    }\n  }\n\n  set style(style: object) {\n    if (typeof this.modelElement === 'object')\n      Object.assign(this.modelElement.style, style);\n  }\n\n  public applyModelAttributes(): this {\n    if (typeof this.modelElement === 'object')\n      Object.assign(this.modelElement.style, MODEL_ATTRIBUTES);\n    return this;\n  }\n\n  public applyBoxModelPropertiesFromElement(element: HTMLElement): this {\n    const style = window.getComputedStyle(element);\n    STYLE_PROPERTIES.forEach(name => {\n      if (typeof this.modelElement === 'object')\n        this.modelElement.style[name] = style[name];\n    });\n    return this;\n  }\n\n  public applyFontPropertiesFromElement(element: HTMLElement): this {\n    const style = window.getComputedStyle(element);\n    FONT_STYLE_PROPERTIES.forEach(name => {\n      if (typeof this.modelElement === 'object')\n        this.modelElement.style[name] = style[name];\n    });\n    return this;\n  }\n\n  public create(type?: string): this {\n    type = typeof type === 'string' ? type : 'TEXTAREA';\n    this.modelElement = document.createElement(type);\n    document.body.appendChild(this.modelElement);\n    return this;\n  }\n\n  public destroy(): this {\n    if (\n      typeof this.modelElement !== 'undefined' &&\n      this.modelElement.parentElement !== null\n    ) {\n      this.modelElement.parentElement.removeChild(this.modelElement);\n      this.modelElement.remove();\n    }\n    return this;\n  }\n}\n","function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n\nmodule.exports = _arrayWithHoles;","function _iterableToArrayLimit(arr, i) {\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nmodule.exports = _iterableToArrayLimit;","function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n}\n\nmodule.exports = _nonIterableRest;","var arrayWithHoles = require(\"./arrayWithHoles\");\n\nvar iterableToArrayLimit = require(\"./iterableToArrayLimit\");\n\nvar nonIterableRest = require(\"./nonIterableRest\");\n\nfunction _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || nonIterableRest();\n}\n\nmodule.exports = _slicedToArray;","import {\n  DOMText,\n  DOMUtil,\n  TextBoxModel,\n} from '../rocket';\n\nexport interface TextScaleModelConfig {\n  fontSizeSet?: number[];\n  fontSizeRange?: [number, number];\n  increment?: number;\n  setFontSize: (element: HTMLElement, fontSize: number, context: TextScaleModel) => void;\n}\n\nconst TEXTSCALEMODEL_DEFAULT_CONFIG: TextScaleModelConfig = {\n  setFontSize: (element, fontSize) => element.style.fontSize = `${fontSize}px`,\n};\n\nexport class TextScaleModel {\n  config: TextScaleModelConfig;\n  element: HTMLElement;\n\n  model: TextBoxModel;\n  originalWidth: number = 0;\n\n  constructor(element: HTMLElement, config: Partial<TextScaleModelConfig>) {\n    this.model = new TextBoxModel();\n    this.element = element;\n    this.config = Object.assign({}, TEXTSCALEMODEL_DEFAULT_CONFIG);\n    if (typeof config === 'object') this.setConfig(config);\n  }\n\n  public setConfig(config: Partial<TextScaleModelConfig>) {\n    if (typeof config === 'object') Object.assign(this.config, config);\n  }\n\n  public configRangeIsValid(): boolean {\n    if (\n      typeof this.config.fontSizeRange === 'object'\n      && Array.isArray(this.config.fontSizeRange) === true\n      && this.config.fontSizeRange.length === 2\n      && this.config.fontSizeRange[0] < this.config.fontSizeRange[1]\n      && typeof this.config.increment === 'number'\n      && this.config.increment > 0\n    ) return true;\n    return false;\n  }\n\n  public configSetIsvalid(): boolean {\n    if (\n      typeof this.config.fontSizeSet === 'object'\n      && Array.isArray(this.config.fontSizeSet) === true\n      && this.config.fontSizeSet.length > 0\n    ) return true;\n    return false;\n  }\n    \n  public getTextBoxWidth(): number {\n    return DOMText.getElementTextBoxWidth(this.element);\n  }\n\n  public getModelWidth(text: string, fontSize: number): number {\n    return this.model.getTextBoxWidthFromElement(\n      this.element, text, { fontSize: `${fontSize}px` }\n    );\n  }\n\n  public optimize(): number | false {\n    if (typeof this.config.fontSizeSet !== 'undefined')\n      return this.optimizeFromSet();\n    return this.optimizeFromRange();\n  }\n\n  public optimizeFromSet(): number | false {\n    if (\n      this.configSetIsvalid() === true\n      && typeof this.config.fontSizeSet !== 'undefined'\n    ) {\n      this.config.fontSizeSet.sort((a, b) => a - b);\n\n      const text = DOMText.getTextFromElement(this.element);\n      const originalWidth = this.getTextBoxWidth();\n\n      let modelWidth = 0;\n      let finalFontSize = this.config.fontSizeSet[this.config.fontSizeSet.length - 1];\n\n      for (let i = 0; i < this.config.fontSizeSet.length; i++) {\n        modelWidth = this.getModelWidth(text, this.config.fontSizeSet[i]);\n        if (modelWidth >= originalWidth) {\n          if (i === 0) {\n            finalFontSize = this.config.fontSizeSet[0];\n            break;\n          }\n          finalFontSize = this.config.fontSizeSet[i - 1];\n          break;\n        }\n      }\n      this.config.setFontSize(this.element, finalFontSize, this);\n      return finalFontSize;\n    }\n    return false;\n  }\n\n  public optimizeFromRange(): number | false {\n    if (\n      this.configRangeIsValid() === true\n      && typeof this.config.fontSizeRange !== 'undefined'\n      && typeof this.config.increment !== 'undefined'\n    ) {\n      const [ minFontSize, maxFontSize ] = this.config.fontSizeRange;\n      const text = DOMText.getTextFromElement(this.element);\n      const originalWidth = this.getTextBoxWidth();\n\n      let modelWidth = 0;\n      let finalFontSize = minFontSize;\n\n      while (true) {\n        modelWidth = this.getModelWidth(text, finalFontSize);\n        if (modelWidth >= originalWidth) {\n          while(true) {\n            finalFontSize -= this.config.increment;\n            if (finalFontSize <= minFontSize) {\n              finalFontSize = minFontSize;\n              break;\n            }\n            modelWidth = this.getModelWidth(text, finalFontSize);\n            if (modelWidth <= originalWidth) break;\n          }\n          break;\n        }\n        finalFontSize += this.config.increment;\n        if (finalFontSize >= maxFontSize) {\n          finalFontSize = maxFontSize;\n          break;\n        }\n      }\n      this.config.setFontSize(this.element, finalFontSize, this);\n      return finalFontSize;\n    }\n    return false;\n  }\n}\n","import {\n  DOMStyle,\n  DragEventManager,\n  Point,\n} from '../../rocket';\n\nimport {\n  SortableList,\n} from './sortable-list';\n\nexport interface SortableListConfig {\n  useTransition: boolean;\n  transitionDuration: number;\n  transitionTimingFunction: string;\n\n  leftMouseButtonOnly: boolean,\n\n  disableTouchEventsWhileActive: boolean;\n\n  autoScroll: boolean;\n\n  groupsSelector?: string;\n  groups?: HTMLElement[] | NodeListOf<HTMLElement> | HTMLCollection;\n  childIsItem: (child: HTMLElement) => boolean;\n\n  prepareGroup: (group: HTMLElement) => void;\n  prepareItems: (item: HTMLElement) => void;\n\n  createDummyFromItem: (item: HTMLElement, context: SortableList) => HTMLElement;\n  setDummyElementPropertiesFromItem: (dummyElement: HTMLElement, item: HTMLElement, context: SortableList) => void;\n\n  activateOnLongPress: boolean;\n  listenToLongPress: boolean;\n  longPressWait: number;\n  longPressCondition: (event, manager: DragEventManager, context: SortableList) => boolean,\n\n  condition: (item: HTMLElement, event, manager: DragEventManager, context: SortableList) => boolean;\n\n  beforeActivate: (context: SortableList) => void;\n  beforeDeactivate: (context: SortableList) => void;\n\n  activateItem: (item: HTMLElement, context: SortableList) => void;\n  deactivateItem: (item: HTMLElement, context: SortableList) => void;\n\n  afterActivate: (context: SortableList) => void;\n  afterDeactivate: (context: SortableList) => void;\n\n  popItem: (item: HTMLElement, context: SortableList) => void;\n  unpopItem: (item: HTMLElement, context: SortableList) => void;\n\n  moveItem: (item: HTMLElement, to: Point, context: SortableList) => void;\n\n  onComplete: (context: SortableList) => void;\n\n  onDown: (item: HTMLElement, event, manager: DragEventManager, context: SortableList) => void;\n  onDrag: (item: HTMLElement, event, manager: DragEventManager, context: SortableList) => void;\n  onUp: (item: HTMLElement, event, manager: DragEventManager, context: SortableList) => void;\n  onCancel: (item: HTMLElement, event, manager: DragEventManager, context: SortableList) => void;\n  onLongPress: (item: HTMLElement, event, manager: DragEventManager, context: SortableList) => void;\n}\n\nexport const SORTABLE_DEFAULT_CONFIG: SortableListConfig = {\n  useTransition: false,\n  transitionDuration: 150,\n  transitionTimingFunction: 'ease-out',\n\n\n  leftMouseButtonOnly: true,\n\n  disableTouchEventsWhileActive: true,\n\n  autoScroll: false,\n\n  groupsSelector: '.sortableContainer',\n  groups: undefined,\n  childIsItem: element => true,\n\n  prepareGroup: group => {\n    group.style.position = 'relative';\n  },\n  prepareItems: item => {},\n\n  createDummyFromItem: item => document.createElement('DIV'),\n  setDummyElementPropertiesFromItem: (dummy, item) => {\n    DOMStyle.applyStyle(dummy, {\n      position: 'relative',\n      boxSizing: 'border-box',\n      width: `${item.offsetWidth}px`,\n      height: `${item.offsetHeight}px`,\n    });\n    DOMStyle.copyStylesFrom(\n      item,\n      ['marginTop', 'marginBottom', 'marginLeft', 'marginRight'],\n      dummy\n    );\n  },\n\n  activateOnLongPress: false,\n  listenToLongPress: true,\n  longPressWait: 0.4,\n  longPressCondition: () => true,\n\n  beforeActivate: () => {},\n  beforeDeactivate: () => {},\n  afterActivate: () => {},\n  afterDeactivate: () => {},\n\n  condition: () => true,\n\n  activateItem: item => {\n    item.classList.add('sortableItem--active');\n  },\n  moveItem: (item, { x, y }) => {\n    item.style.transform = `translateX(${x}px) translateY(${y}px)`;\n  },\n  deactivateItem: item => {\n    item.classList.remove('sortableItem--active');\n  },\n  popItem: (item, group) => {\n    const width = item.offsetWidth;\n    const height = item.offsetHeight;\n\n    DOMStyle.applyStyle(item, {\n      boxSizing: 'border-box',\n      position: 'absolute',\n      left: '0px',\n      top: '0px',\n      width: `${width}px`,\n      height: `${height}px`,\n    });\n  },\n  unpopItem: item => DOMStyle.clearStyles(item),\n\n  onComplete: () => {},\n  onDown: () => {},\n  onDrag: () => {},\n  onUp: () => {},\n  onCancel: () => {},\n  onLongPress: () => {},\n};\n","import {\n  SortableList,\n} from './sortable-list';\n\nexport class ElementManager {\n  public sortable: SortableList;\n\n  public groups?: HTMLElement[];\n  public items?: HTMLElement[];\n\n  public isReady: boolean = false;\n\n  constructor(sortable: SortableList) {\n    this.sortable = sortable;\n  }\n\n  public initialize() {\n    this.updateGroups();\n    this.updateItems();\n  }\n\n  public updateGroups(): this {\n    const { config } = this.sortable;\n    // Get groups from selector.\n    if (\n      typeof config.groups === 'undefined'\n      && typeof config.groupsSelector === 'string'\n    ) {\n      const groups = document.querySelectorAll(config.groupsSelector);\n      if (groups !== null) {\n        this.groups = Array.from(groups) as HTMLElement[];\n        this.isReady = true;\n        return this;\n      }\n      throw new Error('SortableList: Fail to get groups.');\n    }\n\n    // Get groups from NodeList or HTMLCollection.\n    if (\n      typeof config.groups === 'object'\n      && (\n        config.groups instanceof NodeList === true\n        || config.groups instanceof HTMLCollection === true\n      )\n    ) {\n      this.groups = Array.from(config.groups) as HTMLElement[];\n      this.isReady = true;\n      return this;\n    }\n\n    // Get groups from HTMLElement[].\n    if (Array.isArray(config.groups) === true) {\n      // Make an array copy.\n      this.groups = [...config.groups as HTMLElement[]];\n      this.isReady = true;\n      return this;\n    }\n\n    throw new Error('SortableList: Groups are not defined.');\n  }\n\n  public updateItems(): this {\n    const { config } = this.sortable;\n    if (\n      typeof this.groups === 'object'\n      && Array.isArray(this.groups) === true\n    ) {\n      this.items = [];\n      this.groups.forEach(group => {\n        const children = Array.from(group.children)\n          .filter(\n            child => config.childIsItem(child as HTMLElement)\n          ) as HTMLElement[];\n        this.items = (this.items as HTMLElement[]).concat(children);\n      });\n    }\n    return this;\n  }\n\n  public getGroupFromItem(item: HTMLElement): HTMLElement | false {\n    if (\n      typeof this.groups === 'object'\n      && Array.isArray(this.groups) === true\n    ) {\n      for (let i = 0; i < this.groups.length; i++)\n        if (this.groups[i] === item.parentElement)\n          return this.groups[i];\n    }\n    return false;\n  }\n\n  public getItemsFromGroup(group: HTMLElement): HTMLElement[] {\n    const { config, activeItem } = this.sortable;\n    return Array.from(group.children).filter(child => {\n      if (\n        config.childIsItem(child as HTMLElement)\n        && child !== activeItem.element\n      )\n        return true;\n      return false;\n    }) as HTMLElement[];\n  }\n\n  public groupHasItem(group: HTMLElement): boolean {\n    return this.getItemsFromGroup(group).length > 0;\n  }\n}\n","import {\n  DOMTraverse,\n  DOMUtil,\n  DragEventManager,\n} from '../../rocket';\n\nimport {\n  SortableList,\n} from './sortable-list';\n\nexport class EventManager {\n  public sortable: SortableList;\n  public dragEventManager: DragEventManager;\n\n  public isActive: boolean = false;\n  public activeIdentifier?: string;\n\n  constructor(sortable: SortableList) {\n    this.dragEventManager = new DragEventManager();\n    this.sortable = sortable;\n  }\n\n  public initialize() {\n    const { config } = this.sortable;\n    this.dragEventManager.setConfig({\n      enableLongPress: (config.activateOnLongPress || config.listenToLongPress),\n      longPressWait: config.longPressWait,\n\n      leftMouseButtonOnly: config.leftMouseButtonOnly,\n\n      enableDownRepeater: true,\n      downRepeaterFrequency: 60,\n      onDownRepeat: this.handleOnActive,\n\n      condition: this.eventCondition,\n      onDown: this.handleOnDown,\n      onLongPress: this.handleOnLongPress,\n      onDrag: this.handleOnDrag,\n      onUp: this.handleOnUp,\n      onCancel: this.handleOnCancel,\n    });\n\n    this.dragEventManager.initialize();\n  }\n\n  public getTargetItemFromDownEvent(event): HTMLElement | false {\n    if (\n      typeof event.downData === 'object'\n      && typeof event.downData.target === 'object'\n      && DOMUtil.isHTMLElement(event.downData.target)\n    ) return event.downData.target;\n    return false;\n  }\n\n  public eventCondition = event => {\n    const { config, elementManager } = this.sortable;\n    const item = this.getTargetItemFromDownEvent(event);\n    if (\n      item !== false\n      && typeof elementManager.items === 'object'\n      && Array.isArray(elementManager.items) === true\n    ) {\n      const targetItem = DOMTraverse.findAncestor(\n        item,\n        element => (elementManager.items as HTMLElement[]).indexOf(element) !== -1,\n        false,\n      );\n      if (\n        targetItem !== false\n        && config.condition(\n          targetItem as HTMLElement, event, this.dragEventManager, this.sortable\n        ) === true\n      ) {\n        this.sortable.targetItem = targetItem as HTMLElement;\n        return true;\n      }\n    }\n    return false;\n  }\n\n  private handleOnDown = (event, manager) => {\n    const { config, targetItem } = this.sortable;\n    config.onDown(\n      targetItem as HTMLElement, event, manager, this.sortable\n    );\n    if (config.activateOnLongPress === false) {\n      this.activate(event);\n      this.sortable.activate(event);\n    }\n  }\n\n  private handleOnLongPress = (event, manager) => {\n    const { config, targetItem } = this.sortable;\n    config.onLongPress(\n      targetItem as HTMLElement, event, manager, this.sortable\n    );\n    if (\n      config.activateOnLongPress === true\n      && config.longPressCondition(event, manager, this.sortable) === true\n    ) {\n      this.activate(event);\n      this.sortable.activate(event);\n    }\n  }\n\n  public handleOnDrag = (event, manager) => {\n    const { config, targetItem, isActive, activeIdentifier } = this.sortable;\n    config.onDrag(\n      targetItem as HTMLElement, event, manager, this.sortable\n    );\n    if (\n      isActive === true\n      && activeIdentifier === event.identifier.toString()\n      && typeof event.dragData === 'object'\n    ) this.sortable.move(event.dragData);\n  }\n\n  public handleOnUp = (event, manager) => {\n    const { config, targetItem, isActive, activeIdentifier } = this.sortable;\n    config.onUp(\n      targetItem as HTMLElement, event, manager, this.sortable\n    );\n    if (\n      isActive === true\n      && activeIdentifier === event.identifier.toString()\n      && typeof event.upData === 'object'\n    ) {\n      this.deactivate();\n      this.sortable.deactivate();\n    }\n  }\n\n  private handleOnCancel = (event, manager) => {\n    const { config, targetItem, isActive, activeIdentifier } = this.sortable;\n    config.onCancel(\n      targetItem as HTMLElement, event, manager, this.sortable\n    );\n    if (\n      isActive === true\n      && activeIdentifier === event.identifier.toString()\n    ) {\n      this.deactivate();\n      this.sortable.deactivate();\n    }\n  }\n\n  private handleOnActive = (repeater, event, manager) => {\n    const { config, isActive, activeIdentifier } = this.sortable;\n    if (\n      isActive === true\n      && activeIdentifier === event.identifier.toString()\n      && config.autoScroll === true\n    ) this.sortable.scrollCheck(); \n  }\n\n  private activate(event) {\n    this.isActive = true;\n    this.activeIdentifier = event.identifier;\n  }\n\n  private deactivate() {\n    this.isActive = false;\n    this.activeIdentifier = undefined;\n  }\n}\n","import {\n  DOMStyle,\n} from '../../rocket';\n\nimport {\n  SortableList,\n} from './sortable-list';\nimport { DOMUtil } from '../../dom/dom-util';\n\nexport interface ItemModel {\n  item: HTMLElement;\n\n  left: number;\n  top: number;\n\n  width: number;\n  height: number;\n}\n\nexport interface TargetModel extends ItemModel {\n\n}\n\n// TODO: Add support \nexport class SortableListTransition {\n  public sortable: SortableList;\n\n  public group?: HTMLElement;\n  public baseModel?: ItemModel[];\n\n  public isActive: boolean = false;\n  public isAnimating: boolean = false;\n\n  public transitionTimeout?: number;\n\n  constructor(sortable: SortableList) {\n    this.sortable = sortable;\n  }\n\n  // 1) Everything starts from here.\n  public go(group: HTMLElement, target: HTMLElement, callback: Function) {\n    if (\n      this.isActive === false\n      || (\n        this.isActive === true\n        && this.group !== group\n      )\n    ) {\n      this.group = group;\n      this.create();\n      this.prepare();\n    }\n\n    if (this.isAnimating === false) {\n      clearTimeout(this.transitionTimeout);\n      this.resizeGroup();\n      const targetModel = this.createTargetModel(target);\n      if (targetModel !== false) {\n        this.prepareTargetModel(targetModel);\n        this.transition(targetModel, callback);\n      }\n    }\n  }\n\n  // 2) Create initial base model.\n  public create() {\n    if (\n      this.isActive === false\n      && typeof this.group === 'object'\n    ) {\n      const { elementManager, dummy } = this.sortable;\n      this.baseModel = [];\n      const items = elementManager.getItemsFromGroup(this.group);\n      items.forEach(item => {\n        (this.baseModel as ItemModel[]).push(\n          this.createModelFromElement(item)\n        );\n      });\n      // Add dummy element to base model.\n      this.baseModel.push(\n        this.createModelFromElement(dummy.element as HTMLElement)\n      );\n      this.baseModel.sort((a, b) => a.top - b.top);\n      this.isActive = true;\n    }\n  }\n\n  public createModelFromElement(element: HTMLElement): ItemModel {\n    return {\n      item: element,\n      left: element.offsetLeft,\n      top: element.offsetTop,\n      width: element.offsetWidth,\n      height: element.offsetHeight,\n    };\n  }\n\n  public resizeGroup() {\n    if (typeof this.group === 'object') {\n      const { dummy, elementManager } = this.sortable;\n      const items = elementManager.getItemsFromGroup(this.group);\n      let height = DOMStyle.getTotalVerticalInnerSpace(this.group);\n      items.forEach(item => {\n        height += DOMStyle.getTotalVerticalDimension(item);\n      });\n      if (typeof dummy.element === 'object')\n        height += DOMStyle.getTotalVerticalDimension(dummy.element as HTMLElement);\n      const width  = this.group.offsetWidth;\n      this.group.style.boxSizing = 'border-box';\n      this.group.style.width = `100%`;\n      this.group.style.maxWidth = `${width}px`;\n      this.group.style.height = `${height}px`;\n    }\n  }\n\n  // 3) Prepare group and items for transition.\n  public prepare() {\n    if (\n      this.isActive === true\n      && typeof this.baseModel === 'object'\n    ) {\n      this.baseModel.forEach(({ item, left, top, width, height }) => {\n        item.style.boxSizing = 'border-box';\n        item.style.left = `${left}px`;\n        item.style.top  = `${top}px`;\n        item.style.width  = `${width}px`;\n        item.style.height = `${height}px`;\n        item.style.zIndex = '0';\n        item.style.position = 'absolute';\n      });\n    }\n  }\n\n  // 4) Create targetModel.\n  public createTargetModel(target: HTMLElement | 'last'): TargetModel[] | false {\n    const { dummy } = this.sortable;\n\n    if (\n      this.isActive === true\n      && typeof this.baseModel !== 'undefined'\n    ) {\n      // Make a copy from base model.\n      const targetModel = this.baseModel.map(item => Object.assign({}, item));\n\n      const targetIndex = targetModel.findIndex(model => model.item === target);\n      const dummyIndex = targetModel.findIndex(model => model.item === dummy.element);\n      const dummyModel = targetModel[dummyIndex];\n\n      // Remove dummy from target model.\n      targetModel.splice(dummyIndex, 1);\n\n      if (target === 'last') {\n        // Append dummy model to the end.\n        targetModel.push(dummyModel);\n      } else {\n        if (dummyIndex < targetIndex) {\n          // Append dummy model before target with missing dummy index into account.\n          targetModel.splice(targetIndex - 1, 0, dummyModel);\n        } else {\n          // Append dummy model before target.\n          targetModel.splice(targetIndex, 0, dummyModel);\n        }\n      }\n\n      return targetModel;\n    }\n    return false;\n  }\n\n  // 5) Set correct values and sort targetModel.\n  public prepareTargetModel(targetModel: TargetModel[]) {\n    if (\n      this.isActive === true\n      && typeof this.baseModel !== 'undefined'\n    ) {\n      let left = this.baseModel[0].left;\n      let top  = this.baseModel[0].top;\n      let previousVertical = 0;\n      targetModel.forEach(model => {\n        const vertical = DOMStyle.getTotalVerticalDimension(model.item);\n        top = top + previousVertical;\n        model.left = left;\n        model.top  = top;\n        previousVertical = vertical;\n      });\n      targetModel.sort((a, b) => a.top - b.top);\n    }\n  }\n\n  // 6) Begin transition.\n  public transition(targetModel: TargetModel[], callback: Function) {\n    const { config } = this.sortable;\n    if (\n      this.isActive === true\n      && typeof targetModel !== 'undefined'\n    ) {\n      this.isAnimating = true;\n      targetModel.forEach(model => {\n        model.item.style.transitionDuration = `${config.transitionDuration}ms`;\n        model.item.style.transitionTimingFunction = config.transitionTimingFunction;\n        model.item.style.left = `${model.left}px`;\n        model.item.style.top = `${model.top}px`;\n      });\n      this.transitionTimeout = setTimeout(\n        () => {\n          callback();\n          this.isAnimating = false;\n        },\n        config.transitionDuration\n      );\n    }\n  }\n\n  public cleanup() {\n    if (DOMUtil.isHTMLElement(this.group) === true)\n      DOMStyle.clearStyles(this.group as HTMLElement);\n    if (typeof this.baseModel !== 'undefined')\n      this.baseModel.forEach(item => {\n        DOMStyle.clearStyles(item.item);\n      });\n  }\n\n  public destroy() {\n    this.group = undefined;\n    this.baseModel = undefined;\n    this.isActive = false;\n  }\n}\n","import {\n  DOMUtil\n} from '../../rocket';\n\nimport {\n  SortableList\n} from './sortable-list';\n\nexport class Dummy {\n  public sortable: SortableList;\n\n  public element?: HTMLElement;\n  public isActive: boolean = false;\n\n  constructor(sortable: SortableList) {\n    this.sortable = sortable;\n  }\n\n  public create() {\n    const { isActive, activeItem, config } = this.sortable;\n    if (\n      this.isActive === false\n      && isActive === true\n      && DOMUtil.isHTMLElement(activeItem.element) === true\n    ) {\n      if (typeof this.element === 'undefined') {\n        this.element = config.createDummyFromItem(\n          activeItem.element as HTMLElement,\n          this.sortable,\n        );\n        this.isActive = true;\n      }\n    }\n  }\n\n  public prepare() {\n    const { isActive, activeItem, config } = this.sortable;\n    if (\n      this.isActive === true\n      && isActive === true\n      && DOMUtil.isHTMLElement(activeItem.element) === true\n      && DOMUtil.isHTMLElement(this.element) === true\n    ) {\n      config.setDummyElementPropertiesFromItem(\n        this.element as HTMLElement,\n        activeItem.element as HTMLElement,\n        this.sortable,\n      );\n    }\n  }\n\n  public replaceWithActiveItem() {\n    const { isActive, activeItem } = this.sortable;\n    if (\n      this.isActive === true\n      && isActive === true\n      && DOMUtil.isHTMLElement(activeItem.element) === true\n      && DOMUtil.isHTMLElement(this.element) === true\n    ) {\n      const parent = (this.element as HTMLElement).parentElement;\n      if (parent !== null)\n        parent.replaceChild(\n          activeItem.element as HTMLElement,\n          this.element as HTMLElement,\n        );\n    }\n  }\n\n  public destroy() {\n    if (\n      this.isActive === true\n      && DOMUtil.isHTMLElement(this.element)\n    ) {\n      const parent = (this.element as HTMLElement).parentElement;\n      if (parent !== null)\n        parent.removeChild(this.element as HTMLElement);\n      if (DOMUtil.isHTMLElement(this.element) === true)\n        (this.element as HTMLElement).remove();\n      this.element = undefined;\n      this.isActive = false;\n    }\n  }\n}\n","import {\n  DOMPoint,\n  DOMRect,\n  DOMUtil,\n  Point,\n} from '../../rocket';\n\nimport {\n  SortableList\n} from './sortable-list';\n\nexport class ActiveItem {\n  public sortable: SortableList;\n\n  public element?: HTMLElement;\n  public pointToItemOffset?: Point;\n\n  public currentGroup?: HTMLElement;\n  public isActive: boolean = false;\n\n  constructor(sortable: SortableList) {\n    this.sortable = sortable;\n  }\n\n  public create(item: HTMLElement) {\n    if (\n      this.isActive === false\n      && DOMUtil.isHTMLElement(item) === true\n    ) {\n      this.element = item;\n      this.currentGroup = this.element.parentElement as HTMLElement;\n      this.isActive = true;\n    }\n  }\n\n  public setInitialPointToItemOffset({ x, y }: Point) {\n    if (\n      this.isActive === true\n      && DOMUtil.isHTMLElement(this.element) === true\n    )\n      this.pointToItemOffset = DOMPoint.getElementOffsetFromPoint(\n        this.element as HTMLElement,\n        new Point(x, y)\n      );\n  }\n\n  public move(pointer: Point) {\n    if (this.isActive === true) {\n      const { config } = this.sortable;\n      this.updateCurrentGroup();\n      const pointerToGroupOffset = DOMPoint.getElementOffsetFromPoint(\n        this.currentGroup as HTMLElement,\n        pointer,\n      );\n\n      const to = Point.subtract(\n        pointerToGroupOffset,\n        this.pointToItemOffset as Point,\n      );\n\n      config.moveItem(this.element as HTMLElement, to, this.sortable);\n    }\n  }\n\n  public updateCurrentGroup() {\n    if (this.isActive === true) {\n      const group = this.activeGroup;\n      if (\n        group !== false\n        && group !== this.currentGroup\n      ) {\n        group.appendChild(this.element as HTMLElement);\n        this.currentGroup = group;\n      }\n    }\n  }\n\n  public destroy() {\n    if (\n      this.isActive === true\n      && DOMUtil.isHTMLElement(this.element)\n    ) {\n      this.element = undefined;\n      this.isActive = false;\n    }\n  }\n\n  public get activeGroup(): HTMLElement | false {\n    const { isActive, elementManager } = this.sortable;\n    const { groups } = elementManager;\n    if (\n      isActive === true\n      && this.isActive === true\n      && typeof groups === 'object'\n      && Array.isArray(groups) === true\n    ) {\n      const areas: number[] = [];\n      groups.forEach(group => {\n        const area = DOMRect.getOverlappingAreaFromElements(\n          this.element as HTMLElement, group\n        );\n        areas.push(area);\n      });\n      const index = areas.indexOf(Math.max(...areas));\n      if (DOMUtil.isHTMLElement(groups[index]) == true)\n        return groups[index];\n    }\n    return false;\n  }\n}\n","import {\n  DOMPoint,\n  DOMUtil,\n  Point,\n  Viewport,\n} from '../../rocket';\n\nimport {\n  SORTABLE_DEFAULT_CONFIG,\n  SortableListConfig,\n} from './config';\n\nimport {\n  ElementManager,\n} from './element-manager';\n\nimport {\n  EventManager,\n} from './event-manager';\n\nimport {\n  SortableListTransition,\n} from './sortable-transition';\n\nimport {\n  Dummy,\n} from './dummy';\n\nimport {\n  ActiveItem,\n} from './active-item';\n\nexport class SortableList {\n  public config: SortableListConfig;\n\n  public elementManager: ElementManager;\n  public eventManager: EventManager;\n  public dummy: Dummy;\n  public activeItem: ActiveItem;\n  public transition: SortableListTransition;\n\n  public isActive: boolean = false;\n  public hasMoved: boolean = false;\n\n  public targetItem?: HTMLElement;\n  \n  public activeIdentifier?: string;\n  public activeItemPointOffset?: Point;\n\n  public group;\n\n  constructor(config?: Partial<SortableListConfig>) {\n    this.config = Object.assign({}, SORTABLE_DEFAULT_CONFIG);\n    this.setConfig(config);\n    this.elementManager = new ElementManager(this);\n    this.eventManager = new EventManager(this);\n    this.dummy = new Dummy(this);\n    this.activeItem = new ActiveItem(this);\n    this.transition = new SortableListTransition(this);\n  }\n\n  public setConfig(config?: Partial<SortableListConfig>) {\n    if (typeof config === 'object') Object.assign(this.config, config);\n  }\n\n  public initialize() {\n    this.elementManager.initialize();\n    this.eventManager.initialize();\n  }\n\n  public get groupElements(): HTMLElement[] | false {\n    const { groups } = this.elementManager;\n    if (\n      typeof groups === 'object'\n      && Array.isArray(groups) === true\n    ) return groups;\n    return false;\n  }\n\n  public get itemElements(): HTMLElement[] | false {\n    const { items } = this.elementManager;\n    if (\n      typeof items === 'object'\n      && Array.isArray(items) === true\n    ) return items;\n    return false;\n  }\n\n  public preventDefault = (event: TouchEvent) => {\n    if (\n      event.cancelable === true\n      && this.eventManager.isActive === true\n      && typeof event.changedTouches === 'object'\n    ) {\n      Array\n        .from(event.changedTouches)\n        .forEach(touch => {\n          if (\n            typeof touch.identifier !== 'undefined'\n            && this.eventManager.activeIdentifier === touch.identifier.toString()\n          ) event.preventDefault();\n        });\n    }\n  }\n\n  public disableEventsOnActivate() {\n    if (this.config.disableTouchEventsWhileActive === true) {\n      window.addEventListener('touchstart', this.preventDefault, { passive: false });\n      window.addEventListener('touchmove',  this.preventDefault, { passive: false });\n      window.addEventListener('touchend',   this.preventDefault, { passive: false });\n    }\n  }\n\n  public enableEventsOnDeactivate() {\n    if (this.config.disableTouchEventsWhileActive === true) {\n      window.removeEventListener('touchstart', this.preventDefault);\n      window.removeEventListener('touchmove',  this.preventDefault);\n      window.removeEventListener('touchend',   this.preventDefault);\n    }\n  }\n\n  public activate({ identifier, downData }) {\n    if (\n      this.isActive === false\n      && typeof this.targetItem !== 'undefined'\n    ) {\n      this.config.beforeActivate(this);\n\n      this.disableEventsOnActivate();\n      this.isActive = true;\n      this.activeItem.create(this.targetItem);\n      this.activeIdentifier = identifier.toString();\n\n      this.config.activateItem(this.activeItem.element as HTMLElement, this);\n      this.activeItem.setInitialPointToItemOffset(\n        new Point(downData.clientX, downData.clientY)\n      );\n      this.config.afterActivate(this);\n    }\n  }\n\n  public move({ clientX: x, clientY: y }) {\n    const group = this.activeItem.activeGroup;\n    if (\n      this.isActive === true\n      && DOMUtil.isHTMLElement(this.activeItem.element)\n      && group !== false\n    ) {\n      this.prepareMove();\n      this.activeItem.move(new Point(x, y));\n      this.prepareAndInsertDummy();\n    }\n  }\n\n  public prepareMove() {\n    const group = this.activeItem.activeGroup;\n    if (\n      this.hasMoved === false\n      && group !== false\n    ) {\n      this.dummy.create();\n      this.dummy.prepare();\n\n      group.insertBefore(\n        this.dummy.element as HTMLElement,\n        this.activeItem.element as HTMLElement\n      );\n\n      this.config.popItem(\n        this.activeItem.element as HTMLElement,\n        this,\n      );\n\n      this.hasMoved = true;\n    }\n  }\n\n  public prepareAndInsertDummy() {\n    const group = this.activeItem.currentGroup;\n    if (\n      typeof group !== 'undefined'\n      && this.itemElements !== false\n      && this.dummy.isActive == true\n      && this.activeItem.isActive == true\n    ) {\n      let target;\n\n      if (this.elementManager.groupHasItem(group) === true) {\n        const corners = DOMPoint.getElementCornerPoints(\n          this.activeItem.element as HTMLElement\n        );\n\n        const closestChild = DOMPoint.getClosestChildFromPoints(\n          group,\n          corners,\n          item => {\n            return (\n              item !== this.activeItem.element\n              && (this.itemElements as HTMLElement[]).indexOf(item) !== -1\n            );\n          },\n        );\n\n        // We need to defer inserting element until deactivation.\n        if (typeof closestChild === 'object') {\n          \n          const topPoints = DOMPoint.getElementTopPoints(this.activeItem.element as HTMLElement);\n          const bottomPoints = DOMPoint.getElementBottomPoints(this.activeItem.element as HTMLElement);\n          if (\n            closestChild !== (this.dummy.element as HTMLElement).nextElementSibling\n            && DOMPoint.elementCenterIsAbovePoints(closestChild, topPoints) === true\n          ) target = closestChild;\n          if (\n            closestChild.nextElementSibling !== this.dummy.element\n            && DOMPoint.elementCenterIsBelowPoints(closestChild, bottomPoints) === true\n          ) {\n            target = closestChild.nextElementSibling;\n            if (target === this.activeItem.element) target = target.nextElementSibling;\n            if (target === null) target = 'last';\n          }\n        }\n      } else {\n        target = 'last';\n        // Animate dummy out.\n      }\n\n      if (typeof target !== 'undefined' && target !== this.activeItem.element) {\n        this.transition.go(group, target, () => {\n          if (this.dummy.isActive === true) {\n            if (target === 'last') {\n              group.appendChild(this.dummy.element as HTMLElement);\n            } else {\n              group.insertBefore(this.dummy.element as HTMLElement, target);\n            }\n          }\n        });\n      }\n    }\n  }\n\n  public deactivate() {\n    if (\n      this.isActive === true\n      && typeof this.activeItem === 'object'\n    ) {\n      this.transition.cleanup();\n      this.transition.destroy();\n\n      this.config.beforeDeactivate(this);\n      this.config.deactivateItem(this.activeItem.element as HTMLElement, this);\n      this.config.unpopItem(this.activeItem.element as HTMLElement, this);\n\n      this.dummy.replaceWithActiveItem();\n      this.dummy.destroy();\n\n      this.isActive = false;\n      this.hasMoved = false;\n\n      this.activeItem.destroy();\n      this.activeIdentifier = undefined;\n      this.activeItemPointOffset = undefined;\n\n      this.enableEventsOnDeactivate();\n      this.config.afterDeactivate(this);\n      this.config.onComplete(this);\n    }\n  }\n\n  public scrollCheck() {\n    // TODO: Fix flickering issues onScrollUp.\n    // TODO: Check if it's already at the bottom or top.\n    // TODO: Add offset support.\n    // TODO: Add: Scroll Speed to config.\n    if (\n      this.isActive === true\n      && typeof this.activeItem !== 'undefined'\n      && this.config.autoScroll === true\n    ) {\n      const bottomPoint = DOMPoint.getElementBottomPoints(this.activeItem.element as HTMLElement)[0].y;\n      const topPoint = DOMPoint.getElementTopPoints(this.activeItem.element as HTMLElement)[0].y;\n      if (bottomPoint >= Viewport.height) {\n        window.scrollBy(0, 1);\n      } else if (topPoint <= 0) {\n        window.scrollBy(0, -1);\n      }\n      this.prepareAndInsertDummy();\n    }\n  }\n}\n","import {\n  DOMStyle,\n  TextBoxModel,\n} from '../rocket';\n\nexport interface TextAreaFieldConfig {\n  disableLineBreaks: boolean;\n  disableTabs: boolean;\n\n  limitNumberOfCharacters: boolean;\n  removeLeadingWhitespaces: boolean;\n  removeMultipleWhitespaces: boolean;\n\n  onBlur: (context: TextAreaField) => void;\n  onFocus: (context: TextAreaField) => void;\n  onInput: (context: TextAreaField) => void;\n  onPaste: (context: TextAreaField) => void;\n  onGrow: (height: number, context: TextAreaField) => void;\n}\n\nconst TEXTAREAFIELD_DEFAULT_CONFIG: TextAreaFieldConfig = {  \n  disableLineBreaks: false,\n  disableTabs: false,\n  limitNumberOfCharacters: false,\n  removeLeadingWhitespaces: false,\n  removeMultipleWhitespaces: false,\n\n  onBlur: () => {},\n  onFocus: () => {},\n  onInput: () => {},\n  onPaste: () => {},\n  onGrow: () => {},\n};\n\nexport class TextAreaField {\n  public textBoxModel: TextBoxModel;\n\n  public config: TextAreaFieldConfig;\n  public element: HTMLTextAreaElement;\n  \n  public isInFocus: boolean = false;\n  public previousKeyCode?: number;\n\n  constructor(element: HTMLTextAreaElement, config?: Partial<TextAreaFieldConfig>) {\n    this.config = Object.assign({}, TEXTAREAFIELD_DEFAULT_CONFIG);\n    this.setConfig(config);\n\n    this.textBoxModel = new TextBoxModel;\n    this.element = element;\n  }\n\n  public setConfig(config?: Partial<TextAreaFieldConfig>): this {\n    if (typeof config === 'object') Object.assign(this.config, config);\n    return this;\n  }\n\n  public initialize(): this {\n    this.filterInput();\n    this.grow();\n    this.listen();\n    return this;\n  }\n\n  get selected(): string {\n    const start = this.element.selectionStart;\n    const end = this.element.selectionEnd;\n    return this.value.substring(start, end);\n  }\n\n  public insert(string: string): this {\n    const start: number = this.element.selectionStart;\n    const end: number = this.element.selectionEnd;\n    const text: string = this.element.value;\n    this.element.value = text.substring(0, start) + string + text.substring(end);\n    this.element.selectionEnd = start + string.length;\n    return this;\n  }\n\n  get value(): string {\n    return this.element.value;\n  }\n\n  set value(value: string) {\n    this.element.value = value;\n    this.filterAndGrow();\n  }\n\n  get isSingleLine(): boolean {\n    return (this.getHeight('') === this.getHeight());\n  }\n\n  get lineCount(): number {\n    const lineHeight = <number>DOMStyle.getLineHeight(this.element);\n    const offset = this.getHeight('') - lineHeight;\n    return (this.getHeight() - offset) / lineHeight;\n  }\n\n  public getHeight(text?: string): number {\n    if (typeof text === 'string')\n      return this.textBoxModel.getTextBoxHeightFromElement(this.element, text);\n    return this.textBoxModel.getTextBoxHeightFromElement(this.element);\n  }\n\n  // TODO Rename This...\n  public filterAndGrow(): this {\n    this.filterInput();\n    this.grow();\n    return this;\n  }\n  \n  public grow(): this {\n    const height: number = this.textBoxModel.getTextBoxHeightFromElement(this.element);\n    this.element.style.height = `${height}px`;\n    this.config.onGrow(height, this);\n    return this;\n  }\n\n  public filterInput(): this {\n    // Remove new lines.\n    if (this.config.disableLineBreaks === true)\n      this.element.value = this.element.value.replace(/[\\r\\n]+/g, '');\n    // Remove tabs.\n    if (this.config.disableTabs === true)\n      this.element.value = this.element.value.replace(/[\\t]+/g, '');\n    // Remove multiple whitespaces to one.\n    if (this.config.removeMultipleWhitespaces === true)\n      this.element.value = this.element.value.replace(/[\\s]+/g, ' ');\n    // Remove leading whitespaces.\n    if (this.config.removeLeadingWhitespaces === true)\n      this.element.value = this.element.value.replace(/^[\\s]+/g, '');\n    // Trim element value if limit number of characters is a number.\n    if (typeof this.config.limitNumberOfCharacters === 'number')\n      this.element.value = this.element.value.substring(\n        0, this.config.limitNumberOfCharacters\n      );\n    // Replace tabs with spaces.\n    // TODO: Fix this because it's not working as intended.\n    // this.element.value = this.element.value.replace(/[\\t]+/g, '    ')\n    return this;\n  }\n\n  // @event_handler\n\n  private handleBlur = () => {\n    this.isInFocus = false;\n    this.config.onBlur(this);\n  }\n\n  private handleFocus = () => {\n    this.isInFocus = true;\n    this.config.onFocus(this);\n  }\n\n  private handleInput = event => {\n    this.filterAndGrow();\n    this.config.onInput(this);\n  }\n\n  private handleKeydown = event => {\n    const keyCode = event.keyCode;\n    if (keyCode === 9) {\n      this.insert('\\t');\n      event.preventDefault();\n    }\n    if (\n      keyCode === 13\n      && this.config.disableLineBreaks === true\n    ) event.preventDefault();\n    this.previousKeyCode = keyCode;\n  }\n\n  private handlePaste = event => {\n    this.config.onPaste(this);\n    this.filterAndGrow();\n  }\n\n  // @listen\n\n  private listen() {\n    this.element.addEventListener('blur', this.handleBlur);\n    this.element.addEventListener('focus', this.handleFocus);\n    this.element.addEventListener('input', this.handleInput);\n    this.element.addEventListener('keydown', this.handleKeydown);\n    this.element.addEventListener('paste', this.handlePaste);\n    window.addEventListener('resize', this.handleInput);\n    return this;\n  }\n\n  private stopListen() {\n    this.element.removeEventListener('blur', this.handleBlur);\n    this.element.removeEventListener('focus', this.handleFocus);\n    this.element.removeEventListener('input', this.handleInput);\n    this.element.removeEventListener('keydown', this.handleKeydown);\n    this.element.removeEventListener('paste', this.handlePaste);\n    window.removeEventListener('resize', this.handleInput);\n    return this;\n  }\n}\n","import {\n  DOMTraverse,\n} from '../rocket'\n\nexport interface InputActiveManagerConfig {\n  activeClassName: string;\n  containerClassName: string;\n\n  activateOnFocus: boolean;\n\n  beforeActivate: (container: HTMLElement, input: HTMLInputElement | HTMLTextAreaElement) => Promise<void>;\n  afterActivate: (container: HTMLElement, input: HTMLInputElement | HTMLTextAreaElement) => void;\n\n  conditionActivate: (container: HTMLElement, input: HTMLInputElement | HTMLTextAreaElement) => boolean;\n\n  beforeDeactivate: (container: HTMLElement, input: HTMLInputElement | HTMLTextAreaElement) => Promise<void>;\n  afterDeactivate: (container: HTMLElement, input: HTMLInputElement | HTMLTextAreaElement) => void;\n\n  activate: (container: HTMLElement, input: HTMLInputElement | HTMLTextAreaElement, activeClassName: string) => Promise<void>;\n  deactivate: (container: HTMLElement, input: HTMLInputElement | HTMLTextAreaElement, activeClassName: string) => Promise<void>;\n\n  onFocus: (container: HTMLElement, input: HTMLInputElement | HTMLTextAreaElement, context: InputActiveManager) => void;\n  onBlur: (container: HTMLElement, input: HTMLInputElement | HTMLTextAreaElement, context: InputActiveManager) => void;\n  onInput: (container: HTMLElement, input: HTMLInputElement | HTMLTextAreaElement, context: InputActiveManager) => void;\n}\n\nexport const INPUT_FOCUS_MANAGER_CONFIG: InputActiveManagerConfig = {\n  activeClassName: 'floating-label-field--focus',\n  containerClassName: 'floating-label-field',\n  activateOnFocus: true,\n\n  conditionActivate: (container, input) => input.value !== '',\n\n  beforeActivate: (container, input) => Promise.resolve(),\n  afterActivate: (container, input) => Promise.resolve(),\n\n  beforeDeactivate: (container, input) => Promise.resolve(),\n  afterDeactivate: (container, input) => Promise.resolve(),\n\n  activate: (container, input, activeClassName) => {\n    container.classList.add(activeClassName);\n    return Promise.resolve();\n  },\n  deactivate: (container, input, activeClassName) => {\n    container.classList.remove(activeClassName);\n    return Promise.resolve();\n  },\n\n  onFocus: () => {},\n  onBlur: () => {},\n  onInput: () => {},\n};\n\nexport class InputActiveManager {\n\n  public inputElements: (HTMLInputElement | HTMLTextAreaElement)[];\n  public containerElements?: HTMLElement[];\n\n  public config: InputActiveManagerConfig;\n\n  constructor(config?: Partial<InputActiveManagerConfig>) {\n    this.config = Object.assign({}, INPUT_FOCUS_MANAGER_CONFIG);\n    this.setConfig(config);\n\n    this.inputElements = [];\n\n    this.getElements();\n    this.listen();\n    this.initialize();\n  }\n\n  private setConfig(config?: Partial<InputActiveManagerConfig>) {\n    if (typeof config === 'object') Object.assign(this.config, config);\n  }\n\n  private getElements() {\n    const containerElements: NodeListOf<HTMLElement> =\n      document.querySelectorAll(`.${this.config.containerClassName}`);\n\n    if (containerElements !== null) {\n      this.containerElements = Array.from(containerElements);\n\n      this.inputElements = [];\n      this.containerElements.forEach(container => {\n        const input = DOMTraverse.findDescendant(\n          container,\n          element => (element.nodeName === 'INPUT' || element.nodeName === 'TEXTAREA'),\n          false\n        );\n        if (input !== false)\n          this.inputElements.push(input as HTMLInputElement | HTMLTextAreaElement);\n      });\n    }\n  }\n\n  public initialize() {\n    this.inputElements.forEach(input => {\n      let containerElement = DOMTraverse.findAncestorWithClass(\n        input, this.config.containerClassName, false\n      );\n      if (containerElement !== false) {\n        containerElement = containerElement as HTMLElement;\n        if (this.config.conditionActivate(containerElement, input) === true) {\n          if (this.isActive(containerElement) === false)\n            this.activate(containerElement, input);\n        } else {\n          if (this.isActive(containerElement) === true)\n            this.deactivate(containerElement, input);\n        }\n      }\n    });\n  }\n\n  private async activate(container: HTMLElement, input: HTMLInputElement | HTMLTextAreaElement): Promise<void> {\n    await this.config.beforeActivate(container, input);\n    await this.config.activate(container, input, this.config.activeClassName);\n    return this.config.afterActivate(container, input);\n  }\n\n  private async deactivate(container: HTMLElement, input: HTMLInputElement | HTMLTextAreaElement): Promise<void> {\n    await this.config.beforeDeactivate(container, input);\n    await this.config.deactivate(container, input, this.config.activeClassName);\n    return this.config.afterDeactivate(container, input);\n  }\n\n  private getInputActiveManagerElement(input: HTMLInputElement | HTMLTextAreaElement): HTMLElement | false {\n    const { containerClassName } = this.config;\n    const result = DOMTraverse.findAncestorWithClass(\n      input, containerClassName, false,\n    );\n    return (result !== false) ? result as HTMLElement : false;\n  }\n\n  private eventHandlerFocus = event => {\n    const containerElement = this.getInputActiveManagerElement(event.target);\n    if (containerElement !== false) {\n      this.config.onFocus(containerElement, event.target, this);\n      if (this.config.activateOnFocus === true)\n        if (this.isActive(containerElement as HTMLElement) === false)\n          this.activate(containerElement, event.target);\n    }\n  }\n\n  private eventHandlerBlur = event => {\n    let containerElement = this.getInputActiveManagerElement(event.target);\n    if (containerElement !== false) {\n      containerElement = containerElement as HTMLElement;\n      this.config.onBlur(containerElement, event.target, this);\n      if (this.config.activateOnFocus === true) {   \n        if (\n          this.config.conditionActivate(containerElement, event.target) === false\n          && this.isActive(containerElement) === true\n        ) this.deactivate(containerElement, event.target);\n      }\n    } // If container element is valid.\n  }\n\n  private eventHandlerInput = event => {\n    let containerElement = this.getInputActiveManagerElement(event.target);\n    if (containerElement !== false) {\n      containerElement = containerElement as HTMLElement;\n      this.config.onInput(containerElement, event.target, this);\n      if (this.config.activateOnFocus === false) {\n        if (\n          this.config.conditionActivate(containerElement, event.target) === true\n          && this.isActive(containerElement) === false\n        ) {\n          this.activate(containerElement, event.target);\n        } else {\n          if (this.isActive(containerElement) === true)\n            this.deactivate(containerElement, event.target);\n        }\n      }\n    } // if containerElement is valid\n  }\n\n  private isActive(containerElement: HTMLElement): boolean {\n    return containerElement.classList.contains(this.config.activeClassName);\n  }\n\n  public listen() {\n    this.inputElements.forEach(input => {\n      input.addEventListener('focus', this.eventHandlerFocus);\n    });\n    this.inputElements.forEach(input => {\n      input.addEventListener('blur', this.eventHandlerBlur);\n    });\n    this.inputElements.forEach(input => {\n      input.addEventListener('input', this.eventHandlerInput);\n    });\n  }\n\n  public stop() {\n    this.inputElements.forEach(input => {\n      input.removeEventListener('focus', this.eventHandlerFocus);\n    });\n    this.inputElements.forEach(input => {\n      input.removeEventListener('blur', this.eventHandlerBlur);\n    });\n    this.inputElements.forEach(input => {\n      input.removeEventListener('input', this.eventHandlerInput);\n    });\n  }\n}\n","import {\n  DOMTraverse,\n  DOMUtil,\n  Num,\n  PointerDragEventManager,\n} from '../rocket';\n\nexport interface MonoKnobSliderConfig {\n  trackElement?: HTMLElement;\n  knobElement?: HTMLElement;\n  highlightElement?: HTMLElement;\n  valueElement?: HTMLElement;\n\n  listenToKnobOnly: boolean;\n\n  range: [number, number];\n  interval: number;\n  useInterval: boolean;\n\n  onInit: (slider: MonoKnobSlider) => void;\n  onActivate: (slider: MonoKnobSlider) => void;\n  onDeactivate: (slider: MonoKnobSlider) => void;\n  onUpdate: (slider: MonoKnobSlider) => void;\n  moveKnob: (knob: HTMLElement, left: number) => void;\n  updateHighlight: (highlight: HTMLElement, width: number, slider: MonoKnobSlider) => void;\n};\n\nexport const MONO_KNOB_SLIDER_DEFAULT_CONFIG: MonoKnobSliderConfig = {\n  trackElement: undefined,\n  knobElement: undefined,\n  highlightElement: undefined,\n  valueElement: undefined,\n\n  listenToKnobOnly: false,\n\n  range: [0, 1],\n  interval: 0.1,\n  useInterval: false,\n\n  onInit: () => {},\n  onActivate: () => {},\n  onDeactivate: () => {},\n  onUpdate: () => {},\n  moveKnob: (knob, left) => {\n    knob.style.transform = `translateX(${left}px)`;\n  },\n  updateHighlight: (highlight, width) => {\n    highlight.style.width = `${width}px`;\n  },\n};\n\nexport class MonoKnobSlider {\n\n  public config: MonoKnobSliderConfig;\n\n  public isActive: boolean = false;\n  public isDisabled: boolean = false;\n\n  private knobLeftOffset: number = 0;\n\n  private currentValue: number = 0;\n\n  private pointerDragEventManager: PointerDragEventManager;\n\n  constructor(config: Partial<MonoKnobSliderConfig>) {\n    this.config = Object.assign({}, MONO_KNOB_SLIDER_DEFAULT_CONFIG);\n    this.setConfig(config);\n\n    this.pointerDragEventManager = new PointerDragEventManager();\n\n    this.config.onInit(this);\n    this.update();\n    this.onUpdate();\n    this.listen();\n  }\n\n  public setConfig(config: Partial<MonoKnobSliderConfig>) {\n    if (typeof config === 'object') Object.assign(this.config, config);\n  }\n\n  public set value(value: number) {\n    const { trackRange, knobElement } = this.getSliderRect();\n\n    const computedValue = this.offsetInterval(value);\n    const left = Num.modulate(computedValue, this.config.range, trackRange, true);\n    this.currentValue = Num.modulate(computedValue, this.config.range, 1, true);\n\n    this.config.moveKnob(knobElement, left);\n    this.onUpdate();\n  }\n\n  public get value(): number {\n    const value = Num.modulate(this.currentValue, 1, this.config.range, true);\n    return this.offsetInterval(value);\n  }\n\n  public get normalizedValue(): number {\n    return this.currentValue;\n  }\n\n  private getSliderRect() {\n    const trackElement = this.config.trackElement as HTMLElement;\n    const knobElement = this.config.knobElement as HTMLElement;\n\n    const trackRect = trackElement.getBoundingClientRect();\n    const knobRect = knobElement.getBoundingClientRect();\n\n    return {\n      trackRange: [0, trackRect.width - knobRect.width] as [number, number],\n      trackElement,\n      trackWidth: trackRect.width,\n      trackLeft: trackRect.left,\n      knobElement,\n      knobWidth: knobRect.width,\n      knobLeft: knobRect.left,\n    };\n  }\n\n  public update(): this {\n    const { trackRange, knobElement } = this.getSliderRect();\n\n    const value = Num.modulate(this.currentValue, 1, this.config.range, true);\n    const computedValue = this.offsetInterval(value);\n    const left = Num.modulate(computedValue, this.config.range, trackRange, true);\n    this.currentValue = Num.modulate(computedValue, this.config.range, 1, true);\n\n    this.config.moveKnob(knobElement, left);\n    this.onUpdate();\n    return this;\n  }\n\n  private onUpdate() {\n    if (DOMUtil.isHTMLElement(this.config.highlightElement) === true) {\n      const highlightElement = this.config.highlightElement as HTMLElement;\n      const { knobLeft, knobWidth, trackLeft } = this.getSliderRect();\n      const width = knobLeft - trackLeft + (knobWidth / 2);\n      this.config.updateHighlight(highlightElement, width, this);\n    }\n    this.config.onUpdate(this);\n  }\n\n  private offsetInterval(value): number {\n    const range = this.config.range[1] - this.config.range[0];\n    const remainder = range % this.config.interval;\n    if (\n      this.config.useInterval === true\n      && typeof this.config.interval === 'number'\n      && this.config.interval !== 0\n      && this.config.interval < range\n      && this.config.interval > 0\n      && remainder === 0\n    ) {\n      const valueRemainder = value % this.config.interval;\n      const valueFloor = value - valueRemainder;\n      return (valueRemainder < this.config.interval / 2) ? valueFloor : valueFloor + this.config.interval;\n    }\n    return value;\n  }\n\n  // TODO: Break this into two.\n  private eventHandlerStart = (pointerEvent) => {\n    if (\n      this.isDisabled === false\n      && this.isActive === false\n      && DOMUtil.isHTMLElement(this.config.knobElement) === true\n      && DOMUtil.isHTMLElement(this.config.trackElement) === true\n    ) {\n\n      const { trackRange, trackWidth, trackLeft, knobElement, knobWidth } = this.getSliderRect();\n      const { position, target } = pointerEvent;\n\n      if (\n        this.config.listenToKnobOnly === false\n        && pointerEvent.target === this.config.trackElement\n      ) {\n        // Check if pointer is at left edge.\n        const pointerLeft = position.x - trackLeft;\n        const halfKnobWidth = knobWidth / 2;\n        if (pointerLeft >= 0 && pointerLeft <= halfKnobWidth) {\n          this.currentValue = 0;\n          this.config.moveKnob(knobElement, 0);\n          this.onUpdate();\n        // Check if pointer is at right edge.\n        } else if (pointerLeft <= trackWidth && pointerLeft >= trackWidth - halfKnobWidth) {\n          this.currentValue = 1;\n          this.config.moveKnob(knobElement, trackWidth - knobWidth);\n          this.onUpdate();\n        // Check if pointer is in between\n        } else if (pointerLeft > halfKnobWidth && pointerLeft < trackWidth - halfKnobWidth) {\n          let left = pointerLeft - halfKnobWidth;\n\n          const value = Num.modulate(left, trackRange, this.config.range, true);\n          const computedValue = this.offsetInterval(value);\n          left = Num.modulate(computedValue, this.config.range, trackRange, true);\n          this.currentValue = Num.modulate(computedValue, this.config.range, 1, true);\n\n          this.config.moveKnob(knobElement, left);\n          this.onUpdate();\n        }\n      }\n\n      if (\n        this.config.listenToKnobOnly === false\n        || (\n          this.config.listenToKnobOnly === true\n          && DOMTraverse.hasAncestor(target, knobElement) !== false\n        )\n      ) {\n        const { knobLeft } = this.getSliderRect();\n        this.isActive = true;\n        this.knobLeftOffset = position.x - knobLeft;\n        this.config.onActivate(this);\n      }\n    }\n  }\n\n  private eventHandlerDrag = pointerEvent => {\n    if (this.isActive === true) {\n      const { trackRange, trackWidth, trackLeft, knobElement, knobWidth } = this.getSliderRect();\n      const { position } = pointerEvent;\n\n      // Get pointer left position relative to track with knob offset.\n      let left = position.x - trackLeft - this.knobLeftOffset;\n\n      // Make sure left is within the bound of the track.\n      if (left > trackWidth - knobWidth) left = trackWidth - knobWidth;\n      if (left < 0) left = 0;\n\n      const value = Num.modulate(left, trackRange, this.config.range, true);\n      const computedValue = this.offsetInterval(value);\n      left = Num.modulate(computedValue, this.config.range, trackRange, true);\n      this.currentValue = Num.modulate(left, trackRange, 1, true);\n      this.config.moveKnob(knobElement, left);\n      this.onUpdate();\n    }\n  }\n\n  private eventHandlerEnd = () => {\n    if (this.isActive === true) {\n      this.config.onDeactivate(this);\n      this.isActive = false;\n    }\n  }\n\n  public listen() {\n    if (DOMUtil.isHTMLElement(this.config.trackElement) === true) {\n      this.pointerDragEventManager = new PointerDragEventManager({\n        onEvent: event => event.preventDefault(),\n        keepHistory: false,\n        target: this.config.trackElement,\n        onStart: this.eventHandlerStart,\n        onDrag: this.eventHandlerDrag,\n        onEnd: this.eventHandlerEnd,\n        onCancel: this.eventHandlerEnd,\n      });\n    }\n  }\n}\n","import {\n  DOMTraverse,\n  DOMUtil,\n  Num,\n  PointerDragEventManager,\n} from '../rocket';\n\nexport interface DuoKnobSliderConfig {\n  trackElement?: HTMLElement;\n  knobOneElement?: HTMLElement;\n  knobTwoElement?: HTMLElement;\n  highlightElement?: HTMLElement;\n  minValueElement?: HTMLElement;\n  maxValueElement?: HTMLElement;\n\n  range: [number, number];\n  interval: number;\n  useInterval: boolean;\n\n  onInit: (slider: DuoKnobSlider) => void;\n  onActivate: (slider: DuoKnobSlider) => void;\n  onDeactivate: (slider: DuoKnobSlider) => void;\n  onUpdate: (slider: DuoKnobSlider) => void;\n  moveKnob: (knob: HTMLElement, left: number) => void;\n  updateHighlight: (highlight: HTMLElement, left: number, width: number, slider: DuoKnobSlider) => void;\n};\n\nexport const DUO_KNOB_SLIDER_DEFAULT_CONFIG: DuoKnobSliderConfig = {\n  trackElement: undefined,\n  knobOneElement: undefined,\n  knobTwoElement: undefined,\n  highlightElement: undefined,\n  minValueElement: undefined,\n  maxValueElement: undefined,\n\n  range: [0, 1],\n  interval: 0.1,\n  useInterval: false,\n\n  onInit: () => {},\n  onActivate: () => {},\n  onDeactivate: () => {},\n  onUpdate: () => {},\n  moveKnob: (knob, left) => {\n    knob.style.transform = `translateX(${left}px)`;\n  },\n  updateHighlight: (highlight, left, width, slider) => {\n    highlight.style.transform = `translateX(${left}px)`;\n    highlight.style.width = `${width}px`;\n  },\n};\n\nexport class DuoKnobSlider {\n\n  public config: DuoKnobSliderConfig;\n\n  public isActive: boolean = false;\n  public knobOneIsActive: boolean = false;\n  public knobTwoIsActive: boolean = false;\n\n  private knobOneLeftOffset: number = 0;\n  private knobTwoLeftOffset: number = 0;\n\n  private knobOnePointerDragEventManager: PointerDragEventManager;\n  private knobTwoPointerDragEventManager: PointerDragEventManager;\n\n  public knobOneValue: number = 0;\n  public knobTwoValue: number = 1;\n  private currentValues: [number, number];\n\n  public isDisabled: boolean = false;\n\n  constructor(config: Partial<DuoKnobSliderConfig>) {\n    this.config = Object.assign({}, DUO_KNOB_SLIDER_DEFAULT_CONFIG);\n    this.setConfig(config);\n\n    this.currentValues = [0, 1];\n\n    this.knobOnePointerDragEventManager = new PointerDragEventManager();\n    this.knobTwoPointerDragEventManager = new PointerDragEventManager();\n\n    this.config.onInit(this);\n    this.onUpdate()\n    this.listen();\n  }\n\n  public setConfig(config: Partial<DuoKnobSliderConfig>) {\n    if (typeof config === 'object') Object.assign(this.config, config);\n  }\n\n  public set value(value: [number, number]) {\n    const { knobOneTrackRange, knobOneElement, knobTwoTrackRange, knobTwoElement } = this.getSliderRect();\n\n    const computedMinValue = this.offsetInterval(value[0]);\n    const computedMaxValue = this.offsetInterval(value[1]);\n    const knobOneLeft = Num.modulate(computedMinValue, this.config.range, knobOneTrackRange, true);\n    const knobTwoLeft = Num.modulate(computedMaxValue, this.config.range, knobTwoTrackRange, true);\n\n    const min = Num.modulate(computedMinValue, this.config.range, 1, true);\n    const max = Num.modulate(computedMaxValue, this.config.range, 1, true);\n    this.currentValues = [min, max];\n\n    this.config.moveKnob(knobOneElement, knobOneLeft);\n    this.config.moveKnob(knobTwoElement, knobTwoLeft);\n    this.onUpdate()\n  }\n\n  public get value(): [number, number] {\n    let min = Num.modulate(this.currentValues[0], 1, this.config.range, true);\n    let max = Num.modulate(this.currentValues[1], 1, this.config.range, true);\n    min = this.offsetInterval(min);\n    max = this.offsetInterval(max);\n    return [min, max];\n  }\n\n  public get normalizedValue(): [number, number] {\n    return this.currentValues;\n  }\n\n  private updateValueFromKnobValues() {\n    this.currentValues[0] = Math.min(this.knobOneValue, this.knobTwoValue);\n    this.currentValues[1] = Math.max(this.knobOneValue, this.knobTwoValue);\n  }\n\n  private getSliderRect() {\n    const trackElement = this.config.trackElement as HTMLElement;\n    const trackRect = trackElement.getBoundingClientRect();\n\n    const knobOneElement = this.config.knobOneElement as HTMLElement;\n    const knobTwoElement = this.config.knobTwoElement as HTMLElement;\n\n    const knobOneRect = knobOneElement.getBoundingClientRect();\n    const knobTwoRect = knobTwoElement.getBoundingClientRect();\n\n    return {\n      knobOneTrackRange: [0, trackRect.width - knobOneRect.width] as [number, number],\n      knobTwoTrackRange: [0, trackRect.width - knobTwoRect.width] as [number, number],\n      trackElement,\n      trackRect,\n      knobOneElement,\n      knobOneRect,\n      knobTwoElement,\n      knobTwoRect,\n    };\n  }\n\n  private offsetInterval(value): number {\n    const range = this.config.range[1] - this.config.range[0];\n    const remainder = range % this.config.interval;\n    if (\n      this.config.useInterval === true\n      && typeof this.config.interval === 'number'\n      && this.config.interval !== 0\n      && this.config.interval < range\n      && this.config.interval > 0\n      && remainder === 0\n    ) {\n      const valueRemainder = value % this.config.interval;\n      const valueFloor = value - valueRemainder;\n      return (valueRemainder < this.config.interval / 2) ? valueFloor : valueFloor + this.config.interval;\n    }\n    return value;\n  }\n\n  private knobOneEventHandlerStart = pointerEvent => {\n    const { position, target } = pointerEvent;\n    const knobOneElement = this.config.knobOneElement as HTMLElement;\n    if (\n      this.isDisabled === false\n      && this.knobOneIsActive === false\n      && DOMUtil.isHTMLElement(this.config.trackElement) === true\n      && DOMUtil.isHTMLElement(this.config.knobOneElement) === true\n      && DOMTraverse.hasAncestor(target, knobOneElement)\n    ) {\n      this.isActive = true;\n      const left = knobOneElement.getBoundingClientRect().left;\n      this.knobOneIsActive = true;\n      this.knobOneLeftOffset = position.x - left;\n      this.config.onActivate(this);\n    }\n  }\n\n  private knobTwoEventHandlerStart = pointerEvent => {\n    const { position, target } = pointerEvent;\n    const knobTwoElement = this.config.knobTwoElement as HTMLElement;\n    if (\n      this.isDisabled === false\n      && this.knobTwoIsActive === false\n      && DOMUtil.isHTMLElement(this.config.trackElement) === true\n      && DOMUtil.isHTMLElement(this.config.knobTwoElement) === true\n      && DOMTraverse.hasAncestor(target,knobTwoElement)\n    ) {\n      this.isActive = true;\n      const left = knobTwoElement.getBoundingClientRect().left;\n      this.knobTwoIsActive = true;\n      this.knobTwoLeftOffset = position.x - left;\n      this.config.onActivate(this);\n    }\n  }\n\n  private knobOneEventHandlerDrag = pointerEvent => {\n    if (this.knobOneIsActive === true) {\n      const { trackRect, knobOneTrackRange, knobOneElement, knobOneRect } = this.getSliderRect();\n      const { position } = pointerEvent;\n\n      let left = position.x - trackRect.left - this.knobOneLeftOffset;\n\n      if (left < 0) left = 0;\n      if (left > trackRect.width - knobOneRect.width) left = trackRect.width - knobOneRect.width;\n\n      const value = Num.modulate(left, knobOneTrackRange, this.config.range, true);\n      let computedMinValue = this.offsetInterval(value);\n\n      left = Num.modulate(computedMinValue, this.config.range, knobOneTrackRange, true);\n\n      this.knobOneValue = Num.modulate(computedMinValue, this.config.range, 1, true);\n      this.updateValueFromKnobValues();\n      this.config.moveKnob(knobOneElement, left);\n      this.onUpdate()\n    }\n  }\n\n  private knobTwoEventHandlerDrag = pointerEvent => {\n    if (this.knobTwoIsActive === true) {\n      const { trackRect, knobTwoTrackRange, knobTwoElement, knobTwoRect } = this.getSliderRect();\n      const { position } = pointerEvent;\n\n      let left = position.x - trackRect.left - this.knobTwoLeftOffset;\n\n      if (left < 0) left = 0;\n      if (left > trackRect.width - knobTwoRect.width) left = trackRect.width - knobTwoRect.width;\n\n      const value = Num.modulate(left, knobTwoTrackRange, this.config.range, true);\n      let computedMaxValue = this.offsetInterval(value);\n\n      left = Num.modulate(computedMaxValue, this.config.range, knobTwoTrackRange, true);\n\n      this.knobTwoValue = Num.modulate(computedMaxValue, this.config.range, 1, true);\n      this.updateValueFromKnobValues();\n      this.config.moveKnob(knobTwoElement, left);\n      this.onUpdate()\n    }\n  }\n\n  private knobOneEventHandlerEnd = () => {\n    if (this.knobOneIsActive === true) {\n      this.config.onDeactivate(this);\n      this.knobOneIsActive = false;\n      this.checkIfActive();\n    }\n  }\n\n  private knobTwoEventHandlerEnd = () => {\n    if (this.knobTwoIsActive === true) {\n      this.config.onDeactivate(this);\n      this.knobTwoIsActive = false;\n      this.checkIfActive();\n    }\n  }\n\n  private checkIfActive() {\n    if (this.knobOneIsActive === false && this.knobTwoIsActive === false)\n      this.isActive = false;\n  }\n\n  private onUpdate() {\n    if (DOMUtil.isHTMLElement(this.config.highlightElement) === true) {\n      const slider = this.getSliderRect();\n      const knobOneMiddle = slider.knobOneRect.left + slider.knobOneRect.width / 2;\n      const knobTwoMiddle = slider.knobTwoRect.left + slider.knobTwoRect.width / 2;\n      const left = Math.min(knobOneMiddle, knobTwoMiddle) - slider.trackRect.left;\n      const width = Num.getEuclideanDistance(knobOneMiddle, knobTwoMiddle);\n      this.config.updateHighlight(this.config.highlightElement as HTMLElement, left, width, this);\n      this.config.onUpdate(this)\n    }\n  }\n\n  public listen() {\n    const { knobOneElement, knobTwoElement } = this.config;\n    if (\n         DOMUtil.isHTMLElement(knobOneElement) === true\n      && DOMUtil.isHTMLElement(knobTwoElement) === true\n    ) {\n      this.knobOnePointerDragEventManager = new PointerDragEventManager({\n        keepHistory: false,\n        target: knobOneElement,\n        preventDefault: true,\n        onStart: this.knobOneEventHandlerStart,\n        onDrag: this.knobOneEventHandlerDrag,\n        onEnd: this.knobOneEventHandlerEnd,\n        onCancel: this.knobOneEventHandlerEnd,\n      });\n      this.knobTwoPointerDragEventManager = new PointerDragEventManager({\n        keepHistory: false,\n        target: knobTwoElement,\n        preventDefault: true,\n        onStart: this.knobTwoEventHandlerStart,\n        onDrag: this.knobTwoEventHandlerDrag,\n        onEnd: this.knobTwoEventHandlerEnd,\n        onCancel: this.knobTwoEventHandlerEnd,\n      });\n    }\n  }\n}\n","import {\n  AfterActionCallback,\n  BeforeActionCallback,\n  ConditionHook,\n  Hook,\n} from '../index';\n\nimport {\n  MonoAction,\n  MonoActionName,\n} from './action-manager';\n\nimport {\n  MonoController,\n} from './mono-controller';\n\nexport interface MonoTriggerMap {\n  trigger: HTMLElement;\n  action: MonoActionName;\n  payload?: string;\n}\n\nexport interface MonoConfig {\n  cooldown: number;\n\n  listenToKeydown: boolean;\n  deactivateOnOutsideAction: boolean;\n  \n  // TODO: Maybe add string selector support.\n  items: NodeListOf<HTMLElement> | HTMLElement[];\n\n  isTrigger: (element: HTMLElement) => boolean;\n  mapTriggerToAction: (trigger: HTMLElement) => MonoTriggerMap | false;\n  getItemId: (item: HTMLElement) => string | false;\n\n  conditionActivate: ConditionHook<MonoAction, MonoController>;\n  conditionDeactivate: ConditionHook<MonoAction, MonoController>;\n\n  beforeActivate: Hook<MonoAction, MonoController>;\n  beforeDeactivate: Hook<MonoAction, MonoController>;\n\n  itemIsActive: (item: HTMLElement, context: MonoController) => boolean;\n  activateItem: (item: HTMLElement, context: MonoController) => void;\n  deactivateItem: (item: HTMLElement, context: MonoController) => void;\n\n  afterActivate: Hook<MonoAction, MonoController>;\n  afterDeactivate: Hook<MonoAction, MonoController>;\n\n  beforeAction: BeforeActionCallback<MonoAction, MonoController>;\n  afterAction: AfterActionCallback<MonoAction, MonoController>;\n\n  onKeydown: (event: KeyboardEvent, context: MonoController) => void;\n  onOutsideAction: (context: MonoController) => void;\n}\n\nexport const DEFAULT_CONFIG: MonoConfig = {\n  cooldown: 200,\n\n  listenToKeydown: false,\n  deactivateOnOutsideAction: true,\n\n  items: [],\n\n  isTrigger: element => element.classList.contains('js-mono-item-trigger'),\n  mapTriggerToAction: trigger => {\n    if (trigger.dataset.action === 'activate') {\n      return {\n        trigger,\n        action: 'activate',\n        payload: trigger.dataset.target,\n      };\n    } else if (trigger.dataset.action === 'deactivate') {\n      return {\n        trigger,\n        action: 'deactivate',\n      };\n    } else if (trigger.dataset.action === 'toggle') {\n      return {\n        trigger,\n        action: 'toggle',\n        payload: trigger.dataset.target,\n      };\n    }\n    return false;\n  },\n  getItemId: item => typeof item.dataset.id === 'string' ? item.dataset.id : false,\n\n  conditionActivate: () => true,\n  conditionDeactivate: () => true,\n\n  beforeActivate: () => Promise.resolve(),\n  beforeDeactivate: () => Promise.resolve(),\n\n  itemIsActive: item => item.classList.contains('js-mono-item--active'),\n  activateItem: item => item.classList.add('js-mono-item--active'),\n  deactivateItem: item => item.classList.remove('js-mono-item--active'),\n\n  afterActivate: () => Promise.resolve(),\n  afterDeactivate: () => Promise.resolve(),\n\n  beforeAction: () => Promise.resolve(),\n  afterAction: () => {},\n\n  onKeydown: () => {},\n  onOutsideAction: () => {},\n};\n","import {\n  MonoController,\n} from './mono-controller';\n\nexport class ItemManager {\n\n  private controller: MonoController;\n\n  public items: HTMLElement[];\n\n  public activeItem?: HTMLElement;\n  public activeItemId?: string;\n\n  public isActive: boolean = false;\n\n  constructor(controller: MonoController) {\n    this.controller = controller;\n    this.items = [];\n  }\n\n  public initialize(): this {\n    this.loadItemsFromConfig();\n    this.filterItems();\n    this.filterActiveItems();\n    return this;\n  }\n\n  public loadItemsFromConfig(): this {\n    const { config } = this.controller;\n\n    if (\n      Array.isArray(config.items) === false\n      && NodeList.prototype.isPrototypeOf(config.items as NodeListOf<HTMLElement>)\n    ) {\n      this.items = Array.from(config.items as NodeListOf<HTMLElement>);\n      return this;\n    }\n    \n    if (Array.isArray(config.items) === true) {\n      this.items = config.items as HTMLElement[];\n      return this;\n    }\n\n    throw new Error('MonoController: Items not defined.');\n  }\n\n  public setItems(items: HTMLElement[] | NodeListOf<HTMLElement> | string): this {\n    if (typeof items === 'string') {\n      const results = document.querySelectorAll(items);\n      if (results !== null) this.items = Array.from(results as NodeListOf<HTMLElement>);\n      return this;\n    }\n\n    if (NodeList.prototype.isPrototypeOf(items)) {\n      this.items = Array.from(items as NodeListOf<HTMLElement>);\n      return this;\n    }\n\n    if (Array.isArray(items) === true)\n      this.items = items as HTMLElement[];\n    return this;\n  }\n\n  public filterItems(): this {\n    this.items = this.items.filter(\n      item => this.itemIsValid(item)\n    );\n    return this;\n  }\n\n  public filterActiveItems(): this {\n    const { config } = this.controller;\n\n    if (this.items.length > 0) {\n      this.items.forEach(item => {\n        if (config.itemIsActive(item, this.controller) === true) {\n          const id = config.getItemId(item);\n\n          if (this.isActive === true) {\n            config.deactivateItem(item, this.controller);\n          } else if (id !== false) {\n            this.activeItem = item;\n            this.activeItemId = id;\n            this.isActive = true;\n          }\n        }\n      });\n\n      this.controller.isReady = true;\n    }\n    return this;\n  }\n\n  public itemIsValid(item: HTMLElement): boolean {\n    const { config } = this.controller;\n\n    let valid: boolean = true;\n\n    if (config.getItemId(item) === false) valid = false;\n\n    return valid;\n  }\n\n  public getItemFromId(id: string): HTMLElement | false {\n    const { config } = this.controller;\n\n    const matchedItems: HTMLElement[] = [];\n\n    this.items.forEach(item => {\n      if (config.getItemId(item) === id) matchedItems.push(item);\n    });\n\n    if (matchedItems.length > 0) return matchedItems[0];\n\n    return false;\n  }\n\n  public activate(item: HTMLElement) {\n    const { config } = this.controller;\n\n    if (this.itemIsValid(item) === true) {\n      config.activateItem(item, this.controller);\n      this.activeItem = item;\n      this.activeItemId = config.getItemId(item) as string;\n      this.isActive = true;\n    }\n  }\n\n  public deactivate() {\n    const { config } = this.controller;\n\n    if (typeof this.activeItem !== 'undefined') {\n      config.deactivateItem(this.activeItem, this.controller);\n      this.activeItem = undefined;\n      this.activeItemId = undefined;\n      this.isActive = false;\n    }\n  }\n}\n","import {\n  DOMTraverse,\n  DragEventManager,\n} from '../../rocket';\n\nimport {\n  MonoController,\n} from './mono-controller';\n\nimport {\n  MonoActionName,\n} from './action-manager';\n\nimport {\n  MonoTriggerMap,\n} from './config';\n\nexport interface ActionConfigMapEntry {\n  action: MonoActionName;\n  configProperty: string;\n}\n\nexport type ActionConfigMapEntries = ActionConfigMapEntry[];\n\nexport class EventManager {\n  public controller: MonoController;\n\n  public dragEventManager: DragEventManager;\n\n  constructor(controller: MonoController) {\n    this.controller = controller;\n    this.dragEventManager = new DragEventManager({ onUp: this.onUp });\n  }\n\n  public initialize() {\n    this.dragEventManager.initialize()\n    if (this.controller.config.listenToKeydown === true)\n      window.addEventListener('keydown', this.eventHandlerKeydown);\n  }\n\n  private onUp = event => {\n    this.handleOutsideAction(event);\n\n    if (typeof event.downData !== 'object') return;\n\n    const targetDownElement = event.getTargetElementFromData(event.downData);\n    if (targetDownElement === false) return;\n\n    const { config } = this.controller;\n\n    const trigger = DOMTraverse.findAncestor(targetDownElement, config.isTrigger, false);\n    if (trigger === false) return;\n\n    const triggerMap = config.mapTriggerToAction(trigger as HTMLElement);\n    if (triggerMap === false) return;\n\n    this.eventHub(trigger as HTMLElement, triggerMap);\n  };\n\n  private eventHub(trigger: HTMLElement, triggerMap: MonoTriggerMap): this {\n    const { actionManager, isReady } = this.controller;\n    if (\n      isReady === true\n      && actionManager.isRunning === false\n    ) {\n      actionManager.isRunning = true;\n      const action = actionManager.composeActionFromTrigger(trigger, triggerMap);\n      actionManager.actionHub(action);\n    }\n    return this;\n  }\n\n  private handleOutsideAction = event => {\n    const { config, actionManager, itemManager } = this.controller;\n    if (\n      config.deactivateOnOutsideAction === true\n      && actionManager.isRunning === false\n    ) {\n      const targetDownElement = event.getTargetElementFromData(event.downData);\n      const targetUpElement = event.getTargetElementFromData(event.upData);\n      if (\n        itemManager.isActive === true\n        && typeof itemManager.activeItem !== 'undefined'\n        && targetDownElement !== false\n        && targetUpElement !== false\n        && DOMTraverse.hasAncestor(targetDownElement, itemManager.activeItem) === false\n        && DOMTraverse.hasAncestor(targetUpElement, itemManager.activeItem) === false\n        && DOMTraverse.findAncestor(targetDownElement, config.isTrigger) === false\n      ) {\n        this.controller.deactivate();\n        config.onOutsideAction(this.controller);\n      }\n    }\n  }\n\n  private eventHandlerKeydown = (event: KeyboardEvent) => {\n    const { config, actionManager } = this.controller;\n    if (\n      config.listenToKeydown  === true\n      && actionManager.isRunning === false\n    ) config.onKeydown(event, this.controller);\n  }\n}\n","import {\n  MonoTriggerMap,\n} from './config';\n\nimport {\n  MonoController,\n} from './mono-controller';\n\nexport type MonoActionName = 'activate' | 'deactivate' | 'toggle';\n\nexport interface MonoAction {\n  name: MonoActionName;\n  currentItem?: HTMLElement;\n  currentItemId?: string;\n  nextItem?: HTMLElement;\n  nextItemId?: string;\n  targetId?: string;\n  trigger?: HTMLElement;\n}\n\nexport class ActionManager {\n  private controller: MonoController;\n\n  public isRunning: boolean = false;\n  public isNested: boolean = false;\n\n  constructor(controller: MonoController) {\n    this.controller = controller;\n  }\n\n  private async activate(action: MonoAction): Promise<void> {\n    const { config, itemManager } = this.controller;\n    if (\n      itemManager.isActive === false\n      && itemManager.activeItem !== action.nextItem\n      && config.conditionActivate(action, this.controller) === true\n    ) {\n      await config.beforeActivate(action, this.controller);\n      itemManager.activate(<HTMLElement>action.nextItem);\n      config.afterActivate(action, this.controller);\n      return Promise.resolve();\n    }\n    return Promise.reject();\n  }\n\n  private async deactivate(action: MonoAction): Promise<void> {\n    const { config, itemManager } = this.controller;\n    if (itemManager.isActive === false) return Promise.resolve();\n    if (\n      action.name === 'deactivate'\n      && typeof action.targetId === 'string'\n      && itemManager.activeItemId !== action.targetId\n    ) return Promise.resolve();\n\n    if (config.conditionDeactivate(action, this.controller) === true) {\n      await config.beforeDeactivate(action, this.controller);\n      itemManager.deactivate();\n      config.afterDeactivate(action, this.controller);\n      return Promise.resolve();\n    }\n    return Promise.reject();\n  }\n\n  private async completeAction(action: MonoAction): Promise<void> {\n    const { itemManager } = this.controller;\n    if (\n      action.name === 'activate'\n      && itemManager.activeItemId !== action.targetId\n    ) {\n      await this.deactivate(action);\n      return this.activate(action);\n    } else if (action.name === 'deactivate') {\n      return this.deactivate(action);\n    } else if (action.name === 'toggle') {\n      if (itemManager.activeItemId === action.targetId) {\n        return this.deactivate(action);\n      } else {\n        await this.deactivate(action);\n        return this.activate(action);\n      }\n    }\n    return Promise.reject();\n  }\n\n  public createAction(actionName: MonoActionName): MonoAction {\n    const { itemManager } = this.controller;\n    return {\n      name: actionName,\n      currentItem: itemManager.activeItem,\n      currentItemId: itemManager.activeItemId,\n      nextItem: undefined,\n      nextItemId: undefined,\n      targetId: undefined,\n      trigger: undefined,\n    };\n  }\n\n  public composeAction(actionName: MonoActionName, id?: string): MonoAction {\n    const { itemManager } = this.controller;\n\n    const action = this.createAction(actionName);\n\n    if (typeof id === 'string') {\n      const nextItem = itemManager.getItemFromId(id);\n      if (typeof nextItem === 'object') {\n        action.nextItem = nextItem;\n        action.nextItemId = id;\n      }\n      action.targetId = id;\n    }\n    return action;\n  }\n\n  public composeActionFromTrigger(trigger: HTMLElement, triggerMap: MonoTriggerMap): MonoAction {\n    const action = this.composeAction(triggerMap.action, triggerMap.payload);\n    action.trigger = trigger;\n    return action;\n  }\n\n  public async actionHub(action: MonoAction, isNestedAction: boolean = false, callback?: Function): Promise<void> {\n    if (this.isRunning === true && isNestedAction === true)\n      this.isNested = true;\n\n    this.isRunning = true;\n\n    const { config } = this.controller;\n\n    let preAction: Promise<void>;\n    if (this.isNested === false) {\n      preAction = new Promise(resolve => {\n        this.isNested = true;\n        config\n          .beforeAction(action, this.controller)\n          .then(() => {\n            this.isNested = false;\n            resolve();\n          })\n          .catch(() => this.isNested = false);\n      })\n    } else {\n      preAction = Promise.resolve();\n    }\n\n    try {\n      await preAction;\n      await this.completeAction(action);\n      await this.endAction(callback);\n      if (isNestedAction === true && this.isNested === true)\n        this.isNested = false;\n      if (this.isNested === false)\n        config.afterAction(action, this.controller);\n    } catch {\n      await this.endAction(callback);\n      return Promise.reject();\n    }\n  }\n\n  public endAction(callback?: Function): Promise<void> {\n    if (this.isNested === false)\n      return new Promise(resolve => {\n        setTimeout(\n          () => {\n            this.isRunning = false;\n            resolve();\n          }, this.controller.config.cooldown\n        );\n      });\n\n    if (this.isRunning === false && this.isNested === true)\n      this.isNested = false;\n\n    if (typeof callback === 'function') callback();\n\n    return Promise.resolve();\n  }\n}\n","import {\n  DEFAULT_CONFIG,\n  MonoConfig,\n} from './config';\n\nimport {\n  ItemManager,\n} from './item-manager';\n\nimport {\n  EventManager,\n} from './event-manager';\n\nimport {\n  ActionManager,\n} from './action-manager';\n\nexport class MonoController {\n\n  public config: MonoConfig;\n\n  public itemManager: ItemManager;\n  public eventManager: EventManager;\n  public actionManager: ActionManager;\n\n  public isReady: boolean = false;\n\n  constructor(config?: Partial<MonoConfig>) {\n    this.config = Object.assign({}, DEFAULT_CONFIG);\n    this.setConfig(config);\n    this.itemManager = new ItemManager(this);\n    this.eventManager = new EventManager(this);\n    this.actionManager = new ActionManager(this);\n  }\n\n  public setConfig(config?: Partial<MonoConfig>): this {\n    if (typeof config === 'object') Object.assign(this.config, config);\n    return this;\n  }\n\n  public initialize(): this {\n    this.itemManager.initialize();\n    this.eventManager.initialize();\n    return this;\n  }\n\n  public get isActive(): boolean {\n    return this.itemManager.isActive;\n  }\n\n  public isItemActive(id: string): boolean {\n    const { isActive, activeItem } = this.itemManager;\n    if (\n      isActive === true\n      && typeof activeItem !== 'undefined'\n    ) return this.config.getItemId(activeItem) === id;\n    return false;\n  }\n\n  public async activate(id: string): Promise<void> {\n    try {\n      const action = this.actionManager.composeAction('activate', id);\n      await this.actionManager.actionHub(action);\n      return Promise.resolve();\n    } catch {\n      return Promise.reject();\n    }\n  }\n\n  public async deactivate(id?: string): Promise<void> {\n    try {\n      const action = this.actionManager.composeAction('deactivate', id);\n      await this.actionManager.actionHub(action);\n      return Promise.resolve();\n    } catch {\n      return Promise.reject();\n    }\n  }\n\n  public async toggle(id?: string): Promise<void> {\n    try {\n      const action = this.actionManager.composeAction('toggle', id);\n      await this.actionManager.actionHub(action);\n      return Promise.resolve();\n    } catch {\n      return Promise.reject();\n    }\n  }\n}","import {\n  AfterActionCallback,\n  BeforeActionCallback,\n  ConditionHook,\n} from '../index';\n\nimport {\n  PolyController,\n} from './poly-controller';\n\nimport {\n  PolyAction,\n  PolyActionName,\n} from './action-manager';\n\nexport interface PolyTriggerMap {\n  trigger: HTMLElement;\n  action: PolyActionName;\n  payload?: string;\n}\n\nexport interface PolyConfig {\n  cooldown: number;\n\n  deactivateAllOnOutsideAction: boolean;\n\n  listenToKeydown: boolean;\n\n  items: NodeListOf<HTMLElement> | HTMLElement[];\n\n  isTrigger: (element: HTMLElement) => boolean;\n  mapTriggerToAction: (trigger: HTMLElement) => PolyTriggerMap | false;\n  getItemId: (item: HTMLElement) => string | false;\n\n  conditionActivate: ConditionHook<PolyAction, PolyController>;\n  conditionDeactivate: ConditionHook<PolyAction, PolyController>;\n  conditionToggle: ConditionHook<PolyAction, PolyController>;\n\n  conditionActivateAll: ConditionHook<PolyAction, PolyController>;\n  conditionDeactivateAll: ConditionHook<PolyAction, PolyController>;\n  conditionToggleAll: ConditionHook<PolyAction, PolyController>;\n\n  beforeDeactivate: BeforeActionCallback<PolyAction, PolyController>;\n  afterDeactivate: AfterActionCallback<PolyAction, PolyController>;\n\n  itemIsActive: (item: HTMLElement, context: PolyController) => boolean;\n  activateItem: (item: HTMLElement, context: PolyController) => void;\n  deactivateItem: (item: HTMLElement, context: PolyController) => void;\n\n  beforeActivate: BeforeActionCallback<PolyAction, PolyController>;\n  afterActivate: AfterActionCallback<PolyAction, PolyController>;\n\n  beforeAction: BeforeActionCallback<PolyAction, PolyController>;\n  afterAction: AfterActionCallback<PolyAction, PolyController>;\n\n  onOutsideAction: (context: PolyController) => void;\n\n  onKeydown: (event: KeyboardEvent, context: PolyController) => void;\n}\n\nexport const DEFAULT_CONFIG: PolyConfig = {\n  cooldown: 200,\n\n  deactivateAllOnOutsideAction: false,\n  listenToKeydown: false,\n\n  items: [],\n\n  isTrigger: element => element.classList.contains('js-poly-item-trigger'),\n  mapTriggerToAction: trigger => {\n    if (trigger.dataset.action === 'activate') {\n      return {\n        trigger,\n        action: 'activate',\n        payload: trigger.dataset.target,\n      };\n    } else if (trigger.dataset.action === 'deactivate') {\n      return {\n        trigger,\n        action: 'deactivate',\n        payload: trigger.dataset.target,\n      };\n    } else if (trigger.dataset.action === 'toggle') {\n      return {\n        trigger,\n        action: 'toggle',\n        payload: trigger.dataset.target,\n      };\n    } else if (trigger.dataset.action === 'activate-all') {\n      return {\n        trigger,\n        action: 'activate-all',\n      };\n    } else if (trigger.dataset.action === 'deactivate-all') {\n      return {\n        trigger,\n        action: 'deactivate-all',\n      };\n    } else if (trigger.dataset.action === 'toggle-all') {\n      return {\n        trigger,\n        action: 'toggle-all',\n      };\n    }\n    return false;\n  },\n  getItemId: item => typeof item.dataset.id === 'string' ? item.dataset.id : false,\n\n  conditionActivate: () => true,\n  conditionDeactivate: () => true,\n  conditionToggle: () => true,\n\n  conditionActivateAll: () => true,\n  conditionDeactivateAll: () => true,\n  conditionToggleAll: () => true,\n\n  beforeDeactivate: () => Promise.resolve(),\n  afterDeactivate: () => Promise.resolve(),\n\n  itemIsActive: item => item.classList.contains('js-poly-item--active'),\n  activateItem: item => item.classList.add('js-poly-item--active'),\n  deactivateItem: item => item.classList.remove('js-poly-item--active'),\n\n  beforeActivate: () => Promise.resolve(),\n  afterActivate: () => Promise.resolve(),\n\n  beforeAction: () => Promise.resolve(),\n  afterAction: () => Promise.resolve(),\n  \n  onOutsideAction: () => {},\n  onKeydown: () => {},\n};\n","import {\n  PolyController,\n} from './poly-controller';\n\nexport class ItemManager {\n\n  private controller: PolyController;\n\n  public items: HTMLElement[];\n  public activeItems: HTMLElement[];\n\n  public isActive: boolean = false;\n\n  constructor(controller: PolyController) {\n    this.controller = controller;\n\n    this.items = [];\n    this.activeItems = [];\n  }\n\n  public initialize(): this {\n    this.loadItemsFromConfig();\n    this.filterItems();\n    this.filterActiveItems();\n    return this;\n  }\n\n  public loadItemsFromConfig(): this {\n    const { config } = this.controller;      \n    if (\n      Array.isArray(config.items) === false\n      && NodeList.prototype.isPrototypeOf(config.items as NodeListOf<HTMLElement>)\n    ) {\n      this.items = Array.from(config.items as NodeListOf<HTMLElement>);\n      return this;\n    }\n    \n    if (Array.isArray(config.items) === true) {\n      this.items = config.items as HTMLElement[];\n      return this;\n    }\n\n    throw new Error('PolyController: Items not defined.');\n  }\n\n  public setItems(items: HTMLElement[] | NodeListOf<HTMLElement> | string): this {\n    if (typeof items === 'string') {\n      const results = document.querySelectorAll(items) as NodeListOf<HTMLElement>;\n      if (results !== null) this.items = Array.from(results);\n      return this;\n    }\n\n    if (NodeList.prototype.isPrototypeOf(items)) {\n      this.items = Array.from(items as NodeListOf<HTMLElement>);\n      return this;\n    }\n\n    if (Array.isArray(items) === true)\n      this.items = items as HTMLElement[];\n    return this;\n  }\n\n  public filterItems(): this {\n    this.items = this.items.filter(item => this.itemIsValid(item));\n    return this;\n  }\n\n  private filterActiveItems(): this {\n    const { config } = this.controller;\n    if (this.items.length > 0) {\n      this.items.forEach(item => {\n        if (config.itemIsActive(item, this.controller) === true) {\n          this.activeItems.push(item);\n          this.isActive = true;\n        }\n      });\n      this.controller.isReady = true;\n    }\n    return this;\n  }\n\n  public itemIsValid(item: HTMLElement): boolean {\n    const { config } = this.controller;\n    let valid: boolean = true;\n    if (config.getItemId(item) === false) valid = false;\n    return valid;\n  }\n\n  public getItemFromId(id: string): HTMLElement | false {\n    const { config } = this.controller;\n    let matchedItems: HTMLElement[] = [];\n    this.items.forEach(item => {\n      if (config.getItemId(item) === id)\n        matchedItems.push(item);\n    });\n    if (matchedItems.length > 0)\n      return matchedItems[0];\n    return false;\n  }\n\n  // @action\n\n  public activate(item: HTMLElement): boolean {\n    const { config } = this.controller;\n    if (this.activeItems.indexOf(item) === -1) {\n      config.activateItem(item, this.controller);\n      this.activeItems.push(item);\n      this.isActive = true;\n      return true;\n    }\n    return false;\n  }\n\n  public deactivate(item: HTMLElement): boolean {\n    const { config } = this.controller;\n    const index: number = this.activeItems.indexOf(item);\n    if (index !== -1) {\n      config.deactivateItem(item, this.controller);\n      this.activeItems.splice(index, 1);\n      if (this.activeItems.length === 0)\n        this.isActive = false;\n      return true;\n    }\n    return false;\n  }\n}","import {\n  DOMTraverse,\n  DragEventManager,\n} from '../../rocket';\n\nimport {\n  PolyController,\n} from './poly-controller';\n\nimport {\n  PolyActionName,\n} from './action-manager';\n\nimport {\n  PolyTriggerMap,\n} from './config';\n\nexport interface ActionConfigMapEntry {\n  action: PolyActionName;\n  configProperty: string;\n}\n\nexport type ActionConfigMapEntries = ActionConfigMapEntry[];\n\nexport class EventManager {\n  public controller: PolyController;\n\n  public dragEventManager: DragEventManager;\n\n  constructor(controller: PolyController) {\n    this.controller = controller;\n    this.dragEventManager = new DragEventManager({ onUp: this.onUp });\n  }\n\n  public initialize() {\n    this.dragEventManager.initialize()\n    if (this.controller.config.listenToKeydown === true)\n      window.addEventListener('keydown', this.eventHandlerKeydown);\n  }\n\n  private onUp = event => {\n    this.handleOutsideAction(event);\n\n    if (typeof event.downData !== 'object') return;\n\n    const targetDownElement = event.getTargetElementFromData(event.downData);\n    if (targetDownElement === false) return;\n\n    const { config } = this.controller;\n\n    const trigger = DOMTraverse.findAncestor(targetDownElement, config.isTrigger, false);\n    if (trigger === false) return;\n\n    const triggerMap = config.mapTriggerToAction(trigger as HTMLElement);\n    if (triggerMap === false) return;\n\n    this.eventHub(trigger as HTMLElement, triggerMap);\n  };\n\n  private eventHub(trigger: HTMLElement, triggerMap: PolyTriggerMap): this {\n    const { actionManager, isReady } = this.controller;\n    if (\n      isReady === true\n      && actionManager.isRunning === false\n    ) {\n      actionManager.isRunning = true;\n      const action = actionManager.composeActionFromTrigger(trigger, triggerMap);\n      actionManager.actionHub(action);\n    }\n    return this;\n  }\n\n  private handleOutsideAction = event => {\n    const { config, actionManager, itemManager } = this.controller;\n    if (\n      config.deactivateAllOnOutsideAction === true\n      && actionManager.isRunning === false\n    ) {\n      const targetDownElement = event.getTargetElementFromData(event.downData);\n      const targetUpElement = event.getTargetElementFromData(event.upData);\n      if (\n        itemManager.isActive === true\n        && targetDownElement !== false\n        && targetUpElement !== false\n        && DOMTraverse.hasAncestor(targetDownElement, itemManager.activeItems) === false\n        && DOMTraverse.hasAncestor(targetUpElement, itemManager.activeItems) === false\n        && DOMTraverse.findAncestor(targetDownElement, config.isTrigger) === false\n      ) {\n        this.controller.deactivateAll();\n        config.onOutsideAction(this.controller);\n      }\n    }\n  }\n\n  private eventHandlerKeydown = (event: KeyboardEvent) => {\n    const { config, actionManager } = this.controller;\n    if (\n      config.listenToKeydown  === true\n      && actionManager.isRunning === false\n    ) config.onKeydown(event, this.controller);\n  }\n}\n","import {\n  PolyTriggerMap,\n} from './config';\n\nimport {\n  PolyController,\n} from './poly-controller';\n\nexport type PolyActionName =\n  'activate' | 'activate-all' | 'deactivate' |\n  'deactivate-all' | 'toggle' | 'toggle-all';\n\nexport interface PolyAction {\n  name: PolyActionName;\n  targetItem?: HTMLElement;\n  targetId?: string;\n  trigger?: HTMLElement;\n}\n\nexport class ActionManager {\n  private controller: PolyController;\n\n  public isRunning: boolean = false;\n  public isNested: boolean = false;\n\n  constructor(controller: PolyController) {\n    this.controller = controller;\n  }\n\n  private activateItem({ targetItem }: PolyAction) {\n    if (typeof targetItem === 'object')\n      this.controller.itemManager.activate(targetItem);\n  }\n\n  private deactivateItem({ targetItem }: PolyAction) {\n    if (typeof targetItem === 'object')\n      this.controller.itemManager.deactivate(targetItem);\n  }\n\n  private async handleActionActivate(action: PolyAction): Promise<void> {\n    const { config } = this.controller;\n    if (\n      typeof action.targetItem === 'object'\n      && config.itemIsActive(action.targetItem, this.controller) === false\n      && config.conditionActivate(action, this.controller) === true\n    ) {\n      await config.beforeActivate(action, this.controller);\n      this.activateItem(action);\n      config.afterActivate(action, this.controller);\n      return Promise.resolve();\n    }\n    return Promise.reject();\n  }\n\n  private async handleActionDeactivate(action: PolyAction): Promise<void> {\n    const { config } = this.controller;\n    if (\n      typeof action.targetItem === 'object'\n      && config.itemIsActive(action.targetItem, this.controller) === true\n      && config.conditionDeactivate(action, this.controller) === true\n    ) {\n      await config.beforeDeactivate(action, this.controller);\n      this.deactivateItem(action);\n      config.afterDeactivate(action, this.controller);\n      return Promise.resolve();\n    }\n    return Promise.reject();\n  }\n\n  private handleActionToggle(action: PolyAction): Promise<void> {\n    const { config } = this.controller;\n    if (config.conditionToggle(action, this.controller) === true) {\n      if (\n        typeof action.targetItem === 'object'\n        && config.itemIsActive(action.targetItem, this.controller) === false\n      ) {\n        return this.handleActionActivate(action);\n      } else {\n        return this.handleActionDeactivate(action);\n      }\n    }\n    return Promise.resolve();\n  }\n\n  private handleActionActivateAll(action: PolyAction): Promise<void> {\n    const { config, itemManager } = this.controller;\n    if (\n      config.conditionActivateAll(action, this.controller) === true\n      && itemManager.items.length > 0\n    ) {\n      const actionPromises: Promise<void>[] = [];\n      itemManager.items.forEach(item => {\n        if (config.itemIsActive(item, this.controller) === false) {\n          const subAction: PolyAction = Object.assign({\n            targetItem: item,\n            targetId: config.getItemId(item),\n          }, action);\n          actionPromises.push(this.handleActionActivate(subAction));\n        }\n      });\n      return Promise\n        .all(actionPromises)\n        .then(() => Promise.resolve());\n    }\n    return Promise.reject();\n  }\n\n  private handleActionDeactivateAll(action: PolyAction): Promise<void> {\n    const { config, itemManager } = this.controller;\n    if (\n      config.conditionActivateAll(action, this.controller) === true\n      && itemManager.items.length > 0\n    ) {\n      const actionPromises: Promise<void>[] = [];\n      itemManager.items.forEach(item => {\n        if (config.itemIsActive(item, this.controller) === true) {\n          const subAction: PolyAction = Object.assign({\n            targetItem: item,\n            targetId: config.getItemId(item),\n          }, action);\n          actionPromises.push(\n            this.handleActionDeactivate(subAction)\n          );\n        }\n      });\n      return Promise\n        .all(actionPromises)\n        .then(() => Promise.resolve());\n    }\n    return Promise.reject();\n  }\n\n  private handleActionToggleAll(action: PolyAction): Promise<void> {\n    const { config, itemManager } = this.controller;\n    if (\n      config.conditionActivateAll(action, this.controller) === true\n      && itemManager.items.length > 0\n    ) {\n      const actionPromises: Promise<void>[] = [];\n      itemManager.items.forEach(item => {\n        const subAction: PolyAction = Object.assign({\n          targetItem: item,\n          targetId: config.getItemId(item),\n        }, action);\n        actionPromises.push(\n          this.handleActionToggle(subAction)\n        );\n      });\n      return Promise\n        .all(actionPromises)\n        .then(() => Promise.resolve());\n    }\n    return Promise.reject();\n  }\n\n  private handleAction(action: PolyAction): Promise<void> {\n    switch(action.name) {\n      case 'activate':\n        return this.handleActionActivate(action);\n      case 'deactivate':\n        return this.handleActionDeactivate(action);\n      case 'toggle':\n        return this.handleActionToggle(action);\n      case 'activate-all':\n        return this.handleActionActivateAll(action);\n      case 'deactivate-all':\n        return this.handleActionDeactivateAll(action);\n      case 'toggle-all':\n        return this.handleActionToggleAll(action);\n    }\n  }\n\n  private createAction(actionName: PolyActionName): PolyAction {\n    return { name: actionName };\n  }\n\n  public composeAction(actionName: PolyActionName, id?: string): PolyAction {\n    const { itemManager } = this.controller;\n\n    const action = this.createAction(actionName);\n\n    if (typeof id === 'string') {\n      const targetItem = itemManager.getItemFromId(id);\n\n      if (targetItem !== false) {\n        action.targetId = id;\n        action.targetItem = targetItem;\n      }\n    }\n    return action;\n  }\n\n  public composeActionFromTrigger(trigger: HTMLElement, triggerMap: PolyTriggerMap): PolyAction {\n    const whitelist = ['activate', 'deactivate', 'toggle'];\n    if (whitelist.indexOf(triggerMap.action) !== -1)\n      return this.composeAction(triggerMap.action, triggerMap.payload);\n    return this.composeAction(triggerMap.action);\n  }\n\n  public async actionHub(action: PolyAction, isNestedAction: boolean = false, callback?: Function): Promise<void> {\n    if (this.isRunning === true && isNestedAction === true)\n      this.isNested = true;\n    this.isRunning = true;\n\n    const { config } = this.controller;\n\n    let preAction: Promise<void>;\n\n    if (this.isNested === false) {\n      preAction = new Promise(resolve => {\n        this.isNested = true;\n        config\n          .beforeAction(action, this.controller)\n          .then(() => {\n            this.isNested = false;\n            resolve();\n          })\n          .catch(() => this.isNested = false);\n      });\n    } else {\n      preAction = Promise.resolve();\n    }\n    try {\n      await preAction;\n      await this.handleAction(action);\n      await this.endAction(callback);\n      if (isNestedAction === true && this.isNested === true)\n        this.isNested = false;\n      if (this.isNested === false)\n        config.afterAction(action, this.controller);\n    } catch {\n      await this.endAction(callback);\n      return Promise.reject();\n    }\n  }\n\n  public endAction(callback?: Function): Promise<void> {\n    if (this.isNested === false)\n      return new Promise(resolve => {\n        setTimeout(\n          () => {\n            this.isRunning = false;\n            resolve();\n          }, this.controller.config.cooldown\n        );\n      });\n    if (this.isRunning === false && this.isNested === true)\n      this.isNested = false;\n    if (typeof callback === 'function') callback();\n    return Promise.resolve();\n  }\n}\n","import {\n  DEFAULT_CONFIG,\n  PolyConfig,\n} from './config';\n\nimport {\n  ItemManager,\n} from './item-manager';\n\nimport {\n  EventManager,\n} from './event-manager';\n\nimport {\n  ActionManager,\n} from './action-manager';\n\nexport class PolyController {\n\n  public isReady: boolean = false;\n\n  public config: PolyConfig;\n\n  public itemManager: ItemManager;\n  public eventManager: EventManager;\n  public actionManager: ActionManager;\n\n  constructor(config?: Partial<PolyConfig>) {\n    this.config = Object.assign({}, DEFAULT_CONFIG);\n    this.setConfig(config);\n    this.itemManager = new ItemManager(this);\n    this.eventManager = new EventManager(this);\n    this.actionManager = new ActionManager(this);\n  }\n\n  public setConfig(config?: Partial<PolyConfig>): this {\n    if (typeof config === 'object') Object.assign(this.config, config);\n    return this;\n  }\n\n  public initialize(): this {\n    this.itemManager.initialize();\n    this.eventManager.initialize();\n    return this;\n  }\n\n  public get isActive(): boolean {\n    return this.itemManager.isActive;\n  }\n\n  public isItemActive(id: string): boolean {\n    let isActive: boolean = false;\n    this.itemManager.activeItems.forEach(item => {\n      if (this.config.getItemId(item) === id)\n        isActive = true;\n    });\n    return isActive;\n  }\n\n  public async activate(id: string): Promise<void> {\n    try {\n      const action = this.actionManager.composeAction('activate', id);\n      await this.actionManager.actionHub(action);\n      return Promise.resolve();\n    } catch {\n      return Promise.reject();\n    }\n  }\n\n  public async deactivate(id: string): Promise<void> {\n    try {\n      const action = this.actionManager.composeAction('deactivate', id);\n      await this.actionManager.actionHub(action);\n      return Promise.resolve();\n    } catch {\n      return Promise.reject();\n    }\n  }\n\n  public async toggle(id: string): Promise<void> {\n    try {\n      const action = this.actionManager.composeAction('toggle', id);\n      await this.actionManager.actionHub(action);\n      return Promise.resolve();\n    } catch {\n      return Promise.reject();\n    }\n  }\n\n  public async activateAll(): Promise<void> {\n    try {\n      const action = this.actionManager.composeAction('activate-all');\n      await this.actionManager.actionHub(action);\n      return Promise.resolve();\n    } catch {\n      return Promise.reject();\n    }\n  }\n\n  public async deactivateAll(): Promise<void> {\n    try {\n      const action = this.actionManager.composeAction('deactivate-all');\n      await this.actionManager.actionHub(action);\n      return Promise.resolve();\n    } catch {\n      return Promise.reject();\n    }\n  }\n\n  public async toggleAll(): Promise<void> {\n    try {\n      const action = this.actionManager.composeAction('toggle-all');\n      await this.actionManager.actionHub(action);\n      return Promise.resolve();\n    } catch {\n      return Promise.reject();\n    }\n  }\n}","import {\n  AfterActionCallback,\n  BeforeActionCallback,\n  ConditionHook,\n  Hook,\n} from '../index';\n\nimport {\n  SequenceController,\n} from './sequence-controller';\n\nimport {\n  SequenceAction,\n  SequenceActionName,\n} from './action-manager';\n\nexport interface SequenceTriggerMap {\n  trigger: HTMLElement;\n  action: SequenceActionName;\n  payload?: string;\n}\n\nexport interface SequenceConfig {\n  cooldown: number;\n\n  listenToKeydown: boolean;\n\n  items: NodeListOf<HTMLElement> | HTMLElement[];\n\n  isTrigger: (element: HTMLElement) => boolean;\n  mapTriggerToAction: (trigger: HTMLElement) => SequenceTriggerMap | false;\n  getItemId: (item: HTMLElement) => string | false;\n\n  conditionPrevious: ConditionHook<SequenceAction, SequenceController>;\n  conditionNext: ConditionHook<SequenceAction, SequenceController>;\n  conditionJump: ConditionHook<SequenceAction, SequenceController>;\n\n  beforeActivate: Hook<SequenceAction, SequenceController>;\n  beforeDeactivate: Hook<SequenceAction, SequenceController>;\n\n  itemIsActive: (item: HTMLElement, controller: SequenceController) => boolean;\n  activateItem: (item: HTMLElement, controller: SequenceController) => void;\n  deactivateItem: (item: HTMLElement, controller: SequenceController) => void;\n\n  afterActivate: Hook<SequenceAction, SequenceController>;\n  afterDeactivate: Hook<SequenceAction, SequenceController>;\n\n  beforeAction: BeforeActionCallback<SequenceAction, SequenceController>;\n  afterAction: AfterActionCallback<SequenceAction, SequenceController>;\n\n  onKeydown: (event: KeyboardEvent, context: SequenceController) => void;\n}\n\nexport const DEFAULT_CONFIG: SequenceConfig = {\n  cooldown: 100,\n\n  listenToKeydown: false,\n\n  items: [],\n\n  isTrigger: element => element.classList.contains('js-sequence-item-trigger'),\n  mapTriggerToAction: trigger => {\n    if (trigger.dataset.action === 'previous') {\n      return {\n        trigger,\n        action: 'previous',\n      };\n    } else if (trigger.dataset.action === 'next') {\n      return {\n        trigger,\n        action: 'next',\n      };\n    } else if (trigger.dataset.action === 'jump') {\n      return {\n        trigger,\n        action: 'jump',\n        payload: trigger.dataset.target,\n      };\n    }\n    return false;\n  },\n  getItemId: item => typeof item.dataset.id === 'string' ? item.dataset.id : false,\n\n  conditionPrevious: () => true,\n  conditionNext: () => true,\n  conditionJump: () => true,\n\n  beforeDeactivate: () => Promise.resolve(),\n  beforeActivate: () => Promise.resolve(),\n\n  itemIsActive: item => item.classList.contains('js-sequence-item--active'),\n  activateItem: item => item.classList.add('js-sequence-item--active'),\n  deactivateItem: item => item.classList.remove('js-sequence-item--active'),\n\n  afterDeactivate: () => Promise.resolve(),\n  afterActivate: () => Promise.resolve(),\n\n  beforeAction: () => Promise.resolve(),\n  afterAction: () => {},\n\n  onKeydown: () => {},\n};\n","import {\n  SequenceController,\n} from './sequence-controller';\n\nexport class ItemManager {\n  private controller: SequenceController;\n\n  public items: HTMLElement[];\n\n  public activeItem?: HTMLElement;\n  public activeIndex?: number;\n\n  public isActive: boolean = false;\n\n  constructor(controller: SequenceController) {\n    this.controller = controller;\n    this.items = [];\n  }\n\n  public initialize(): this {\n    this.loadItemsFromConfig();\n    this.filterItems();\n    this.filterActiveItems();\n    return this\n  }\n\n  public loadItemsFromConfig(): this {\n    const { config } = this.controller;\n    if (\n      Array.isArray(config.items) === false\n      && NodeList.prototype.isPrototypeOf(config.items as NodeListOf<HTMLElement>)\n    ) {\n      this.items = Array.from(config.items as NodeListOf<HTMLElement>);\n      return this;\n    }\n    \n    if (Array.isArray(config.items) === true) {\n      this.items = config.items as HTMLElement[];\n      return this;\n    }\n    throw new Error('SequenceController: Items not defined.');\n  }\n\n  public filterItems(): this {\n    this.items = this.items.filter(item => this.itemIsValid(item));\n    return this;\n  }\n\n  private filterActiveItems(): this {\n    const { config } = this.controller;\n    if (this.items.length > 0) {\n      this.items.forEach((item, index) => {\n        if (config.itemIsActive(item, this.controller) === true) {\n          if (this.isActive === false) {\n            this.activeIndex = index;\n            this.activeItem = item;\n            this.isActive = true;\n          } else {\n            config.deactivateItem(item, this.controller);\n          }\n        }\n      });\n      this.controller.isReady = true;\n    }\n    return this;\n  }\n\n  public itemIsValid(item: HTMLElement): boolean {\n    const { config } = this.controller;\n    let valid: boolean = true;\n    if (typeof config.getItemId(item) !== 'string')\n      valid = false;\n    return valid;\n  }\n\n  public getItemFromId(id: string): HTMLElement | false {\n    const { config } = this.controller;\n    let matchedItems: HTMLElement[] = [];\n    this.items.forEach(item => {\n      if (config.getItemId(item) === id)\n        matchedItems.push(item);\n    });\n    if (matchedItems.length > 0)\n      return matchedItems[0];\n    return false;\n  }\n}\n","import {\n  DOMTraverse,\n  DragEventManager,\n} from '../../rocket';\n\nimport {\n  SequenceController,\n} from './sequence-controller';\n\nimport {\n  SequenceTriggerMap,\n} from './config';\n\nimport {\n  SequenceActionName,\n} from './action-manager';\n\nexport interface ActionConfigMapEntry {\n  configProperty: string;\n  action: SequenceActionName;\n}\n\nexport type ActionConfigMapEntries = ActionConfigMapEntry[];\n\nexport class EventManager {\n  public controller: SequenceController;\n\n  public dragEventManager: DragEventManager;\n\n  constructor(controller: SequenceController) {\n    this.controller = controller;\n    this.dragEventManager = new DragEventManager({ onUp: this.onUp });\n  }\n\n  public initialize(): this {\n    this.dragEventManager.initialize()\n    if (this.controller.config.listenToKeydown === true)\n      window.addEventListener('keydown', this.eventHandlerKeydown);\n    return this;\n  }\n\n  private onUp = event => {\n    if (typeof event.downData !== 'object') return;\n\n    const targetDownElement = event.getTargetElementFromData(event.downData);\n    if (targetDownElement === false) return;\n\n    const { config } = this.controller;\n\n    const trigger = DOMTraverse.findAncestor(targetDownElement, config.isTrigger, false);\n    if (trigger === false) return;\n\n    const triggerMap = config.mapTriggerToAction(trigger as HTMLElement);\n    if (triggerMap === false) return;\n\n    this.eventHub(trigger as HTMLElement, triggerMap);\n  }\n\n  private eventHub(trigger: HTMLElement, triggerMap: SequenceTriggerMap): this {\n    const { actionManager, isReady } = this.controller;\n    if (\n      isReady === true\n      && actionManager.isRunning === false\n    ) {\n      actionManager.isRunning = true;\n      const action = actionManager.composeActionFromTrigger(trigger, triggerMap);\n      actionManager.actionHub(action);\n    }\n    return this;\n  }\n\n  private eventHandlerKeydown = (event: KeyboardEvent) => {\n    const { config, actionManager } = this.controller;\n    if (\n      config.listenToKeydown === true\n      && actionManager.isRunning === false\n    ) config.onKeydown(event, this.controller);\n  }\n}\n","import {\n  StringUtil,\n} from '../../rocket';\n\nimport {\n  SequenceTriggerMap,\n} from './config';\n\nimport {\n  SequenceController,\n} from './sequence-controller';\n\nexport type SequenceActionName = 'previous' | 'next' | 'jump';\n\nexport interface SequenceAction {\n  name: SequenceActionName;\n  currentItem?: HTMLElement;\n  nextItem?: HTMLElement;\n  nextItemIndex?: number;\n  nextItemId?: string;\n  trigger?: HTMLElement;\n}\n\nexport class ActionManager {\n  private controller: SequenceController;\n\n  public isRunning: boolean = false;\n  public isNested: boolean = false;\n\n  constructor(controller: SequenceController) {\n    this.controller = controller;\n  }\n\n  private async completeAction(action: SequenceAction): Promise<void> {\n    const { config, itemManager } = this.controller;\n    const actionNameString = StringUtil.upperCaseFirstLetter(action.name);\n    if (\n      itemManager.activeItem !== action.nextItem\n      && config[`condition${actionNameString}`](action, this) === true\n    ) {\n      await config.beforeDeactivate(action, this.controller);\n      this.deactivate();\n      await config.afterDeactivate(action, this.controller);\n      await config.beforeActivate(action, this.controller);\n      this.activate(action);\n      await config.afterActivate(action, this.controller);\n    }\n    return Promise.resolve();\n  }\n\n  private deactivate(): this {\n    const { config, itemManager } = this.controller;\n    itemManager.items.forEach(item => config.deactivateItem(item, this.controller));\n    itemManager.activeItem = undefined;\n    itemManager.activeIndex = undefined;\n    itemManager.isActive = false;\n    return this;\n  }\n\n  private activate({nextItem, nextItemIndex}: SequenceAction): this {\n    const { config, itemManager } = this.controller;\n    if (typeof nextItem === 'object') {\n      config.activateItem(nextItem, this.controller);\n      itemManager.activeItem = nextItem;\n      itemManager.activeIndex = nextItemIndex;\n      itemManager.isActive = true;\n    }\n    return this;\n  }\n\n  private setActionTargetPrevious(action: SequenceAction): SequenceAction {\n    const { itemManager } = this.controller;\n    if (typeof itemManager.activeIndex === 'number') {\n      let index: number;\n      if (itemManager.activeIndex - 1 >= 0) {\n        index = itemManager.activeIndex - 1;\n      } else {\n        index = itemManager.items.length - 1;\n      }\n      action.nextItem = itemManager.items[index];\n      action.nextItemIndex = index;\n    }\n    return action;\n  }\n\n  private setActionTargetNext(action: SequenceAction): SequenceAction {\n    const { itemManager } = this.controller;\n    if (typeof itemManager.activeIndex === 'number') {\n      let index: number;\n      if (itemManager.activeIndex + 1 >= itemManager.items.length) {\n        index = 0;\n      } else {\n        index = itemManager.activeIndex + 1;\n      }\n      action.nextItem = itemManager.items[index];\n      action.nextItemIndex = index;\n    }\n    return action;\n  }\n\n  private setActionTargetJump(action: SequenceAction): SequenceAction {\n    const { itemManager } = this.controller;\n    if (typeof action.nextItemId === 'string') {\n      const item = itemManager.getItemFromId(action.nextItemId);\n      if (item !== false) {\n        action.nextItem = item;\n        action.nextItemIndex = itemManager.items.indexOf(action.nextItem);\n      }\n    }\n    return action;\n  }\n\n  public createAction(actionName: SequenceActionName): SequenceAction {\n    const { itemManager } = this.controller;\n    return {\n      name: actionName,\n      currentItem: itemManager.activeItem,\n    };\n  }\n\n  public composeAction(actionName: SequenceActionName, id?: string): SequenceAction {\n    const action = this.createAction(actionName);\n    if (typeof id === 'string')\n      action.nextItemId = id;\n    return action;\n  }\n\n  public composeActionFromTrigger(trigger: HTMLElement, triggerMap: SequenceTriggerMap): SequenceAction {\n    const action = this.createAction(triggerMap.action);\n    action.nextItemId = triggerMap.payload;\n    action.trigger = trigger;\n    return action;\n  }\n\n  public async actionHub(action: SequenceAction, isNestedAction: boolean = false): Promise<void> {\n    if (this.isRunning === true && isNestedAction === true)\n      this.isNested = true;\n\n    this.isRunning = true;\n\n    const actionNameString: string = StringUtil.upperCaseFirstLetter(action.name);\n    this[`setActionTarget${actionNameString}`](action);\n\n    const { config } = this.controller;\n\n    let preAction: Promise<void>;\n    if (this.isNested === false) {\n      preAction = new Promise(resolve => {\n        this.isNested = true;\n        config.beforeAction(action, this.controller)\n          .then(() => {\n            this.isNested = false;\n            resolve();\n          })\n          .catch(() => this.isNested = false);\n      });\n    } else {\n      preAction = Promise.resolve();\n    }\n\n    try {\n      await preAction;\n      await this.completeAction(action);\n      await this.endAction();\n      if (isNestedAction === true && this.isNested === true)\n        this.isNested = false;\n      if (this.isNested === false)\n        config.afterAction(action, this.controller);\n    } catch {\n      await this.endAction();\n      return Promise.reject();\n    }\n  }\n\n  public endAction(): Promise<void> {\n    if (this.isNested === false) {\n      return new Promise(resolve => {\n        setTimeout(\n          () => {\n            this.isRunning = false;\n            resolve();\n          }, this.controller.config.cooldown\n        );\n      });\n    }\n    if (this.isRunning === false && this.isNested === true)\n      this.isNested = false;\n    return Promise.resolve();\n  }\n}\n","import {\n  DEFAULT_CONFIG,\n  SequenceConfig,\n} from './config'\n\nimport {\n  ItemManager,\n} from './item-manager'\n\nimport {\n  EventManager,\n} from './event-manager'\n\nimport {\n  ActionManager,\n} from './action-manager'\n\nexport class SequenceController {\n\n  public config: SequenceConfig;\n\n  public itemManager: ItemManager;\n  public eventManager: EventManager;\n  public actionManager: ActionManager;\n\n  public isReady: boolean = false;\n\n  constructor(config?: Partial<SequenceConfig>) {\n    this.config = Object.assign({}, DEFAULT_CONFIG);\n    this.setConfig(config);\n    this.itemManager = new ItemManager(this);\n    this.eventManager = new EventManager(this);\n    this.actionManager = new ActionManager(this);\n  }\n\n  public setConfig(config?: Partial<SequenceConfig>): this {\n    if (typeof config === 'object') Object.assign(this.config, config);\n    return this;\n  }\n\n  public initialize(): this {\n    this.itemManager.initialize();\n    this.eventManager.initialize();\n    return this;\n  }\n\n  public get isActive(): boolean {\n    return this.itemManager.isActive;\n  }\n\n  public isItemActive(id: string): boolean {\n    const { activeItem } = this.itemManager;\n    if (typeof activeItem == 'object')\n      return this.config.getItemId(activeItem) === id;\n    return false;\n  }\n\n  public async previous(): Promise<void> {\n    try {\n      const action = this.actionManager.composeAction('previous');\n      await this.actionManager.actionHub(action);\n      return Promise.resolve();\n    } catch {\n      return Promise.reject();\n    }\n  }\n\n  public async next(): Promise<void> {\n    try {\n      const action = this.actionManager.composeAction('next');\n      await this.actionManager.actionHub(action);\n      return Promise.resolve();\n    } catch {\n      return Promise.reject();\n    }\n  }\n\n  public async jump(id: string): Promise<void> {\n    try {\n      const action = this.actionManager.composeAction('jump', id);\n      await this.actionManager.actionHub(action);\n      return Promise.resolve();\n    } catch {\n      return Promise.reject();\n    }\n  }\n}\n","export interface RepeaterConfig {\n  useAnimationFrame: boolean;\n  timeout: boolean;\n  timeoutDelay: number;\n  frequency: number;\n  condition: (context: Repeater) => boolean;\n  onRepeat: (context: Repeater) => void;\n  onStart: (context: Repeater) => void;\n  onEnd: (context: Repeater) => void;\n}\n\nconst REPEATER_DEFAULT_CONFIG: RepeaterConfig = {\n  useAnimationFrame: true,\n  timeout: true,\n  timeoutDelay: 10,\n  frequency: 24,\n  condition: () => true,\n  onRepeat: () => { },\n  onStart: () => { },\n  onEnd: () => { },\n};\n\nexport class Repeater {\n  public config: RepeaterConfig;\n\n  public duration?: number;\n  public startTime?: number;\n  public endTime?: number;\n\n  public intervalId: number = 0;\n  public timeoutId: number = 0;\n  public animationFrameId: number = 0;\n\n  public isActive: boolean = false;\n  public count: number = 0;\n\n  constructor(config?: Partial<RepeaterConfig>) {\n    this.config = Object.assign({}, REPEATER_DEFAULT_CONFIG);\n    this.setConfig(config);\n  }\n\n  public setConfig(config?: Partial<RepeaterConfig>): this {\n    if (typeof config === 'object') Object.assign(this.config, config);\n    return this;\n  }\n\n  public startTimeout(): this {\n    this.timeoutId = setTimeout(\n      () => this.stop(),\n      1000 * this.config.timeoutDelay\n    );\n    return this;\n  }\n\n  public resetTimeout(): this {\n    clearTimeout(this.timeoutId);\n    this.startTimeout();\n    return this;\n  }\n\n  private onRepeat(): this {\n    this.count++;\n    if (this.config.useAnimationFrame === true) {\n      this.animationFrameId = window.requestAnimationFrame(\n        () => this.config.onRepeat(this)\n      );\n    } else {\n      this.config.onRepeat(this);\n    }\n    return this;\n  }\n\n  public forceStart(): this {\n    if (this.isActive === true) this.stop();\n    this.start();\n    return this;\n  }\n\n  public start(): this {\n    if (\n      this.isActive === false\n      && this.config.condition(this) === true\n    ) {\n      this.isActive = true;\n      this.count = 0;\n      this.startTime = Date.now();\n      this.config.onStart(this);\n      this.intervalId = setInterval(\n        () => this.onRepeat(),\n        1000 / this.config.frequency\n      );\n      if (\n        this.config.timeout === true\n        && typeof this.config.timeoutDelay === 'number'\n        && this.config.timeoutDelay > 0\n      ) this.startTimeout();\n    }\n    return this;\n  }\n\n  public stop(): this {\n    if (this.isActive === true) {\n      cancelAnimationFrame(this.animationFrameId);\n      clearTimeout(this.timeoutId);\n      clearInterval(this.intervalId);\n      this.endTime = Date.now();\n      if (typeof this.startTime === 'number')\n        this.duration = this.endTime - this.startTime;\n      this.isActive = false;\n      this.config.onEnd(this);\n    }\n    return this;\n  }\n}\n","import {\n  StackUpItem,\n} from './stack-up';\n\nexport type StackUpLayoutOption = 'ordinal' | 'optimized';\n\nexport interface StackUpContainerScaleData {\n  width: number;\n  height: number;\n  currentWidth: number;\n  currentHeight: number;\n  maxWidth: number;\n  maxHeight: number;\n  requireScale: boolean;\n}\n\nexport interface StackUpConfig {\n  boundary: HTMLElement | Window;\n\n  containerSelector: string;\n  itemsSelector: string;\n\n  container?: HTMLElement;\n  items?: HTMLElement[];\n\n  columnWidth: number;\n  numberOfColumns: number;\n  gutter: number;\n  \n  layout: StackUpLayoutOption;\n  isFluid: boolean;\n  \n  debounceResizeWait: number;\n  moveInSequence: boolean;\n\n  scaleContainerInitial: (container: HTMLElement, data: StackUpContainerScaleData) => Promise<void>;\n  scaleContainerFinal: (container: HTMLElement, data: StackUpContainerScaleData) => Promise<void>;\n  moveItem: (item: StackUpItem) => Promise<void>;\n  beforeTransition: (container: StackUpContainerScaleData, items: StackUpItem[]) => Promise<void>;\n  beforeMove: (items: StackUpItem[]) => Promise<void>;\n  afterMove: (items: StackUpItem[]) => Promise<void>;\n  afterTransition: () => void;\n}\n\nexport const STACKUP_DEFAULT_CONFIG: StackUpConfig = {\n  boundary: window,\n\n  containerSelector: '.stackUp__container',\n  itemsSelector: '.stackUp__item',\n\n  container: undefined,\n  items: undefined,\n\n  columnWidth: 320,\n  numberOfColumns: 3,\n  gutter: 20,\n\n  layout: 'ordinal',\n  isFluid: true,\n\n  debounceResizeWait: 350,\n  moveInSequence: false,\n\n  scaleContainerInitial: (container, { width, height }) => {\n    container.style.width = `${width}px`;\n    container.style.height = `${height}px`;\n    return Promise.resolve();\n  },\n  scaleContainerFinal: (container, { width, height }) => {\n    container.style.width = `${width}px`;\n    container.style.height = `${height}px`;\n    return Promise.resolve();\n  },\n\n  moveItem: ({ item, left, top }) => {\n    item.style.left = `${left}px`;\n    item.style.top = `${top}px`;\n    return Promise.resolve();\n  },\n\n  beforeTransition: (container, items) => Promise.resolve(),\n  beforeMove: (items) => Promise.resolve(),\n\n  afterMove: (items) => Promise.resolve(),\n  afterTransition: () => {},\n};","import {\n  StringUtil,\n} from '../rocket';\n\nimport {\n  StackUp,\n  StackUpItem,\n} from './stack-up';\n\nimport {\n  StackUpConfig,\n} from './stack-up-config';\n\nexport type StackUpLayoutOption = 'ordinal' | 'optimized';\n\nexport class StackUpLayout {\n\n  public stackUp: StackUp;\n  public layoutOption: StackUpLayoutOption;\n\n  public columnPointer: number = 0;\n  public stack;\n\n  constructor(stackUp: StackUp, layoutOption: StackUpLayoutOption) {\n    this.stackUp = stackUp;\n    this.layoutOption = layoutOption;\n    this.stack = [];\n  }\n\n  public setup() {\n    this.stack = [];\n    for (let i = 0; i < this.stackUp.numberOfColumns; i++) {\n      if (this.layoutOption === 'ordinal') {\n        this.stack[i] = 0;\n      } else if (this.layoutOption === 'optimized') { \n        this.stack[i] = [i, 0];\n      }\n    }\n  }\n\n  public loop() {\n    for (let i = 0; i < this.stackUp.items.length; i++)\n      this.plot(i);\n  }\n\n  public plot(itemIndex: number) {\n    this[`plot${StringUtil.upperCaseFirstLetter(this.layoutOption)}`](itemIndex);\n  }\n\n  private plotOrdinal(itemIndex: number) {\n    const config: StackUpConfig = this.stackUp.config;\n    this.stackUp.updatePreviousContainerSize();\n\n    const item: StackUpItem = this.stackUp.items[itemIndex];\n    item.currentLeft = item.left;\n    item.currentTop = item.top;\n\n    item.left = config.gutter + (config.columnWidth + config.gutter) * this.columnPointer;\n    item.top = config.gutter + this.stack[this.columnPointer];\n\n    this.stack[this.columnPointer] += item.height + config.gutter;\n\n    if (this.stack[this.columnPointer] > this.stackUp.containerHeight)\n      this.stackUp.containerHeight = this.stack[this.columnPointer];\n\n    this.columnPointer++;\n\n    if (this.columnPointer >= this.stackUp.numberOfColumns)\n      this.columnPointer = 0;\n  }\n\n  private plotOptimized(itemIndex: number) {\n    const config: StackUpConfig = this.stackUp.config;\n    this.stackUp.updatePreviousContainerSize();\n\n    const item: StackUpItem = this.stackUp.items[itemIndex];\n    item.currentLeft = item.left;\n    item.currentTop = item.top;\n\n    item.left = config.gutter + (config.columnWidth + config.gutter) * this.stack[0][0];\n    item.top = config.gutter + this.stack[0][1];\n\n    this.stack[0][1] += item.height + config.gutter;\n\n    if (this.stack[0][1] > this.stackUp.containerHeight)\n      this.stackUp.containerHeight = this.stack[0][1];\n\n    this.stack.sort((a: number[], b: number[]) => a[1] - b[1]);\n\n    this.columnPointer++;\n\n    if (this.columnPointer >= this.stackUp.numberOfColumns)\n      this.columnPointer = 0;\n  }\n}","import {\n  DOMOffset,\n  DOMStyle,\n  Util,\n  Viewport,\n} from '../rocket';\n\nimport {\n  STACKUP_DEFAULT_CONFIG,\n  StackUpConfig,\n  StackUpContainerScaleData,\n} from './stack-up-config';\n\nimport {\n  StackUpLayout,\n} from './stack-up-layout';\n\nexport interface StackUpItem {\n  item: HTMLElement;\n  height: number;\n  left: number;\n  top: number;\n  currentLeft: number;\n  currentTop: number;\n  requireMove: boolean;\n}\n\nexport class StackUp {\n\n  public boundaryHeight: number = 0;\n  public boundaryWidth: number = 0;\n\n  public containerWidth: number = 0;\n  public containerHeight: number = 0;\n  \n  public previousContainerWidth: number = 0;\n  public previousContainerHeight: number = 0;\n\n  public items: StackUpItem[] = [];\n  public numberOfColumns: number = 0;\n\n  public config: StackUpConfig;\n  public layout: StackUpLayout;\n\n  public resizeDebounceTimeout?: number;\n\n  public isTransitioning: boolean = false;\n\n  private doneTransitioning?: Function;\n\n  constructor(config?: Partial<StackUpConfig>) {\n    this.config = Object.assign({}, STACKUP_DEFAULT_CONFIG);\n    this.setConfig(config);\n    this.layout = new StackUpLayout(this, this.config.layout);\n    return this;\n  }\n\n  public setConfig(config?: Partial<StackUpConfig>): this {\n    if (typeof config === 'object') Object.assign(this.config, config);\n    return this;\n  }\n\n  public initialize(): Promise<void> {\n    window.addEventListener('resize', this.eventHandlerResize);\n    this.boundaryUpdate();\n\n    // Update grid selectors - reset\n    this.getElements();\n    this.populateItems();\n\n    // Update grid selectors - stacking\n    this.updateNumberOfColumns();\n    this.applyLayout();\n    return this.draw();\n  }\n\n  private getElements(): this {\n    this.getContainer();\n    this.getItems();\n    return this;\n  }\n\n  private getContainer(): this {\n    if (\n      typeof this.config.container === 'undefined'\n      && typeof this.config.containerSelector === 'string'\n    ) {\n      const container = document.querySelector(this.config.containerSelector);\n      if (container !== null) {\n        this.config.container = <HTMLElement>container;\n        return this;\n      }\n      throw new Error('StackUp: Fail to get container.');\n    }\n    if (typeof this.config.container === 'object') return this;\n    throw new Error('StackUp: Container not defined.');\n  }\n\n  private getItems(): this {\n    if (\n      typeof this.config.items === 'undefined'\n      && typeof this.config.itemsSelector === 'string'\n    ) {\n      const items: NodeListOf<HTMLElement> = document.querySelectorAll(this.config.itemsSelector);\n      if (items !== null) {\n        this.config.items = Array.from(items);\n        return this;\n      }\n      throw new Error('StackUp: Fail to get items.');\n    }\n    if (typeof this.config.items === 'object') return this;\n    throw new Error('StackUp: items not defined.');\n  }\n\n  private boundaryUpdate(): this {\n    if (\n      this.config.boundary !== window\n      && typeof this.config.boundary === 'object'\n      && this.config.boundary !== null\n    ) {\n      const boundary = <HTMLElement>this.config.boundary;\n      let horizontal = 0, vertical = 0;\n      if (DOMStyle.getStyleValue(boundary, 'boxSizing') === 'border-box') {\n        const horizontalBorderWidths = DOMStyle.getHorizontalBorderWidths(boundary);\n        const horizontalPaddings = DOMStyle.getHorizontalPaddings(boundary);\n        const verticalBorderWidths = DOMStyle.getVerticalBorderWidths(boundary);\n        const verticalPaddings = DOMStyle.getVerticalPaddings(boundary);\n        horizontal = horizontalBorderWidths + horizontalPaddings;\n        vertical = verticalBorderWidths + verticalPaddings;\n      }\n      this.boundaryWidth = boundary.offsetWidth - horizontal;\n      this.boundaryHeight = boundary.offsetHeight - vertical;\n    } else {\n      this.boundaryWidth = Viewport.width;\n      this.boundaryHeight = Viewport.height;\n    }\n    return this;\n  }\n\n  private resizeDebounce = (fn: Function, delay: number): void => {\n    clearTimeout(this.resizeDebounceTimeout);\n    this.resizeDebounceTimeout = window.setTimeout(fn, delay);\n  }\n\n  private eventHandlerResizeComplete = (): void => {\n    if (\n      this.calculateNumberOfColumns() !== this.numberOfColumns\n      && this.config.isFluid === true\n    ) this.restack();\n  }\n\n  private eventHandlerResize = (event: Event): void => {\n    this.boundaryUpdate();\n    this.resizeDebounce(\n      this.eventHandlerResizeComplete,\n      this.config.debounceResizeWait\n    );\n  }\n\n  // Update grid selectors. (1) - reset\n  // Required stack-up.initialize to be called first.\n\n  public updatePreviousContainerSize(): this {\n    if (typeof this.config.container === 'object') {\n      this.previousContainerWidth = this.config.container.offsetWidth;\n      this.previousContainerHeight = this.config.container.offsetHeight;\n    }\n    return this;\n  }\n\n  // This only updates this.items, it does not update the selectors\n\n  private appendItem(item: HTMLElement): this {\n    if (typeof this.config.container === 'object') {\n      const { x: left, y: top } = DOMOffset.getElementOffsetFrom(item, this.config.container);\n      this.items.push(\n        {\n          item,\n          height: item.offsetHeight,\n          left, top,\n          currentLeft: left,\n          currentTop : top,\n          requireMove: false,\n        }\n      );\n    }\n    return this;\n  }\n\n  // Populate grid items (2) - reset\n  private populateItems(): this {\n    // Clear items before populating\n    this.items = [];\n    if (typeof this.config.items !== 'undefined')\n      this.config.items.forEach(item => this.appendItem(item));\n    return this;\n  }\n\n  private calculateNumberOfColumns(): number {\n    let numberOfColumns: number;\n\n    if (this.config.isFluid === true) {\n      numberOfColumns = Math.floor(\n        (this.boundaryWidth - this.config.gutter) /\n        (this.config.columnWidth + this.config.gutter)\n      );\n    } else {\n      numberOfColumns = this.config.numberOfColumns;\n    }\n\n    if (numberOfColumns > this.items.length)\n      numberOfColumns = this.items.length;\n\n    if (\n      this.items.length === 0\n      || numberOfColumns <= 0\n    ) numberOfColumns = 1;\n    \n    return numberOfColumns;\n  }\n\n  // Update numberOfColumns (3) - stack\n  private updateNumberOfColumns(): this {\n    this.numberOfColumns = this.calculateNumberOfColumns();\n    return this;\n  }\n\n  // Scale container and move items (5) - stack\n  public async draw(): Promise<void> {\n    if (\n      this.isTransitioning === false\n      && typeof this.config.container === 'object'\n    ) {\n      this.isTransitioning = true;\n\n      this.containerWidth = (this.config.columnWidth + this.config.gutter) * this.numberOfColumns;\n\n      const finalHeight = this.containerHeight + this.config.gutter;\n      const finalWidth = this.containerWidth + this.config.gutter;\n\n      const scaleData: StackUpContainerScaleData = this.composeContainerScaleData(finalWidth, finalHeight);\n      this.prepareItemsBeforeMove();\n      try {\n        await this.config.beforeTransition(scaleData, this.items);\n        await this.config.scaleContainerInitial(this.config.container, scaleData);\n        await this.config.beforeMove(this.items);\n        await this.moveItems();\n        await this.config.afterMove(this.items);\n        this.updatePreviousContainerSize();\n        await this.config.scaleContainerFinal(\n          this.config.container,\n          this.composeContainerScaleData(finalWidth, finalHeight)\n        );\n        this.endTransition();\n        return Promise.resolve();\n      } catch {\n        this.endTransition();\n        return Promise.reject();\n      }\n    }\n    return Promise.resolve();\n  }\n\n  private moveItems(): Promise<void> {\n    const moveItem: (item: StackUpItem) => Promise<void> = item => {\n      return this.config.moveItem(item);\n    }\n    if (this.config.moveInSequence === true) {\n      return Util.promiseEach<StackUpItem>(this.items, moveItem);\n    } else {\n      const moveItems: Promise<void>[] = [];\n      this.items.forEach(item => {\n        moveItems.push(moveItem(item));\n      });\n      return Promise\n        .all(moveItems)\n        .then(() => Promise.resolve());\n    }\n  }\n\n  private endTransition(): this {\n    this.updateItemsCurrentOffset();\n    this.isTransitioning = false;\n    this.config.afterTransition();\n    if (typeof this.doneTransitioning === 'function') {\n      this.doneTransitioning();\n      this.doneTransitioning = undefined;\n    }\n    return this;\n  }\n\n  private composeContainerScaleData(width: number, height: number): StackUpContainerScaleData  {\n    const maxWidth = Math.max(this.previousContainerWidth,  width);\n    const maxHeight = Math.max(this.previousContainerHeight, height);\n    const requireScale = (\n      this.previousContainerWidth !== width\n      || this.previousContainerHeight !== height\n    );\n    return {\n      width, height,\n      currentWidth : this.previousContainerWidth,\n      currentHeight: this.previousContainerHeight,\n      maxWidth, maxHeight,\n      requireScale,\n    };\n  }\n\n  private prepareItemsBeforeMove(): this {\n    this.items.forEach(item => {\n      const requireMove: boolean = (\n        item.currentLeft !== item.left\n        || item.currentTop  !== item.top\n      );\n      item.requireMove = requireMove;\n    });\n    return this;\n  }\n\n  private updateItemsCurrentOffset(): this {\n    this.items.forEach(item => {\n      item.currentLeft = item.left;\n      item.currentTop = item.top;\n    });\n    return this;\n  }\n\n  //stack (4)\n  //layout updates the containerHeight and updates items\n\n  private applyLayout(): this {\n    this.layout.setup();\n    if (this.items.length)\n      this.layout.loop();\n    return this;\n  }\n\n  private resetLayout(): this {\n    this.containerHeight = 0;\n    this.layout.columnPointer = 0;\n    return this;\n  }\n\n  // This should be called after if any the item(s)\n  // have been modified, added, or removed.\n  public reset(): Promise<void> {\n    return new Promise(resolve => {\n      const reset = () => {\n        this.containerWidth = 0;\n        this.containerHeight = 0;\n        this.items = [];\n        this\n          .getElements()\n          .populateItems()\n          .resetLayout()\n          .restack()\n        resolve();\n      };\n      if (this.isTransitioning === true) {\n        this.doneTransitioning = reset;\n      } else {\n        reset();\n      }\n    });\n  }\n\n  public append(items: HTMLElement | HTMLElement[]): Promise<void> {\n    return new Promise(resolve => {\n      const append = () => {\n        if (Array.isArray(items)) {\n          items.forEach(item => {\n            const itemIndex: number = this.items.length;\n            this.appendItem(item);\n            this.layout.plot(itemIndex);\n          });\n        } else {\n          const itemIndex: number = this.items.length;\n          this.appendItem(items);\n          this.layout.plot(itemIndex);\n        }\n        this\n          .draw()\n          .then(() => resolve());\n      };\n      if (this.isTransitioning === true) {\n        this.doneTransitioning = append;\n      } else {\n        append();\n      }\n    });\n  }\n\n  public restack(): Promise<void> {\n    return new Promise(resolve => {\n      const restack = () => {\n        this\n          .updateNumberOfColumns()\n          .resetLayout()\n          .applyLayout()\n          .draw();\n        resolve();\n      };\n      if (this.isTransitioning === true) {\n        this.doneTransitioning = restack;\n      } else {\n        restack();\n      }\n    });\n  }\n}\n","import {\n  StackUp,\n  StackUpItem,\n} from './stack-up';\n\nexport type StackUpLayoutOption = 'ordinal' | 'optimized';\n\nexport interface StackUpContainerScaleData {\n  width: number;\n  height: number;\n  currentWidth: number;\n  currentHeight: number;\n  maxWidth: number;\n  maxHeight: number;\n  requireScale: boolean;\n}\n\nexport interface StackUpConfig {\n  boundary: HTMLElement | Window;\n\n  getContainerElement: () => HTMLElement | null;\n  getItemElements: () => NodeListOf<HTMLElement> | HTMLElement[] | null;\n\n  columnWidth: number;\n  numberOfColumns: number;\n  gutter: number;\n  \n  layout: StackUpLayoutOption;\n  isFluid: boolean;\n  \n  debounceResizeWait: number;\n  moveInSequence: boolean;\n\n  beforeInitialize: (stackup: StackUp) => Promise<void>;\n\n  beforeTransition: (container: StackUpContainerScaleData, items: StackUpItem[], stackup: StackUp) => Promise<void>;\n  afterTransition: () => void;\n\n  scaleContainerInitial: (container: HTMLElement, data: StackUpContainerScaleData, stackup: StackUp) => Promise<void>;\n  scaleContainerFinal: (container: HTMLElement, data: StackUpContainerScaleData, stackup: StackUp) => Promise<void>;\n\n  beforeMove: (items: StackUpItem[], stackup: StackUp) => Promise<void>;\n  moveItem: (item: StackUpItem, stackup: StackUp) => Promise<void>;\n  afterMove: (items: StackUpItem[], stackup: StackUp) => Promise<void>;\n}\n\nexport const STACKUP_DEFAULT_CONFIG: StackUpConfig = {\n  boundary: window,\n\n  getContainerElement: () => null,\n  getItemElements: () => null,\n\n  columnWidth: 320,\n  numberOfColumns: 3,\n  gutter: 20,\n\n  layout: 'ordinal',\n  isFluid: true,\n\n  debounceResizeWait: 350,\n  moveInSequence: false,\n\n  beforeInitialize: () => Promise.resolve(),\n\n  beforeTransition: () => Promise.resolve(),\n  afterTransition: () => {},\n\n  scaleContainerInitial: (container, { width, height }) => {\n    container.style.width = `${width}px`;\n    container.style.height = `${height}px`;\n    return Promise.resolve();\n  },\n  scaleContainerFinal: (container, { width, height }) => {\n    container.style.width = `${width}px`;\n    container.style.height = `${height}px`;\n    return Promise.resolve();\n  },\n\n  beforeMove: () => Promise.resolve(),\n  moveItem: ({ item, left, top }) => {\n    item.style.left = `${left}px`;\n    item.style.top = `${top}px`;\n    return Promise.resolve();\n  },\n  afterMove: () => Promise.resolve(),\n};","import {\n  StringUtil,\n} from '@nekobird/rocket';\n\nimport {\n  StackUp,\n  StackUpItem,\n} from './stack-up';\n\nimport {\n  StackUpConfig,\n} from './stack-up-config';\n\nexport type StackUpLayoutOption = 'ordinal' | 'optimized';\n\nexport class StackUpLayout {\n\n  public stackUp: StackUp;\n  public layoutOption: StackUpLayoutOption;\n\n  public columnPointer: number = 0;\n  public stack;\n\n  constructor(stackUp: StackUp, layoutOption: StackUpLayoutOption) {\n    this.stackUp = stackUp;\n    this.layoutOption = layoutOption;\n    this.stack = [];\n  }\n\n  public setup() {\n    this.stack = [];\n    for (let i = 0; i < this.stackUp.numberOfColumns; i++) {\n      if (this.layoutOption === 'ordinal') {\n        this.stack[i] = 0;\n      } else if (this.layoutOption === 'optimized') { \n        this.stack[i] = [i, 0];\n      }\n    }\n  }\n\n  public loop() {\n    for (let i = 0; i < this.stackUp.items.length; i++)\n      this.plot(i);\n  }\n\n  public plot(itemIndex: number) {\n    this[`plot${StringUtil.upperCaseFirstLetter(this.layoutOption)}`](itemIndex);\n  }\n\n  private plotOrdinal(itemIndex: number) {\n    const { config } = this.stackUp;\n    this.stackUp.updatePreviousContainerSize();\n\n    const item = this.stackUp.items[itemIndex];\n    item.currentLeft = item.left;\n    item.currentTop = item.top;\n\n    item.left = config.gutter + (config.columnWidth + config.gutter) * this.columnPointer;\n    item.top = config.gutter + this.stack[this.columnPointer];\n\n    this.stack[this.columnPointer] += item.height + config.gutter;\n\n    if (this.stack[this.columnPointer] > this.stackUp.containerHeight)\n      this.stackUp.containerHeight = this.stack[this.columnPointer];\n\n    this.columnPointer++;\n\n    if (this.columnPointer >= this.stackUp.numberOfColumns)\n      this.columnPointer = 0;\n  }\n\n  private plotOptimized(itemIndex: number) {\n    const { config } = this.stackUp;\n    this.stackUp.updatePreviousContainerSize();\n\n    const item = this.stackUp.items[itemIndex];\n\n    item.currentLeft = item.left;\n    item.currentTop = item.top;\n\n    item.left = config.gutter + (config.columnWidth + config.gutter) * this.stack[0][0];\n    item.top = config.gutter + this.stack[0][1];\n\n    this.stack[0][1] += item.height + config.gutter;\n\n    if (this.stack[0][1] > this.stackUp.containerHeight)\n      this.stackUp.containerHeight = this.stack[0][1];\n\n    this.stack.sort((a, b) => a[1] - b[1]);\n\n    this.columnPointer++;\n\n    if (this.columnPointer >= this.stackUp.numberOfColumns)\n      this.columnPointer = 0;\n  }\n}","import {\n  DOMOffset,\n  DOMStyle,\n  DOMUtil,\n  Util,\n  Viewport,\n} from '@nekobird/rocket';\n\nimport {\n  STACKUP_DEFAULT_CONFIG,\n  StackUpConfig,\n  StackUpContainerScaleData,\n} from './stack-up-config';\n\nimport {\n  StackUpLayout,\n} from './stack-up-layout';\n\nexport interface StackUpItem {\n  item: HTMLElement;\n\n  left: number;\n  top: number;\n  height: number;\n\n  currentLeft: number;\n  currentTop: number;\n\n  requireMove: boolean;\n}\n\nexport class StackUp {\n\n  public config: StackUpConfig;\n  public layout: StackUpLayout;\n\n  public containerElement?: HTMLElement;\n  public itemElements?: HTMLElement[];\n\n  public boundaryHeight: number = 0;\n  public boundaryWidth: number = 0;\n\n  public containerWidth: number = 0;\n  public containerHeight: number = 0;\n  \n  public previousContainerWidth: number = 0;\n  public previousContainerHeight: number = 0;\n\n  public numberOfColumns: number = 0;\n  public items: StackUpItem[] = [];\n\n  public resizeDebounceTimeout?: number;\n\n  public isTransitioning: boolean = false;\n\n  private doneTransitioning?: Function;\n\n  constructor(config?: Partial<StackUpConfig>) {\n    this.config = Object.assign({}, STACKUP_DEFAULT_CONFIG);\n    this.setConfig(config);\n    this.layout = new StackUpLayout(this, this.config.layout);\n    return this;\n  }\n\n  public setConfig(config?: Partial<StackUpConfig>): this {\n    if (typeof config === 'object') Object.assign(this.config, config);\n    return this;\n  }\n\n  public initialize(): Promise<void> {\n    return this.config\n      .beforeInitialize(this)\n      .then(() => {\n        window.removeEventListener('resize', this.eventHandlerResize);\n        window.addEventListener('resize', this.eventHandlerResize);\n    \n        this.boundaryUpdate();\n\n        // Get container and item elements and set them up.\n        this.getElements();\n        this.populateItems();\n\n        // Update layout and stack.\n        this.updateNumberOfColumns();\n        this.applyLayout();\n        return this.draw();\n      })\n      .catch(() => Promise.reject(new Error('StackUp: config.beforeInitialize promise reject.')));\n  }\n\n  private getElements(): this {\n    this.getContainerElement();\n    this.getItemElements();\n    return this;\n  }\n\n  private getContainerElement(): this {\n    const containerElement = this.config.getContainerElement();\n    if (containerElement === null) {\n      throw new Error('StackUp: Fail to get container element.');\n    } else {\n      this.containerElement = containerElement;\n    }\n    return this;\n  }\n\n  private getItemElements(): this {\n    const itemElements = this.config.getItemElements();\n    if (itemElements === null) {\n      throw new Error('StackUp: Fail to get item elements.');\n    } else {\n      if (Array.isArray(itemElements) === true) {\n        this.itemElements = itemElements as HTMLElement[];\n      } else {\n        this.itemElements = Array.from(itemElements);\n      }\n    }\n    return this;\n  }\n\n  private boundaryUpdate(): this {\n    if (\n      this.config.boundary !== window\n      && DOMUtil.isHTMLElement(this.config.boundary) === true\n    ) {\n      const boundary = this.config.boundary as HTMLElement;\n      let horizontal = 0, vertical = 0;\n      if (DOMStyle.getStyleValue(boundary, 'boxSizing') === 'border-box') {\n        const horizontalBorderWidths = DOMStyle.getHorizontalBorderWidths(boundary);\n        const horizontalPaddings = DOMStyle.getHorizontalPaddings(boundary);\n        const verticalBorderWidths = DOMStyle.getVerticalBorderWidths(boundary);\n        const verticalPaddings = DOMStyle.getVerticalPaddings(boundary);\n        horizontal = horizontalBorderWidths + horizontalPaddings;\n        vertical = verticalBorderWidths + verticalPaddings;\n      }\n      this.boundaryWidth = boundary.offsetWidth - horizontal;\n      this.boundaryHeight = boundary.offsetHeight - vertical;\n    } else {\n      this.boundaryWidth = Viewport.width;\n      this.boundaryHeight = Viewport.height;\n    }\n    return this;\n  }\n\n  private resizeDebounce = (fn: Function, delay: number): void => {\n    clearTimeout(this.resizeDebounceTimeout);\n    this.resizeDebounceTimeout = window.setTimeout(fn, delay);\n  }\n\n  private eventHandlerResizeComplete = (): void => {\n    if (\n      this.calculateNumberOfColumns() !== this.numberOfColumns\n      && this.config.isFluid === true\n    ) this.restack();\n  }\n\n  private eventHandlerResize = (event: Event): void => {\n    this.boundaryUpdate();\n    this.resizeDebounce(\n      this.eventHandlerResizeComplete,\n      this.config.debounceResizeWait\n    );\n  }\n\n  // Update grid selectors. (1) - reset\n  // Required stack-up.initialize to be called first.\n\n  public updatePreviousContainerSize(): this {\n    if (DOMUtil.isHTMLElement(this.containerElement) === true) {\n      const containerElement = this.containerElement as HTMLElement;\n      this.previousContainerWidth = containerElement.offsetWidth;\n      this.previousContainerHeight = containerElement.offsetHeight;\n    }\n    return this;\n  }\n\n  // This only updates this.items, it does not update the selectors\n\n  private appendItem(item: HTMLElement): boolean {\n    if (DOMUtil.isHTMLElement(this.containerElement) === true) {\n      const { x: left, y: top } = DOMOffset.getElementOffsetFrom(item, this.containerElement as HTMLElement);\n      this.items.push(\n        {\n          item,\n\n          left, top,\n          height: item.offsetHeight,\n\n          currentLeft: left,\n          currentTop: top,\n\n          requireMove: false,\n        }\n      );\n      return true;\n    }\n    return false;\n  }\n\n  // Populate grid items (2) - reset\n  private populateItems(): this {\n    // Clear items before populating\n    this.items = [];\n    if (Array.isArray(this.itemElements) === true) {\n      const itemElements = this.itemElements as HTMLElement[];\n      itemElements.forEach(item => {\n        if (DOMUtil.isHTMLElement(item) === true)\n          this.appendItem(item);\n      });\n    }\n    return this;\n  }\n\n  private calculateNumberOfColumns(): number {\n    let numberOfColumns: number;\n\n    if (this.config.isFluid === true) {\n      numberOfColumns = Math.floor(\n        (this.boundaryWidth - this.config.gutter) /\n        (this.config.columnWidth + this.config.gutter)\n      );\n    } else {\n      numberOfColumns = this.config.numberOfColumns;\n    }\n\n    if (numberOfColumns > this.items.length)\n      numberOfColumns = this.items.length;\n\n    if (\n      this.items.length === 0\n      || numberOfColumns <= 0\n    ) numberOfColumns = 1;\n    \n    return numberOfColumns;\n  }\n\n  // Update numberOfColumns (3) - stack\n  private updateNumberOfColumns(): this {\n    this.numberOfColumns = this.calculateNumberOfColumns();\n    return this;\n  }\n\n  // Scale container and move items (5) - stack\n  public async draw(): Promise<void> {\n    if (\n      this.isTransitioning === false &&\n      DOMUtil.isHTMLElement(this.containerElement) === true\n    ) {\n      const containerElement = this.containerElement as HTMLElement;\n\n      this.isTransitioning = true;\n\n      this.containerWidth = (this.config.columnWidth + this.config.gutter) * this.numberOfColumns;\n\n      const finalHeight = this.containerHeight + this.config.gutter;\n      const finalWidth = this.containerWidth + this.config.gutter;\n\n      let containerScaleData = this.composeContainerScaleData(finalWidth, finalHeight);\n      this.prepareItemsBeforeMove();\n      try {\n        await this.config.beforeTransition(containerScaleData, this.items, this);\n        await this.config.scaleContainerInitial(containerElement, containerScaleData, this);\n        await this.config.beforeMove(this.items, this);\n        await this.moveItems();\n        await this.config.afterMove(this.items, this);\n        this.updatePreviousContainerSize();\n        containerScaleData = this.composeContainerScaleData(finalWidth, finalHeight);\n        await this.config.scaleContainerFinal(containerElement, containerScaleData, this);\n        this.endTransition();\n        return Promise.resolve();\n      } catch {\n        this.endTransition();\n        return Promise.reject(new Error('StackUp.draw: Fail to transition items and container.'));\n      }\n    }\n    return Promise.resolve();\n  }\n\n  private moveItems(): Promise<void> {\n    const moveItem: (item: StackUpItem) => Promise<void> = item => {\n      return this.config.moveItem(item, this);\n    };\n    if (this.config.moveInSequence === true) {\n      return Util.promiseEach<StackUpItem>(this.items, moveItem);\n    } else {\n      const moveItems: Promise<void>[] = [];\n      this.items.forEach(item => {\n        moveItems.push(moveItem(item));\n      });\n      return Promise\n        .all(moveItems)\n        .then(() => Promise.resolve());\n    }\n  }\n\n  private endTransition(): this {\n    this.updateItemsCurrentOffset();\n    this.isTransitioning = false;\n    this.config.afterTransition();\n    if (typeof this.doneTransitioning === 'function') {\n      this.doneTransitioning();\n      this.doneTransitioning = undefined;\n    }\n    return this;\n  }\n\n  private composeContainerScaleData(width: number, height: number): StackUpContainerScaleData  {\n    const maxWidth = Math.max(this.previousContainerWidth, width);\n    const maxHeight = Math.max(this.previousContainerHeight, height);\n    const requireScale = (\n      this.previousContainerWidth !== width\n      || this.previousContainerHeight !== height\n    );\n    return {\n      width, height,\n      currentWidth: this.previousContainerWidth,\n      currentHeight: this.previousContainerHeight,\n      maxWidth, maxHeight,\n      requireScale,\n    };\n  }\n\n  private prepareItemsBeforeMove(): this {\n    this.items.forEach(item => {\n      const requireMove: boolean = (\n        item.currentLeft !== item.left\n        || item.currentTop !== item.top\n      );\n      item.requireMove = requireMove;\n    });\n    return this;\n  }\n\n  private updateItemsCurrentOffset(): this {\n    this.items.forEach(item => {\n      item.currentLeft = item.left;\n      item.currentTop = item.top;\n    });\n    return this;\n  }\n\n  //stack (4)\n  //layout updates the containerHeight and updates items\n\n  private applyLayout(): this {\n    this.layout.setup();\n    if (this.items.length) this.layout.loop();\n    return this;\n  }\n\n  private resetLayout(): this {\n    this.containerHeight = 0;\n    this.layout.columnPointer = 0;\n    return this;\n  }\n\n  public append(items: HTMLElement | HTMLElement[]): Promise<void> {\n    return new Promise((resolve, reject) => {\n\n      const append = () => {\n        if (Array.isArray(items) === true) {\n          items = items as HTMLElement[];\n          items.forEach(item => {\n            if (DOMUtil.isHTMLElement(item) === true) {\n              const itemIndex = this.items.length;\n              if (this.appendItem(item) === true) {\n                this.layout.plot(itemIndex);\n              } else {\n                reject(new Error('StackUp.append: container element is undefined or not HTMLElement.'));\n              }\n            } else {\n              reject(new Error('StackUp.append: item is undefined or not HTMLElement.'));\n            }\n          });\n        } else {\n          if (DOMUtil.isHTMLElement(items) === true) {\n            const itemIndex = this.items.length;\n            if (this.appendItem(items as HTMLElement) === true) {\n              this.layout.plot(itemIndex);\n            } else {\n              reject(new Error('StackUp.append: container element is undefined or not HTMLElement.'));\n            }\n          } else {\n            reject(new Error('StackUp.append: item is undefined or not HTMLElement.'));\n          }\n        }\n        this\n          .draw()\n          .then(() => resolve())\n          .catch(() => reject());\n      };\n\n      if (this.isTransitioning === true) {\n        this.doneTransitioning = append;\n      } else {\n        append();\n      }\n    });\n  }\n\n  // This should be called if any item(s)\n  // is modified, added, or removed.\n  public reset(): Promise<void> {\n    return new Promise(resolve => {\n      const reset = () => {\n        this.containerWidth = 0;\n        this.containerHeight = 0;\n        this.items = [];\n        this\n          .getElements()\n          .populateItems()\n          .resetLayout()\n          .restack()\n        resolve();\n      };\n      if (this.isTransitioning === true) {\n        this.doneTransitioning = reset;\n      } else {\n        reset();\n      }\n    });\n  }\n\n  public restack(): Promise<void> {\n    return new Promise(resolve => {\n      const restack = () => {\n        this\n          .updateNumberOfColumns()\n          .resetLayout()\n          .applyLayout()\n          .draw();\n        resolve();\n      };\n      if (this.isTransitioning === true) {\n        this.doneTransitioning = restack;\n      } else {\n        restack();\n      }\n    });\n  }\n}\n","import {\n  DOMImage,\n} from '@nekobird/rocket';\n\nimport {\n  StackUp,\n} from '../../../stack-up/stack-up';\n\nconst containerElement = document.getElementById('container');\n\nconst images = [\n  'https://images.unsplash.com/photo-1526336024174-e58f5cdd8e13?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1268&q=80',\n  'https://images.unsplash.com/photo-1518791841217-8f162f1e1131?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=800&q=60',\n  'https://images.unsplash.com/photo-1548247416-ec66f4900b2e?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=800&q=60',\n  'https://images.unsplash.com/photo-1507984211203-76701d7bb120?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=800&q=60',\n];\n\nconst loadImages = stackup => {\n  images.forEach(source => {\n    DOMImage\n    .loadImage(source)\n    .then(payload => {\n      const item = document.createElement('DIV');\n      item.classList.add('item');\n      item.appendChild(payload.image);\n      containerElement.appendChild(item);\n      stackup\n        .append(item)\n        .catch(error => console.error(error));\n    });\n  });\n}\n\nconst stackup: StackUp = new StackUp({\n  beforeInitialize: () => {\n    const images = containerElement.querySelectorAll('img');\n    const promises = [];\n    images.forEach(img => {\n      promises.push(DOMImage.loadImage(img.src));\n    });\n    return Promise.all(promises).then(() => Promise.resolve());\n  },\n  getContainerElement: () => {\n    return document.getElementById('container');\n  },\n  getItemElements: () => {\n    return document.querySelectorAll('.item');\n  },\n\n  layout: 'optimized',\n  moveInSequence: false,\n  columnWidth: 200,\n  numberOfColumns: 3,\n  isFluid: true,\n  boundary: window,\n\n  scaleContainerInitial: (container, data) => {\n    if (data.requireScale === true) {\n      container.style.width = `${data.width}px`;\n      container.style.height = `${data.height}px`;\n    }\n    return Promise.resolve();\n  },\n  moveItem: data => {\n    if (data.requireMove === true) {\n      data.item.style.left = `${data.left}px`;\n      data.item.style.top = `${data.top}px`;\n    }\n    return Promise.resolve();\n  },\n});\n\nstackup.initialize().then(() => {\n  loadImages(stackup);\n  stackup.config.gutter = 40;\n  stackup.restack();\n});"]}